{
  "id": "errors/NG0950",
  "title": "NG0950: A required input is accessed before a value is set.",
  "contents": "<div class=\"content\">\n\n  <h1 id=\"ng0950-a-required-input-is-accessed-before-a-value-is-set\">NG0950: A required input is accessed before a value is set.<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0950#ng0950-a-required-input-is-accessed-before-a-value-is-set\"><i class=\"material-icons\">link</i></a></h1>\n\n  \n  \n\n  <div class=\"error-description\">\n    <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0950#description\"><i class=\"material-icons\">link</i></a></h2>\n    <p>A required input was accessed but no value was bound.</p>\n<p>This can happen when a required input is accessed too early in your directive or component.\nThis is commonly happening when the input is read as part of class construction.</p>\n<p>Inputs are guaranteed to be available in the <code>ngOnInit</code> lifecycle hook and afterwards.</p>\n<h2 id=\"fixing-the-error\">Fixing the error<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0950#fixing-the-error\"><i class=\"material-icons\">link</i></a></h2>\n<p>Access the required input in reactive contexts.\nFor example, in the template itself, inside a <code><a href=\"api/core/computed\" class=\"code-anchor\">computed</a></code>, or inside an effect.</p>\n<p>Alternatively, access the input inside the <code>ngOnInit</code> lifecycle hook, or later.</p>\n\n  </div>\n\n\n  \n</div>\n\n<!-- links to this doc:\n - errors\n-->\n<!-- links from this doc:\n - api/core/computed\n - errors/NG0950#description\n - errors/NG0950#fixing-the-error\n - errors/NG0950#ng0950-a-required-input-is-accessed-before-a-value-is-set\n-->"
}