{
  "id": "errors/NG0912",
  "title": "NG0912: Component ID generation collision detected",
  "contents": "<div class=\"content\">\n\n  <h1 id=\"ng0912-component-id-generation-collision-detected\">NG0912: Component ID generation collision detected<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0912#ng0912-component-id-generation-collision-detected\"><i class=\"material-icons\">link</i></a></h1>\n\n  \n  \n\n  <div class=\"error-description\">\n    <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0912#description\"><i class=\"material-icons\">link</i></a></h2>\n    <p>When creating components, Angular generates a unique component ID for each component. This is generated using the Angular component metadata, including but not limited:  selectors, the number of host bindings, class property names, view and content queries. When two components metadata are identical (often times sharing the same selector), an ID generation collision will occur.</p>\n<p>Component IDs are used in Angular internally:</p>\n<ul>\n<li>for extra annotations of DOM nodes for style encapsulation</li>\n<li>during <a href=\"guide/hydration\">hydration</a> to restore an application state after <a href=\"guide/ssr\">server-side rendering</a>.</li>\n</ul>\n<p>To avoid issues that might be caused by the component ID collision, it's recommended to resolve them as described below.</p>\n<p><strong> Example of a Component ID collision </strong></p>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'my-component',\n  template: 'complex-template',\n})\nclass SomeComponent {}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'my-component',\n  template: 'empty-template',\n})\nclass SomeMockedComponent {}\n</code-example>\n<p>Having these two components defined will trigger an ID generation collision and during development a warning will be displayed.</p>\n\n  </div>\n\n\n  \n  <br>\n\n  <div class=\"debugging\">\n    <h2 id=\"debugging-the-error\">Debugging the error<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0912#debugging-the-error\"><i class=\"material-icons\">link</i></a></h2>\n    <p>The warning message includes the class name of the two components whose IDs are colliding.</p>\n<p>The problem can be resolved using one of the solutions below:</p>\n<ol>\n<li>Change the selector of one of the two components. For example by using a pseudo-selector with no effect like <code>:not()</code> and a different tag name.</li>\n</ol>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'my-component:not(p)',\n  template: 'empty-template',\n})\nclass SomeMockedComponent {}\n</code-example>\n<ol start=\"2\">\n<li>Add an extra host attribute to one of the components.</li>\n</ol>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'my-component',\n  template: 'complex-template',\n  host: {'some-binding': 'some-value'},\n})\nclass SomeComponent {}\n</code-example>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  </div>\n  \n</div>\n\n<!-- links to this doc:\n - errors\n-->\n<!-- links from this doc:\n - api/core/Component\n - errors/NG0912#debugging-the-error\n - errors/NG0912#description\n - errors/NG0912#ng0912-component-id-generation-collision-detected\n - guide/hydration\n - guide/ssr\n-->"
}