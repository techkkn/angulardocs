{
  "id": "errors/NG0201",
  "title": "NG0201: No provider for {token} found!",
  "contents": "<div class=\"content\">\n\n  <h1 id=\"ng0201-no-provider-for-token-found\">NG0201: No provider for {token} found!<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0201#ng0201-no-provider-for-token-found\"><i class=\"material-icons\">link</i></a></h1>\n\n  \n  <div class=\"video-container\">\n    <iframe title=\"videoUrl\" src=\"https://www.youtube.com/embed/lAlOryf1-WU\" style=\"border: 0\" allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n  </div>\n  \n  \n\n  <div class=\"error-description\">\n    <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0201#description\"><i class=\"material-icons\">link</i></a></h2>\n    <p>You see this error when you try to inject a service but have not declared a corresponding provider. A provider is a mapping that supplies a value that you can inject into the constructor of a class in your application.</p>\n<p>Read more on providers in our <a href=\"guide/dependency-injection\">Dependency Injection guide</a>.</p>\n\n  </div>\n\n\n  \n  <br>\n\n  <div class=\"debugging\">\n    <h2 id=\"debugging-the-error\">Debugging the error<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0201#debugging-the-error\"><i class=\"material-icons\">link</i></a></h2>\n    <p>Work backwards from the object where the error states that a <a href=\"guide/architecture-services\">provider</a> is missing: <code>No provider for ${this}!</code>. This is commonly thrown in <a href=\"tutorial/tour-of-heroes/toh-pt4\">services</a>, which require non-existing providers.</p>\n<p>To fix the error ensure that your service is registered in the list of providers of an <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> or has the <code>@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a></code> decorator with a <code>providedIn</code> property at top.</p>\n<p>The most common solution is to add a provider in <code>@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a></code> using <code>providedIn</code>:</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>({ providedIn: 'app' })\n\n</code-example>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  </div>\n  \n</div>\n\n<!-- links to this doc:\n - errors\n - errors/NG2003\n-->\n<!-- links from this doc:\n - api/core/Injectable\n - api/core/NgModule\n - errors/NG0201#debugging-the-error\n - errors/NG0201#description\n - errors/NG0201#ng0201-no-provider-for-token-found\n - guide/architecture-services\n - guide/dependency-injection\n - tutorial/tour-of-heroes/toh-pt4\n-->"
}