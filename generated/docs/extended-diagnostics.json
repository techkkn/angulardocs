{
  "id": "extended-diagnostics",
  "title": "Extended Diagnostics",
  "contents": "\n\n\n\n\n<div class=\"content\">\n  <h1 id=\"extended-diagnostics\">Extended Diagnostics<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics#extended-diagnostics\"><i class=\"material-icons\">link</i></a></h1>\n<p>There are many coding patterns that are technically valid to the compiler or runtime, but which may have complex nuances or caveats.\nThese patterns may not have the intended effect expected by a developer, which often leads to bugs.\nThe Angular compiler includes \"extended diagnostics\" which identify many of these patterns, in order to warn developers about the potential issues and enforce common best practices within a codebase.</p>\n<h2 id=\"diagnostics\">Diagnostics<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics#diagnostics\"><i class=\"material-icons\">link</i></a></h2>\n<p>Currently, Angular supports the following extended diagnostics:</p>\n<ul>\n<li><a href=\"extended-diagnostics/NG8101\">NG8101 - <code>invalidBananaInBox</code></a></li>\n<li><a href=\"extended-diagnostics/NG8102\">NG8102 - <code>nullishCoalescingNotNullable</code></a></li>\n<li><a href=\"extended-diagnostics/NG8103\">NG8103 - <code>missingControlFlowDirective</code></a></li>\n<li><a href=\"extended-diagnostics/NG8104\">NG8104 - <code>textAttributeNotBinding</code></a></li>\n<li><a href=\"extended-diagnostics/NG8105\">NG8105 - <code>missingNgForOfLet</code></a></li>\n<li><a href=\"extended-diagnostics/NG8106\">NG8106 - <code>suffixNotSupported</code></a></li>\n<li><a href=\"extended-diagnostics/NG8107\">NG8107 - <code>optionalChainNotNullable</code></a></li>\n<li><a href=\"extended-diagnostics/NG8108\">NG8108 - <code>skipHydrationNotStatic</code></a></li>\n<li><a href=\"extended-diagnostics/NG8109\">NG8109 - <code>interpolatedSignalNotInvoked</code></a></li>\n</ul>\n<h2 id=\"configuration\">Configuration<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics#configuration\"><i class=\"material-icons\">link</i></a></h2>\n<p>Extended diagnostics are warnings by default and do not block compilation.\nEach diagnostic can be configured as either:</p>\n<ul>\n<li><code>warning</code> (default) - The compiler emits the diagnostic as a warning but does not block\ncompilation. The compiler will still exit with status code 0, even if warnings are emitted.</li>\n<li><code>error</code> - The compiler emits the diagnostic as an error and fails the compilation.\nThe compiler will exit with a non-zero status code if one or more errors are emitted.</li>\n<li><code>suppress</code> - The compiler does <em>not</em> emit the diagnostic at all.</li>\n</ul>\n<p>Check severity can be configured in the project's <code>tsconfig.json</code> file:</p>\n<code-example format=\"jsonc\" language=\"jsonc\">\n\n{\n  \"angularCompilerOptions\": {\n    \"extendedDiagnostics\": {\n      // The categories to use for specific diagnostics.\n      \"checks\": {\n        // Maps check name to its category.\n        \"invalidBananaInBox\": \"suppress\"\n      },\n\n      // The category to use for any diagnostics not listed in `checks` above.\n      \"defaultCategory\": \"error\"\n    }\n  }\n}\n\n</code-example>\n<p>The <code>checks</code> field maps the name of individual diagnostics to their associated category.\nSee <a href=\"extended-diagnostics#diagnostics\">Diagnostics</a> for a complete list of extended diagnostics and the name to use for configuring them.</p>\n<p>The <code>defaultCategory</code> field is used for any diagnostics that are not explicitly listed under <code>checks</code>.\nIf not set, such diagnostics will be treated as <code>warning</code>.</p>\n<p>Extended diagnostics will emit when <a href=\"guide/template-typecheck#strict-mode\"><code>strictTemplates</code></a> is enabled.\nThis is required to allow the compiler to better understand Angular template types and provide accurate and meaningful diagnostics.</p>\n<h2 id=\"semantic-versioning\">Semantic Versioning<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics#semantic-versioning\"><i class=\"material-icons\">link</i></a></h2>\n<p>The Angular team intends to add or enable new extended diagnostics in <strong>minor</strong> versions of Angular (see <a href=\"https://docs.npmjs.com/about-semantic-versioning\">semver</a>).\nThis means that upgrading Angular may show new warnings in your existing codebase.\nThis enables the team to deliver features more quickly and to make extended diagnostics more accessible to developers.</p>\n<p>However, setting <code>\"defaultCategory\": \"error\"</code> will promote such warnings to hard errors.\nThis can cause a minor version upgrade to introduce compilation errors, which may be seen as a semver non-compliant breaking change.\nAny new diagnostics can be suppressed or demoted to warnings via the above <a href=\"extended-diagnostics#configuration\">configuration</a>, so the impact of a new diagnostic should be minimal to\nprojects that treat extended diagnostics as errors by default.\nDefaulting to error is a very powerful tool; just be aware of this semver caveat when deciding if <code>error</code> is the right default for your project.</p>\n<h2 id=\"new-diagnostics\">New Diagnostics<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"extended-diagnostics#new-diagnostics\"><i class=\"material-icons\">link</i></a></h2>\n<p>The Angular team is always open to suggestions about new diagnostics that could be added.\nExtended diagnostics should generally:</p>\n<ul>\n<li>Detect a common, non-obvious developer mistake with Angular templates</li>\n<li>Clearly articulate why this pattern can lead to bugs or unintended behavior</li>\n<li>Suggest one or more clear solutions</li>\n<li>Have a low, preferably zero, false-positive rate</li>\n<li>Apply to the vast majority of Angular applications (not specific to an unofficial library)</li>\n<li>Improve program correctness or performance (not style, that responsibility falls to a linter)</li>\n</ul>\n<p>If you have an idea for a compiler check which fits these criteria, consider filing a <a href=\"https://github.com/angular/angular/issues/new?template=2-feature-request.yaml\">feature request</a>.</p>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">Last reviewed on Mon Feb 28 2022</div>\n</div>\n\n<!-- links to this doc:\n - extended-diagnostics/NG8101\n - extended-diagnostics/NG8102\n - extended-diagnostics/NG8104\n - extended-diagnostics/NG8106\n - extended-diagnostics/NG8107\n - extended-diagnostics/NG8108\n-->\n<!-- links from this doc:\n - extended-diagnostics#configuration\n - extended-diagnostics#diagnostics\n - extended-diagnostics#extended-diagnostics\n - extended-diagnostics#new-diagnostics\n - extended-diagnostics#semantic-versioning\n - extended-diagnostics/NG8101\n - extended-diagnostics/NG8102\n - extended-diagnostics/NG8103\n - extended-diagnostics/NG8104\n - extended-diagnostics/NG8105\n - extended-diagnostics/NG8106\n - extended-diagnostics/NG8107\n - extended-diagnostics/NG8108\n - extended-diagnostics/NG8109\n - guide/template-typecheck#strict-mode\n - https://docs.npmjs.com/about-semantic-versioning\n - https://github.com/angular/angular/issues/new?template=2-feature-request.yaml\n-->"
}