{
  "id": "tutorial/first-app/first-app-lesson-07",
  "title": "Lesson 7 - Add an interpolation to a component’s template",
  "contents": "\n\n\n\n\n<div class=\"content\">\n  <h1 id=\"lesson-7---add-an-interpolation-to-a-components-template\">Lesson 7 - Add an interpolation to a component’s template<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-07#lesson-7---add-an-interpolation-to-a-components-template\"><i class=\"material-icons\">link</i></a></h1>\n<p>This tutorial lesson demonstrates how to add interpolation to Angular templates in order to display dynamic data in a template.</p>\n<p><strong>Estimated time</strong>: ~10 minutes</p>\n<p><strong>Starting code:</strong> <live-example name=\"first-app-lesson-06\"></live-example></p>\n<p><strong>Completed code:</strong> <live-example name=\"first-app-lesson-07\"></live-example></p>\n<h2 id=\"what-youll-learn\">What you'll learn<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-07#what-youll-learn\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li>Your app will display interpolated values in the <code>HousingLocationComponent</code> template.</li>\n<li>Your app will render a housing location data to the browser.</li>\n</ul>\n<h2 id=\"conceptual-preview-of-interpolation\">Conceptual preview of interpolation<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-07#conceptual-preview-of-interpolation\"><i class=\"material-icons\">link</i></a></h2>\n<p>In this step you will display values (properties and <code><a href=\"api/core/Input\" class=\"code-anchor\">Input</a></code> values) in a template using interpolation.</p>\n<p>Using the <code>{{ expression }}</code> in Angular templates, you can render values from properties, <code>Inputs</code> and valid JavaScript expressions.</p>\n<p>For a more in depth explanation, please refer to the <a href=\"guide/interpolation\">Displaying values with interpolation</a> guide.</p>\n<h2 id=\"step-1---update-housinglocationcomponent-template-to-include-interpolated-values\">Step 1 - Update <code>HousingLocationComponent</code> template to include interpolated values<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-07#step-1---update-housinglocationcomponent-template-to-include-interpolated-values\"><i class=\"material-icons\">link</i></a></h2>\n<p>This step adds new HTML structure and interpolated values in the <code>HousingLocationComponent</code> template.</p>\n<p>In the code editor:</p>\n<ol>\n<li>\n<p>Navigate to <code>src/app/housing-location/housing-location.component.ts</code></p>\n</li>\n<li>\n<p>In the template property of the <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> decorator, replace the existing HTML markup with the following code:</p>\n<code-example header=\"Update HousingLocationComponent template\" path=\"first-app-lesson-07/src/app/housing-location/housing-location.component.ts\" region=\"add-listing-details\">\ntemplate: `\n  &#x3C;section class=\"listing\">\n    &#x3C;<a href=\"api/common/NgOptimizedImage\" class=\"code-anchor\">img</a> class=\"listing-photo\" [src]=\"housingLocation.photo\" alt=\"Exterior photo of {{housingLocation.name}}\">\n    &#x3C;h2 class=\"listing-heading\">{{ housingLocation.name }}&#x3C;/h2>\n    &#x3C;p class=\"listing-location\">{{ housingLocation.city}}, {{housingLocation.state }}&#x3C;/p>\n  &#x3C;/section>\n  `,\n\n</code-example>\n<p>In this updated template code you have used property binding to bind the <code>housingLocation.photo</code> to the <code>src</code> attribute. The <code>alt</code> attribute uses interpolation to give more context to the alt text of the image.</p>\n<p>You use interpolation to include the values for <code>name</code>, <code>city</code> and <code>state</code> of the <code>housingLocation</code> property.</p>\n</li>\n</ol>\n<h2 id=\"step-2---confirm-the-changes-render-in-the-browser\">Step 2 - Confirm the changes render in the browser<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-07#step-2---confirm-the-changes-render-in-the-browser\"><i class=\"material-icons\">link</i></a></h2>\n<ol>\n<li>Save all changes.</li>\n<li>Open the browser and confirm that the app renders the photo, city and state sample data.\n<section class=\"lightbox\">\n<img alt=\"browser frame of homes-app displaying logo, filter text input box, search button and the same housing location UI card\" src=\"generated/images/guide/faa/homes-app-lesson-07-step-2.png\" width=\"1629\" height=\"731\">\n</section>\n</li>\n</ol>\n<h2 id=\"lesson-review\">Lesson review<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-07#lesson-review\"><i class=\"material-icons\">link</i></a></h2>\n<p>In this lesson, you added a new HTML structure and used Angular template syntax to render values in the <code>HousingLocation</code> template. Now, you have two important skills:</p>\n<ul>\n<li>passing data to components</li>\n<li>Interpolating values into a template</li>\n</ul>\n<p>With these skills, your app can now share data and display dynamic values in the browser. Great work so far.</p>\n<p>If you are having any trouble with this lesson, you can review the completed code for it in the <live-example></live-example>.</p>\n<h2 id=\"next-steps\">Next steps<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-07#next-steps\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li><a href=\"tutorial/first-app/first-app-lesson-08\">Lesson 8 - Use *ngFor to list objects in component</a></li>\n</ul>\n<h2 id=\"for-more-information-about-the-topics-covered-in-this-lesson-visit\">For more information about the topics covered in this lesson, visit:<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-07#for-more-information-about-the-topics-covered-in-this-lesson-visit\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li><a href=\"/guide/interpolation\">Displaying values with interpolation</a></li>\n<li><a href=\"guide/template-syntax\">Template syntax</a></li>\n</ul>\n\n  <div class=\"reviewed\">Last reviewed on Tue Jul 11 2023</div>\n</div>\n\n<!-- links to this doc:\n - tutorial/first-app/first-app-lesson-06\n-->\n<!-- links from this doc:\n - /guide/interpolation\n - api/common/NgOptimizedImage\n - api/core/Component\n - api/core/Input\n - guide/interpolation\n - guide/template-syntax\n - tutorial/first-app/first-app-lesson-07#conceptual-preview-of-interpolation\n - tutorial/first-app/first-app-lesson-07#for-more-information-about-the-topics-covered-in-this-lesson-visit\n - tutorial/first-app/first-app-lesson-07#lesson-7---add-an-interpolation-to-a-components-template\n - tutorial/first-app/first-app-lesson-07#lesson-review\n - tutorial/first-app/first-app-lesson-07#next-steps\n - tutorial/first-app/first-app-lesson-07#step-1---update-housinglocationcomponent-template-to-include-interpolated-values\n - tutorial/first-app/first-app-lesson-07#step-2---confirm-the-changes-render-in-the-browser\n - tutorial/first-app/first-app-lesson-07#what-youll-learn\n - tutorial/first-app/first-app-lesson-08\n-->"
}