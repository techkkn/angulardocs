{
  "id": "tutorial/first-app/first-app-lesson-09",
  "title": "Lesson 09: Angular services",
  "contents": "\n\n\n\n\n<div class=\"content\">\n  <h1 id=\"lesson-09-angular-services\">Lesson 09: Angular services<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#lesson-09-angular-services\"><i class=\"material-icons\">link</i></a></h1>\n<p>This tutorial lesson demonstrates how to create an Angular service and use dependency injection to include it in your app.</p>\n<p><strong>Estimated time</strong>: ~15 minutes</p>\n<p><strong>Starting code:</strong> <live-example name=\"first-app-lesson-08\"></live-example></p>\n<p><strong>Completed code:</strong> <live-example name=\"first-app-lesson-09\"></live-example></p>\n<h2 id=\"what-youll-learn\">What you'll learn<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#what-youll-learn\"><i class=\"material-icons\">link</i></a></h2>\n<p>Your app has a service to serve the data to your app.\nAt the end of this lesson, the service reads data from local, static data.\nIn a later lesson, you'll update the service to get data from a web service.</p>\n<h2 id=\"conceptual-preview-of-services\">Conceptual preview of services<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#conceptual-preview-of-services\"><i class=\"material-icons\">link</i></a></h2>\n<p>This tutorial introduces Angular services and dependency injection.</p>\n<!-- markdownLint-disable MD001 -->\n<h4 id=\"angular-services\">Angular services<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#angular-services\"><i class=\"material-icons\">link</i></a></h4>\n<p><em>Angular services</em> provide a way for you to separate Angular app data and functions that can be used by multiple components in your app.\nTo be used by multiple components, a service must be made <em>injectable</em>.\nServices that are injectable and used by a component become dependencies of that component.\nThe component depends on those services and can't function without them.</p>\n<h4 id=\"dependency-injection\">Dependency injection<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#dependency-injection\"><i class=\"material-icons\">link</i></a></h4>\n<p><em>Dependency injection</em> is the mechanism that manages the dependencies of an app's components and the services that other components can use.</p>\n<h2 id=\"step-1---create-a-new-service-for-your-app\">Step 1 - Create a new service for your app<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#step-1---create-a-new-service-for-your-app\"><i class=\"material-icons\">link</i></a></h2>\n<p>This step creates an injectable service for your app.</p>\n<p>In the <strong>Terminal</strong> pane of your IDE:</p>\n<ol>\n<li>\n<p>In your project directory, navigate to the <code>first-app</code> directory.</p>\n</li>\n<li>\n<p>In the <code>first-app</code> directory, run this command to create the new service.</p>\n<code-example format=\"shell\" language=\"shell\">\n\nng generate service housing --skip-tests\n\n</code-example>\n</li>\n<li>\n<p>Run <code>ng serve</code> to build the app and serve it to <code>http://localhost:4200</code>.</p>\n</li>\n<li>\n<p>Confirm that the app builds without error.\nCorrect any errors before you continue to the next step.</p>\n</li>\n</ol>\n<h2 id=\"step-2---add-static-data-to-the-new-service\">Step 2 - Add static data to the new service<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#step-2---add-static-data-to-the-new-service\"><i class=\"material-icons\">link</i></a></h2>\n<p>This step adds some sample data to your new service.\nIn a later lesson, you'll replace the static data with a web interface to get data as you might in a real app.\nFor now, your app's new service uses the data that has, so far, been created locally in <code>HomeComponent</code>.</p>\n<p>In the <strong>Edit</strong> pane of your IDE:</p>\n<ol>\n<li>\n<p>In <code>src/app/home/home.component.ts</code>, from <code>HomeComponent</code>, copy the <code>housingLocationList</code> variable and its array value.</p>\n</li>\n<li>\n<p>In <code>src/app/housing.service.ts</code>:</p>\n<ol>\n<li>\n<p>Inside the <code>HousingService</code> class, paste the variable that you copied from <code>HomeComponent</code> in the previous step.</p>\n</li>\n<li>\n<p>Inside the <code>HousingService</code> class, paste these functions after the data you just copied.\nThese functions allow dependencies to access the service's data.</p>\n<code-example header=\"Service functions in src/app/housing.service.ts\" path=\"first-app-lesson-09/src/app/housing.service.ts\" region=\"service-functions\">\ngetAllHousingLocations(): HousingLocation[] {\n  return this.housingLocationList;\n}\n\ngetHousingLocationById(id: number): HousingLocation | undefined {\n  return this.housingLocationList.find(housingLocation => housingLocation.id === id);\n}\n\n</code-example>\n<p>You will need these functions in a future lesson. For now, it is enough to understand that these functions return either a specific <code>HousingLocation</code> by id or the entire list.</p>\n</li>\n<li>\n<p>Add a file level import for the <code>HousingLocation</code>.</p>\n<code-example header=\"Import HousingLocation type in  src/app/housing.service.ts\" path=\"first-app-lesson-09/src/app/housing.service.ts\" region=\"import-housing-location\">\nimport { HousingLocation } from './housinglocation';\n\n</code-example>\n</li>\n</ol>\n</li>\n<li>\n<p>Confirm that the app builds without error.\nCorrect any errors before you continue to the next step.</p>\n</li>\n</ol>\n<h2 id=\"step-3---inject-the-new-service-into-homecomponent\">Step 3 - Inject the new service into <code>HomeComponent</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#step-3---inject-the-new-service-into-homecomponent\"><i class=\"material-icons\">link</i></a></h2>\n<p>This step injects the new service into your app's <code>HomeComponent</code> so that it can read the app's data from a service.\nIn a later lesson, you'll replace the static data with a live data source to get data as you might in a real app.</p>\n<p>In the <strong>Edit</strong> pane of your IDE, in <code>src/app/home/home.component.ts</code>:</p>\n<ol>\n<li>\n<p>At the top of <code>src/app/home/home.component.ts</code>, add the <code>inject</code> to the items imported from <code>@angular/core</code>. This will import the <code>inject</code> function into the <code>HomeComponent</code> class.</p>\n<code-example header=\"Update to src/app/home/home.component.ts\" path=\"first-app-lesson-09/src/app/home/home.component.ts\" region=\"import-inject\">\nimport { <a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, inject } from '@angular/core';\n\n</code-example>\n</li>\n<li>\n<p>Add a new file level import for the <code>HousingService</code>:</p>\n<code-example header=\"Add import to src/app/home/home.component.ts\" path=\"first-app-lesson-09/src/app/home/home.component.ts\" region=\"import-service\">\nimport { HousingService } from '../housing.service';\n\n</code-example>\n</li>\n<li>\n<p>From <code>HomeComponent</code>, delete the <code>housingLocationList</code> array entries and assign <code>housingLocationList</code> the value of empty array (<code>[]</code>). In a few steps you will update the code to pull the data from the <code>HousingService</code>.</p>\n</li>\n<li>\n<p>In <code>HomeComponent</code>, add the following code to inject the new service and initialize the data for the app. The <code>constructor</code> is the first function that runs when this component is created. The code in the <code>constructor</code> will assign the <code>housingLocationList</code> the value returned from the call to <code>getAllHousingLocations</code>.</p>\n<code-example header=\"Initialize data from service in src/app/home/home.component.ts\" path=\"first-app-lesson-09/src/app/home/home.component.ts\" region=\"use-new-service\">\nhousingLocationList: HousingLocation[] = [];\nhousingService: HousingService = inject(HousingService);\n\nconstructor() {\n  this.housingLocationList = this.housingService.getAllHousingLocations();\n}\n\n</code-example>\n</li>\n<li>\n<p>Save the changes to <code>src/app/home/home.component.ts</code> and confirm your app builds without error.\nCorrect any errors before you continue to the next step.</p>\n</li>\n</ol>\n<h2 id=\"lesson-review\">Lesson review<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#lesson-review\"><i class=\"material-icons\">link</i></a></h2>\n<p>In this lesson, you added an Angular service to your app and injected it into the <code>HomeComponent</code> class.\nThis compartmentalizes how your app gets its data.\nFor now, the new service gets its data from a static array of data.\nIn a later lesson, you'll refactor the service to get its data from an API endpoint.</p>\n<p>If you are having any trouble with this lesson, you can review the completed code for it in the <live-example></live-example>.</p>\n<h2 id=\"next-steps\">Next steps<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#next-steps\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li><a href=\"tutorial/first-app/first-app-lesson-10\">Lesson 10 - Add routes to the application</a></li>\n</ul>\n<h2 id=\"more-information\">More information<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"tutorial/first-app/first-app-lesson-09#more-information\"><i class=\"material-icons\">link</i></a></h2>\n<p>For more information about the topics covered in this lesson, visit:</p>\n<!-- vale Angular.Google_WordListSuggestions = NO -->\n<ul>\n<li><a href=\"guide/creating-injectable-service\">Creating an injectable service</a></li>\n<li><a href=\"guide/dependency-injection-overview\">Dependency injection in Angular</a></li>\n<li><a href=\"cli/generate#service\">ng generate service</a></li>\n<li><a href=\"cli/generate\">ng generate</a></li>\n</ul>\n\n  <div class=\"reviewed\">Last reviewed on Sat Jul 15 2023</div>\n</div>\n\n<!-- links to this doc:\n - tutorial/first-app/first-app-lesson-08\n-->\n<!-- links from this doc:\n - api/core/Component\n - cli/generate\n - cli/generate#service\n - guide/creating-injectable-service\n - guide/dependency-injection-overview\n - tutorial/first-app/first-app-lesson-09#angular-services\n - tutorial/first-app/first-app-lesson-09#conceptual-preview-of-services\n - tutorial/first-app/first-app-lesson-09#dependency-injection\n - tutorial/first-app/first-app-lesson-09#lesson-09-angular-services\n - tutorial/first-app/first-app-lesson-09#lesson-review\n - tutorial/first-app/first-app-lesson-09#more-information\n - tutorial/first-app/first-app-lesson-09#next-steps\n - tutorial/first-app/first-app-lesson-09#step-1---create-a-new-service-for-your-app\n - tutorial/first-app/first-app-lesson-09#step-2---add-static-data-to-the-new-service\n - tutorial/first-app/first-app-lesson-09#step-3---inject-the-new-service-into-homecomponent\n - tutorial/first-app/first-app-lesson-09#what-youll-learn\n - tutorial/first-app/first-app-lesson-10\n-->"
}