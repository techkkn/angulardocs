{
  "id": "api/forms/FormGroup",
  "title": "FormGroup",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/forms\", \"name\": \"@angular/forms\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/forms/FormGroup\", \"name\": \"FormGroup\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/forms\">@angular/forms</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L45-L590\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"formgroup\">FormGroup<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#formgroup\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    <label class=\"github-links api-status-label final\" title=\"This class should not be extended.\">\n      <a href=\"https://github.com/angular/angular/tree/17.3.12/docs/PUBLIC_API.md#final-classes\">final</a>\n    </label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>Tracks the value and validity state of a group of <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> instances.</p>\n\n    <p><a href=\"api/forms/FormGroup#description\">See more...</a></p>\n  </section><section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>&#x3C;TControl extends {\n    [K in keyof TControl]: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any>;\n} = any> extends <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;ɵTypedOrUntyped&#x3C;TControl, ɵFormGroupValue&#x3C;TControl>, any>, ɵTypedOrUntyped&#x3C;TControl, ɵFormGroupRawValue&#x3C;TControl>, any>> {\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#constructor()\"><span class=\"member-name\">constructor</span>(controls: TControl, validatorOrOpts?: ValidatorFn | AbstractControlOptions | ValidatorFn[], asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[])</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#controls\"><span class=\"member-name\">controls</span>: ɵTypedOrUntyped&#x3C;TControl, TControl, {...}</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#registerControl\"><span class=\"member-name\">registerControl</span>&#x3C;K extends string &#x26; keyof TControl>(name: K, control: TControl[K]): TControl[K]</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#registerControl\"><span class=\"member-name\">registerControl</span>&#x3C;K extends string &#x26; keyof TControl>(name: K, control: TControl[K]): TControl[K]</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#registerControl\"><span class=\"member-name\">registerControl</span>(name: string, control: AbstractControl&#x3C;any, any>): AbstractControl&#x3C;any></a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#addControl\"><span class=\"member-name\">addControl</span>&#x3C;K extends string &#x26; keyof TControl>(name: K, control: Required&#x3C;TControl>[K], options: { emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#addControl\"><span class=\"member-name\">addControl</span>(name: string, control: AbstractControl&#x3C;any, any>, options?: { emitEvent?: boolean; }): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#addControl\"><span class=\"member-name\">addControl</span>&#x3C;K extends string &#x26; keyof TControl>(name: K, control: Required&#x3C;TControl>[K], options?: { emitEvent?: boolean; }): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#removeControl\"><span class=\"member-name\">removeControl</span>(name: string, options: { emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#removeControl\"><span class=\"member-name\">removeControl</span>(name: string, options?: { emitEvent?: boolean; }): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#removeControl\"><span class=\"member-name\">removeControl</span>&#x3C;S extends string>(name: ɵOptionalKeys&#x3C;TControl> &#x26; S, options?: { emitEvent?: boolean; }): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#setControl\"><span class=\"member-name\">setControl</span>&#x3C;K extends string &#x26; keyof TControl>(name: K, control: TControl[K], options: { emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#setControl\"><span class=\"member-name\">setControl</span>&#x3C;K extends string &#x26; keyof TControl>(name: K, control: TControl[K], options?: { emitEvent?: boolean; }): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#setControl\"><span class=\"member-name\">setControl</span>(name: string, control: AbstractControl&#x3C;any, any>, options?: { emitEvent?: boolean; }): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#contains\"><span class=\"member-name\">contains</span>&#x3C;K extends string &#x26; keyof TControl>(controlName: K): boolean</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#contains\"><span class=\"member-name\">contains</span>&#x3C;K extends string>(controlName: K): boolean</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#contains\"><span class=\"member-name\">contains</span>(controlName: string): boolean</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#setValue\"><span class=\"member-name\">setValue</span>(value: ɵIsAny&#x3C;TControl, { [key: string]: any; }, { [K in keyof TControl]: ɵRawValue&#x3C;TControl[K]>; }>, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#patchValue\"><span class=\"member-name\">patchValue</span>(value: ɵIsAny&#x3C;TControl, { [key: string]: any; }, Partial&#x3C;{ [K in keyof TControl]: ɵValue&#x3C;TControl[K]>; }>>, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#reset\"><span class=\"member-name\">reset</span>(value: ɵIsAny&#x3C;TControl, any, ɵIsAny&#x3C;TControl, { [key: string]: any; }, Partial&#x3C;{ [K in keyof TControl]: ɵValue&#x3C;TControl[K]>; }>>> = {} as unknown as ɵFormGroupValue&#x3C;TControl>, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/FormGroup#getRawValue\"><span class=\"member-name\">getRawValue</span>(): ɵTypedOrUntyped&#x3C;TControl, ɵFormGroupRawValue&#x3C;TControl>, any></a>\n\n  // inherited from <a class=\"code-anchor\" href=\"api/forms/AbstractControl\">forms/AbstractControl</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#constructor()\"><span class=\"member-name\">constructor</span>(validators: ValidatorFn | ValidatorFn[], asyncValidators: AsyncValidatorFn | AsyncValidatorFn[])</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#value\"><span class=\"member-name\">value</span>: TValue</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#validator\"><span class=\"member-name\">validator</span>: ValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#asyncValidator\"><span class=\"member-name\">asyncValidator</span>: AsyncValidatorFn | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#parent\"><span class=\"member-name\">parent</span>: FormGroup | FormArray | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#status\"><span class=\"member-name\">status</span>: FormControlStatus</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valid\"><span class=\"member-name\">valid</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#invalid\"><span class=\"member-name\">invalid</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pending\"><span class=\"member-name\">pending</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#disabled\"><span class=\"member-name\">disabled</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#enabled\"><span class=\"member-name\">enabled</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#errors\"><span class=\"member-name\">errors</span>: ValidationErrors | null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pristine\"><span class=\"member-name\">pristine</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#dirty\"><span class=\"member-name\">dirty</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#touched\"><span class=\"member-name\">touched</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#untouched\"><span class=\"member-name\">untouched</span>: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valueChanges\"><span class=\"member-name\">valueChanges</span>: Observable&#x3C;TValue></a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#statusChanges\"><span class=\"member-name\">statusChanges</span>: Observable&#x3C;FormControlStatus></a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateOn\"><span class=\"member-name\">updateOn</span>: FormHooks</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#root\"><span class=\"member-name\">root</span>: AbstractControl</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValidators\"><span class=\"member-name\">setValidators</span>(validators: ValidatorFn | ValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#setAsyncValidators\"><span class=\"member-name\">setAsyncValidators</span>(validators: AsyncValidatorFn | AsyncValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#addValidators\"><span class=\"member-name\">addValidators</span>(validators: ValidatorFn | ValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#addAsyncValidators\"><span class=\"member-name\">addAsyncValidators</span>(validators: AsyncValidatorFn | AsyncValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#removeValidators\"><span class=\"member-name\">removeValidators</span>(validators: ValidatorFn | ValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#removeAsyncValidators\"><span class=\"member-name\">removeAsyncValidators</span>(validators: AsyncValidatorFn | AsyncValidatorFn[]): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasValidator\"><span class=\"member-name\">hasValidator</span>(validator: ValidatorFn): boolean</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasAsyncValidator\"><span class=\"member-name\">hasAsyncValidator</span>(validator: AsyncValidatorFn): boolean</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearValidators\"><span class=\"member-name\">clearValidators</span>(): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearAsyncValidators\"><span class=\"member-name\">clearAsyncValidators</span>(): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsTouched\"><span class=\"member-name\">markAsTouched</span>(opts: { onlySelf?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAllAsTouched\"><span class=\"member-name\">markAllAsTouched</span>(): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsUntouched\"><span class=\"member-name\">markAsUntouched</span>(opts: { onlySelf?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsDirty\"><span class=\"member-name\">markAsDirty</span>(opts: { onlySelf?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPristine\"><span class=\"member-name\">markAsPristine</span>(opts: { onlySelf?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPending\"><span class=\"member-name\">markAsPending</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#disable\"><span class=\"member-name\">disable</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#enable\"><span class=\"member-name\">enable</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#setParent\"><span class=\"member-name\">setParent</span>(parent: FormGroup&#x3C;any> | FormArray&#x3C;any>): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValue\">abstract <span class=\"member-name\">setValue</span>(value: TRawValue, options?: Object): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#patchValue\">abstract <span class=\"member-name\">patchValue</span>(value: TValue, options?: Object): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#reset\">abstract <span class=\"member-name\">reset</span>(value?: TValue, options?: Object): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#getRawValue\"><span class=\"member-name\">getRawValue</span>(): any</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateValueAndValidity\"><span class=\"member-name\">updateValueAndValidity</span>(opts: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#setErrors\"><span class=\"member-name\">setErrors</span>(errors: ValidationErrors, opts: { emitEvent?: boolean; } = {}): void</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#get\"><span class=\"member-name\">get</span>&#x3C;P extends string | ((string | number)[])>(path: P): AbstractControl&#x3C;ɵGetProperty&#x3C;TRawValue, P>> | null</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#get\"><span class=\"member-name\">get</span>&#x3C;P extends string | (readonly (string | number)[])>(path: P): AbstractControl&#x3C;ɵGetProperty&#x3C;TRawValue, P>> | null</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#get\"><span class=\"member-name\">get</span>&#x3C;P extends string | Array&#x3C;string | number>>(path: P): AbstractControl&#x3C;ɵGetProperty&#x3C;TRawValue, P>> | null</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#getError\"><span class=\"member-name\">getError</span>(errorCode: string, path?: string | (string | number)[]): any</a><br><a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasError\"><span class=\"member-name\">hasError</span>(errorCode: string, path?: string | (string | number)[]): boolean</a>\n}\n</code-example>\n\n  <div class=\"descendants class\">\n    <h2 id=\"subclasses\">Subclasses<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#subclasses\"><i class=\"material-icons\">link</i></a></h2>\n    \n<ul>\n  <li>\n    <code><a href=\"api/forms/FormRecord\" class=\"code-anchor\">FormRecord</a></code>\n    \n  </li>\n</ul>\n  </div>\n</section>\n\n  \n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>A <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> aggregates the values of each child <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> into one object,\nwith each control name as the key.  It calculates its status by reducing the status values\nof its children. For example, if one of the controls in a group is invalid, the entire\ngroup becomes invalid.</p>\n<p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> is one of the four fundamental building blocks used to define forms in Angular,\nalong with <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code>, <code><a href=\"api/forms/FormArray\" class=\"code-anchor\">FormArray</a></code>, and <code><a href=\"api/forms/FormRecord\" class=\"code-anchor\">FormRecord</a></code>.</p>\n<p>When instantiating a <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>, pass in a collection of child controls as the first\nargument. The key for each child registers the name for the control.</p>\n<p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> is intended for use cases where the keys are known ahead of time.\nIf you need to dynamically add and remove controls, use <a href=\"api/forms/FormRecord\"><code>FormRecord</code></a> instead.</p>\n<p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> accepts an optional type parameter <code>TControl</code>, which is an object type with inner\ncontrol types as values.</p>\n  <p>Further information is available in the <a href=\"api/forms/FormGroup#usage-notes\">Usage Notes...</a></p>\n</section>\n  \n<h2 id=\"constructor\">Constructor<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#constructor\"><i class=\"material-icons\">link</i></a></h2>\n<a id=\"constructor()\"></a>\n<table class=\"is-full-width method-table constructor\">\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Creates a new <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> instance.</p>\n\n        <p class=\"final-message\">\n          This class is \"final\" and should not be extended.\n          See the <a href=\"https://github.com/angular/angular/tree/17.3.12/docs/PUBLIC_API.md#final-classes\">public API notes</a>.\n        </p>\n        </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">constructor</span>(controls: TControl, validatorOrOpts?: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[], asyncValidator?: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[])</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table constructor-overload-parameters\">\n  <tbody>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>controls</code>\n      </td>\n      <td class=\"param-type\"><code>TControl</code></td>\n      <td class=\"param-description\">\n        <p>A collection of child controls. The key for each child is the name\nunder which it is registered.</p>\n\n      </td>\n    </tr>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>validatorOrOpts</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a> | <a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a> | <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p>A synchronous validator function, or an array of\nsuch functions, or an <code><a href=\"api/forms/AbstractControlOptions\" class=\"code-anchor\">AbstractControlOptions</a></code> object that contains validation functions\nand a validation trigger.</p>\n\n        <p>Optional. Default is <code>undefined</code>.</p>\n\n      </td>\n    </tr>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>asyncValidator</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a> | <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]</code></td>\n      <td class=\"param-description\">\n        <p>A single async validator or array of async validator functions</p>\n\n        <p>Optional. Default is <code>undefined</code>.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<section class=\"instance-properties\">\n  <h2 id=\"properties\">Properties<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"controls\"></a>\n          <code class=\"\"><span class=\"member-name\">controls</span>: ɵTypedOrUntyped&#x3C;TControl, TControl, {\n    [key: string]: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any>;\n}></code>\n        </td>\n        <td>\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n<section class=\"instance-methods\">\n  <h2 id=\"methods\">Methods<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"registerControl\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"registercontrol\">registerControl()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#registercontrol\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L210-L217\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p>Registers a control with the group's list of controls. In a strongly-typed group, the control\nmust be in the group's type (possibly as an optional key).</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">registerControl</span>&#x3C;K extends string &#x26; keyof TControl>(name: K, control: TControl[K]): TControl[K]</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-1\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>K</code></td>\n      <td class=\"param-description\">\n        <p>The control name to register in the collection</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>control</code>\n      </td>\n      <td class=\"param-type\"><code>TControl[K]</code></td>\n      <td class=\"param-description\">\n        <p>Provides the control for the given name</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">Returns</h6>\n  <p><code>TControl[K]</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">registerControl</span>(name: string, control: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any, any>): <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any></code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-2\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>control</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any, any></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns-1\">Returns</h6>\n  <p><code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any></code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>This method does not update the value or validity of the control.\nUse <a href=\"api/forms/FormGroup#addControl\"><code>FormGroup#addControl</code></a> instead.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"addControl\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"addcontrol\">addControl()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#addcontrol\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L241-L248\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p>Add a control to this group. In a strongly-typed group, the control must be in the group's type\n(possibly as an optional key).</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">addControl</span>(name: string, control: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any, any>, options?: { emitEvent?: boolean; }): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-3\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n        <p>The control name to add to the collection</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>control</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any, any></code></td>\n      <td class=\"param-description\">\n        <p>Provides the control for the given name</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Specifies whether this FormGroup instance should emit events after a new\ncontrol is added.</p>\n<ul>\n<li><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code> observables emit events with the latest status and value when the control is\nadded. When false, no events are emitted.</li>\n</ul>\n\n        <p>Optional. Default is <code>undefined</code>.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns-2\">Returns</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">addControl</span>&#x3C;K extends string &#x26; keyof TControl>(name: K, control: Required&#x3C;TControl>[K], options?: { emitEvent?: boolean; }): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-4\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>K</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>control</code>\n      </td>\n      <td class=\"param-type\"><code>Required&#x3C;TControl>[K]</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Optional. Default is <code>undefined</code>.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns-3\">Returns</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>If a control with a given name already exists, it would <em>not</em> be replaced with a new one.\nIf you want to replace an existing control, use the <a href=\"api/forms/FormGroup#setControl\"><code>FormGroup#setControl</code></a>\nmethod instead. This method also updates the value and validity of the control.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"removeControl\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"removecontrol\">removeControl()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#removecontrol\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L256-L276\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Remove a control from this group. In a strongly-typed group, required controls cannot be\nremoved.</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">removeControl</span>(name: string, options?: { emitEvent?: boolean; }): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-5\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Optional. Default is <code>undefined</code>.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns-4\">Returns</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">removeControl</span>&#x3C;S extends string>(name: ɵOptionalKeys&#x3C;TControl> &#x26; S, options?: { emitEvent?: boolean; }): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-6\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>ɵOptionalKeys&#x3C;TControl> &#x26; S</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Optional. Default is <code>undefined</code>.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns-5\">Returns</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>This method also updates the value and validity of the control.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"setControl\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"setcontrol\">setControl()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#setcontrol\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L298-L307\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p>Replace an existing control. In a strongly-typed group, the control must be in the group's type\n(possibly as an optional key).</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">setControl</span>&#x3C;K extends string &#x26; keyof TControl>(name: K, control: TControl[K], options?: { emitEvent?: boolean; }): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-7\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>K</code></td>\n      <td class=\"param-description\">\n        <p>The control name to replace in the collection</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>control</code>\n      </td>\n      <td class=\"param-type\"><code>TControl[K]</code></td>\n      <td class=\"param-description\">\n        <p>Provides the control for the given name</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Specifies whether this FormGroup instance should emit events after an\nexisting control is replaced.</p>\n<ul>\n<li><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code> observables emit events with the latest status and value when the control is\nreplaced with a new one. When false, no events are emitted.</li>\n</ul>\n\n        <p>Optional. Default is <code>undefined</code>.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns-6\">Returns</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">setControl</span>(name: string, control: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any, any>, options?: { emitEvent?: boolean; }): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-8\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>name</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>control</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>&#x3C;any, any></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Optional. Default is <code>undefined</code>.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns-7\">Returns</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>If a control with a given name does not exist in this <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>, it will be added.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"contains\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"contains\">contains()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#contains\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L321-L324\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <div class=\"short-description\">\n    <p>Check whether there is an enabled control with the given name in the group.</p>\n\n  </div>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">contains</span>&#x3C;K extends string>(controlName: K): boolean</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-9\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>controlName</code>\n      </td>\n      <td class=\"param-type\"><code>K</code></td>\n      <td class=\"param-description\">\n        <p>The control name to check for existence in the collection</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns-8\">Returns</h6>\n  <p><code>boolean</code>: false for disabled controls, true otherwise.</p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">contains</span>(controlName: string): boolean</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-10\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>controlName</code>\n      </td>\n      <td class=\"param-type\"><code>string</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns-9\">Returns</h6>\n  <p><code>boolean</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>Reports false for disabled controls. If you'd like to check for existence in the group\nonly, use <a href=\"api/forms/AbstractControl#get\"><code>AbstractControl#get</code></a> instead.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"setValue\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"setvalue\">setValue()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#setvalue\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L325-L372\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Sets the value of the <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>. It accepts an object that matches\nthe structure of the group, with control names as keys.</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">setValue</span>(value: ɵIsAny&#x3C;TControl, { [key: string]: any; }, { [K in keyof TControl]: ɵRawValue&#x3C;TControl[K]>; }>, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-11\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>value</code>\n      </td>\n      <td class=\"param-type\"><code>ɵIsAny&#x3C;TControl, { [key: string]: any; }, { [K in keyof TControl]: ɵRawValue&#x3C;TControl[K]>; }></code></td>\n      <td class=\"param-description\">\n        <p>The new value for the control that matches the structure of the group.</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Configuration options that determine how the control propagates changes\nand emits events after the value changes.\nThe configuration options are passed to the <a href=\"api/forms/AbstractControl#updateValueAndValidity\"><code>AbstractControl#updateValueAndValidity</code></a> method.</p>\n<ul>\n<li><code>onlySelf</code>: When true, each change only affects this control, and not its parent. Default is\nfalse.</li>\n<li><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code>\nobservables emit events with the latest status and value when the control value is updated.\nWhen false, no events are emitted.</li>\n</ul>\n\n        <p>Optional. Default is <code>{}</code>.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns-10\">Returns</h6>\n  <p><code>void</code></p>\n\n  <h6 class=\"no-anchor\" id=\"throws\">Throws</h6>\n  <p><code>Error</code> When strict checks fail, such as setting the value of a control\nthat doesn't exist or if you exclude a value of a control that does exist.</p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"setValue-usage-notes\">Usage Notes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#setValue-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"set-the-complete-value-for-the-form-group\">Set the complete value for the form group<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#set-the-complete-value-for-the-form-group\"><i class=\"material-icons\">link</i></a></h5>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  first: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(),\n  last: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n});\n\nconsole.log(form.value);   // {first: null, last: null}\n\nform.setValue({first: 'Nancy', last: 'Drew'});\nconsole.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"patchValue\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"patchvalue\">patchValue()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#patchvalue\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L373-L426\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Patches the value of the <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>. It accepts an object with control\nnames as keys, and does its best to match the values to the correct controls\nin the group.</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">patchValue</span>(value: ɵIsAny&#x3C;TControl, { [key: string]: any; }, Partial&#x3C;{ [K in keyof TControl]: ɵValue&#x3C;TControl[K]>; }>>, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-12\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>value</code>\n      </td>\n      <td class=\"param-type\"><code>ɵIsAny&#x3C;TControl, { [key: string]: any; }, Partial&#x3C;{ [K in keyof TControl]: ɵValue&#x3C;TControl[K]>; }>></code></td>\n      <td class=\"param-description\">\n        <p>The object that matches the structure of the group.</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Configuration options that determine how the control propagates changes and\nemits events after the value is patched.</p>\n<ul>\n<li><code>onlySelf</code>: When true, each change only affects this control and not its parent. Default is\ntrue.</li>\n<li><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code> observables emit events with the latest status and value when the control value\nis updated. When false, no events are emitted. The configuration options are passed to\nthe <a href=\"api/forms/AbstractControl#updateValueAndValidity\"><code>AbstractControl#updateValueAndValidity</code></a> method.</li>\n</ul>\n\n        <p>Optional. Default is <code>{}</code>.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns-11\">Returns</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>It accepts both super-sets and sub-sets of the group without throwing an error.</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"patchValue-usage-notes\">Usage Notes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#patchValue-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"patch-the-value-for-a-form-group\">Patch the value for a form group<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#patch-the-value-for-a-form-group\"><i class=\"material-icons\">link</i></a></h5>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n   first: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(),\n   last: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n});\nconsole.log(form.value);   // {first: null, last: null}\n\nform.patchValue({first: 'Nancy'});\nconsole.log(form.value);   // {first: 'Nancy', last: null}\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"reset\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"reset\">reset()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#reset\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L427-L496\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Resets the <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>, marks all descendants <code>pristine</code> and <code>untouched</code> and sets\nthe value of all descendants to their default values, or null if no defaults were provided.</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">reset</span>(value: ɵIsAny&#x3C;TControl, any, ɵIsAny&#x3C;TControl, { [key: string]: any; }, Partial&#x3C;{ [K in keyof TControl]: ɵValue&#x3C;TControl[K]>; }>>> = {} as unknown as ɵFormGroupValue&#x3C;TControl>, options: { onlySelf?: boolean; emitEvent?: boolean; } = {}): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-13\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>value</code>\n      </td>\n      <td class=\"param-type\"><code>ɵIsAny&#x3C;TControl, any, ɵIsAny&#x3C;TControl, { [key: string]: any; }, Partial&#x3C;{ [K in keyof TControl]: ɵValue&#x3C;TControl[K]>; }>>></code></td>\n      <td class=\"param-description\">\n        <p>Resets the control with an initial value,\nor an object that defines the initial value and disabled state.</p>\n\n        <p>Optional. Default is <code>{} as unknown as ɵFormGroupValue&#x3C;TControl></code>.</p>\n\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>options</code>\n      </td>\n      <td class=\"param-type\"><code>object</code></td>\n      <td class=\"param-description\">\n        <p>Configuration options that determine how the control propagates changes\nand emits events when the group is reset.</p>\n<ul>\n<li><code>onlySelf</code>: When true, each change only affects this control, and not its parent. Default is\nfalse.</li>\n<li><code>emitEvent</code>: When true or not supplied (the default), both the <code>statusChanges</code> and\n<code>valueChanges</code>\nobservables emit events with the latest status and value when the control is reset.\nWhen false, no events are emitted.\nThe configuration options are passed to the <a href=\"api/forms/AbstractControl#updateValueAndValidity\"><code>AbstractControl#updateValueAndValidity</code></a> method.</li>\n</ul>\n\n        <p>Optional. Default is <code>{}</code>.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns-12\">Returns</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>You reset to a specific form state by passing in a map of states\nthat matches the structure of your form, with control names as keys. The state\nis a standalone value or a form state object with both a value and a disabled\nstatus.</p>\n\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"reset-usage-notes\">Usage Notes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#reset-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"reset-the-form-group-values\">Reset the form group values<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#reset-the-form-group-values\"><i class=\"material-icons\">link</i></a></h5>\n<code-example language=\"ts\">\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  first: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('first name'),\n  last: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('last name')\n});\n\nconsole.log(form.value);  // {first: 'first name', last: 'last name'}\n\nform.reset({ first: 'name', last: 'last name' });\n\nconsole.log(form.value);  // {first: 'name', last: 'last name'}\n</code-example>\n<h5 id=\"reset-the-form-group-values-and-disabled-status\">Reset the form group values and disabled status<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#reset-the-form-group-values-and-disabled-status\"><i class=\"material-icons\">link</i></a></h5>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  first: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('first name'),\n  last: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('last name')\n});\n\nform.reset({\n  first: {value: 'name', disabled: true},\n  last: 'last'\n});\n\nconsole.log(form.value);  // {last: 'last'}\nconsole.log(form.get('first').status);  // 'DISABLED'\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"getRawValue\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"getrawvalue\">getRawValue()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#getrawvalue\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L497-L508\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>The aggregate value of the <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code>, including any disabled controls.</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">getRawValue</span>(): ɵTypedOrUntyped&#x3C;TControl, ɵFormGroupRawValue&#x3C;TControl>, any></code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-14\">Parameters</h6>\n  <p>There are no parameters.</p>\n  <h6 class=\"no-anchor\" id=\"returns-13\">Returns</h6>\n  <p><code>ɵTypedOrUntyped&#x3C;TControl, ɵFormGroupRawValue&#x3C;TControl>, any></code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>Retrieves all values regardless of disabled status.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">Usage notes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <h3 id=\"create-a-form-group-with-2-controls\">Create a form group with 2 controls<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#create-a-form-group-with-2-controls\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  first: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Nancy', Validators.minLength(2)),\n  last: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Drew'),\n});\n\nconsole.log(form.value);   // {first: 'Nancy', last; 'Drew'}\nconsole.log(form.status);  // 'VALID'\n</code-example>\n<h3 id=\"the-type-argument-and-optional-controls\">The type argument, and optional controls<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#the-type-argument-and-optional-controls\"><i class=\"material-icons\">link</i></a></h3>\n<p><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> accepts one generic argument, which is an object containing its inner controls.\nThis type will usually be inferred automatically, but you can always specify it explicitly if you\nwish.</p>\n<p>If you have controls that are optional (i.e. they can be removed, you can use the <code>?</code> in the\ntype):</p>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>&#x3C;{\n  first: <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;string|null>,\n  middle?: <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;string|null>, // Middle name is optional.\n  last: <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;string|null>,\n}>({\n  first: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Nancy'),\n  last: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Drew'),\n});\n</code-example>\n<h3 id=\"create-a-form-group-with-a-group-level-validator\">Create a form group with a group-level validator<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#create-a-form-group-with-a-group-level-validator\"><i class=\"material-icons\">link</i></a></h3>\n<p>You include group-level validators as the second arg, or group-level async\nvalidators as the third arg. These come in handy when you want to perform validation\nthat considers the value of more than one child control.</p>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  password: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('', Validators.minLength(2)),\n  passwordConfirm: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('', Validators.minLength(2)),\n}, passwordMatchValidator);\n\n\nfunction passwordMatchValidator(g: <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>) {\n   return g.get('password').value === g.get('passwordConfirm').value\n      ? null : {'mismatch': true};\n}\n</code-example>\n<p>Like <code><a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a></code> instances, you choose to pass in\nvalidators and async validators as part of an options object.</p>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  password: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('')\n  passwordConfirm: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('')\n}, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n</code-example>\n<h3 id=\"set-the-updateon-property-for-all-controls-in-a-form-group\">Set the updateOn property for all controls in a form group<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#set-the-updateon-property-for-all-controls-in-a-form-group\"><i class=\"material-icons\">link</i></a></h3>\n<p>The options object is used to set a default value for each child\ncontrol's <code>updateOn</code> property. If you set <code>updateOn</code> to <code>'blur'</code> at the\ngroup level, all child controls default to 'blur', unless the child\nhas explicitly specified a different <code>updateOn</code> value.</p>\n<code-example language=\"ts\">\nconst c = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  one: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n}, { updateOn: 'blur' });\n</code-example>\n<h3 id=\"using-a-formgroup-with-optional-controls\">Using a FormGroup with optional controls<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#using-a-formgroup-with-optional-controls\"><i class=\"material-icons\">link</i></a></h3>\n<p>It is possible to have optional controls in a FormGroup. An optional control can be removed later\nusing <code>removeControl</code>, and can be omitted when calling <code>reset</code>. Optional controls must be\ndeclared optional in the group's type.</p>\n<code-example language=\"ts\">\nconst c = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>&#x3C;{one?: <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>&#x3C;string>}>({\n  one: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('')\n});\n</code-example>\n<p>Notice that <code>c.value.one</code> has type <code>string|null|undefined</code>. This is because calling <code>c.reset({})</code>\nwithout providing the optional key <code>one</code> will cause it to become <code>null</code>.</p>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/forms\n - api/forms/AbstractControl\n - api/forms/AbstractControlDirective\n - api/forms/AbstractFormGroupDirective\n - api/forms/Form\n - api/forms/FormArray\n - api/forms/FormArrayName\n - api/forms/FormBuilder\n - api/forms/FormControl\n - api/forms/FormControlName\n - api/forms/FormGroupDirective\n - api/forms/FormGroupName\n - api/forms/FormRecord\n - api/forms/FormsModule\n - api/forms/NgForm\n - api/forms/NgModelGroup\n - api/forms/NonNullableFormBuilder\n - api/forms/RadioControlValueAccessor\n - api/forms/ReactiveFormsModule\n - api/forms/SelectControlValueAccessor\n - api/forms/UntypedFormGroup\n - api/forms/isFormGroup\n - guide/deprecations\n - guide/dynamic-form\n - guide/form-validation\n - guide/forms\n - guide/forms-overview\n - guide/glossary\n - guide/observables-in-angular\n - guide/reactive-forms\n - guide/typed-forms\n - guide/update-to-version-14\n - tutorial/first-app/first-app-lesson-12\n-->\n<!-- links from this doc:\n - /api\n - api/forms\n - api/forms/AbstractControl\n - api/forms/AbstractControl#addAsyncValidators\n - api/forms/AbstractControl#addValidators\n - api/forms/AbstractControl#asyncValidator\n - api/forms/AbstractControl#clearAsyncValidators\n - api/forms/AbstractControl#clearValidators\n - api/forms/AbstractControl#constructor()\n - api/forms/AbstractControl#dirty\n - api/forms/AbstractControl#disable\n - api/forms/AbstractControl#disabled\n - api/forms/AbstractControl#enable\n - api/forms/AbstractControl#enabled\n - api/forms/AbstractControl#errors\n - api/forms/AbstractControl#get\n - api/forms/AbstractControl#getError\n - api/forms/AbstractControl#getRawValue\n - api/forms/AbstractControl#hasAsyncValidator\n - api/forms/AbstractControl#hasError\n - api/forms/AbstractControl#hasValidator\n - api/forms/AbstractControl#invalid\n - api/forms/AbstractControl#markAllAsTouched\n - api/forms/AbstractControl#markAsDirty\n - api/forms/AbstractControl#markAsPending\n - api/forms/AbstractControl#markAsPristine\n - api/forms/AbstractControl#markAsTouched\n - api/forms/AbstractControl#markAsUntouched\n - api/forms/AbstractControl#parent\n - api/forms/AbstractControl#patchValue\n - api/forms/AbstractControl#pending\n - api/forms/AbstractControl#pristine\n - api/forms/AbstractControl#removeAsyncValidators\n - api/forms/AbstractControl#removeValidators\n - api/forms/AbstractControl#reset\n - api/forms/AbstractControl#root\n - api/forms/AbstractControl#setAsyncValidators\n - api/forms/AbstractControl#setErrors\n - api/forms/AbstractControl#setParent\n - api/forms/AbstractControl#setValidators\n - api/forms/AbstractControl#setValue\n - api/forms/AbstractControl#status\n - api/forms/AbstractControl#statusChanges\n - api/forms/AbstractControl#touched\n - api/forms/AbstractControl#untouched\n - api/forms/AbstractControl#updateOn\n - api/forms/AbstractControl#updateValueAndValidity\n - api/forms/AbstractControl#valid\n - api/forms/AbstractControl#validator\n - api/forms/AbstractControl#value\n - api/forms/AbstractControl#valueChanges\n - api/forms/AbstractControlOptions\n - api/forms/AsyncValidatorFn\n - api/forms/FormArray\n - api/forms/FormControl\n - api/forms/FormGroup#addControl\n - api/forms/FormGroup#addcontrol\n - api/forms/FormGroup#constructor\n - api/forms/FormGroup#constructor()\n - api/forms/FormGroup#contains\n - api/forms/FormGroup#controls\n - api/forms/FormGroup#create-a-form-group-with-2-controls\n - api/forms/FormGroup#create-a-form-group-with-a-group-level-validator\n - api/forms/FormGroup#description\n - api/forms/FormGroup#formgroup\n - api/forms/FormGroup#getRawValue\n - api/forms/FormGroup#getrawvalue\n - api/forms/FormGroup#methods\n - api/forms/FormGroup#patch-the-value-for-a-form-group\n - api/forms/FormGroup#patchValue\n - api/forms/FormGroup#patchValue-usage-notes\n - api/forms/FormGroup#patchvalue\n - api/forms/FormGroup#properties\n - api/forms/FormGroup#registerControl\n - api/forms/FormGroup#registercontrol\n - api/forms/FormGroup#removeControl\n - api/forms/FormGroup#removecontrol\n - api/forms/FormGroup#reset\n - api/forms/FormGroup#reset-the-form-group-values\n - api/forms/FormGroup#reset-the-form-group-values-and-disabled-status\n - api/forms/FormGroup#reset-usage-notes\n - api/forms/FormGroup#set-the-complete-value-for-the-form-group\n - api/forms/FormGroup#set-the-updateon-property-for-all-controls-in-a-form-group\n - api/forms/FormGroup#setControl\n - api/forms/FormGroup#setValue\n - api/forms/FormGroup#setValue-usage-notes\n - api/forms/FormGroup#setcontrol\n - api/forms/FormGroup#setvalue\n - api/forms/FormGroup#subclasses\n - api/forms/FormGroup#the-type-argument-and-optional-controls\n - api/forms/FormGroup#usage-notes\n - api/forms/FormGroup#using-a-formgroup-with-optional-controls\n - api/forms/FormRecord\n - api/forms/ValidatorFn\n - https://github.com/angular/angular/tree/17.3.12/docs/PUBLIC_API.md#final-classes\n - https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L210-L217\n - https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L241-L248\n - https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L256-L276\n - https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L298-L307\n - https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L321-L324\n - https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L325-L372\n - https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L373-L426\n - https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L427-L496\n - https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L45-L590\n - https://github.com/angular/angular/tree/17.3.12/packages/forms/src/model/form_group.ts#L497-L508\n-->"
}