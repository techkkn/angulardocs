{
  "id": "api/router/Resolve",
  "title": "Resolve",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/router\", \"name\": \"@angular/router\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/router/Resolve\", \"name\": \"Resolve\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/router\">@angular/router</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/router/src/models.ts#L1036-L1136\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"resolve\">Resolve<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Resolve#resolve\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label interface\">interface</label>\n    <label class=\"api-status-label deprecated\">deprecated</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>Interface that classes can implement to be a data provider.\nA data provider class can be used with the router to resolve data during navigation.\nThe interface defines a <code>resolve()</code> method that is invoked right after the <code><a href=\"api/router/ResolveStart\" class=\"code-anchor\">ResolveStart</a></code>\nrouter event. The router waits for the data to be resolved before the route is finally activated.</p>\n\n    <p><a href=\"api/router/Resolve#description\">See more...</a></p>\n  </section>\n<section class=\"deprecated\">\n  <p><strong>Deprecated:</strong> Class-based <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> resolvers are deprecated in favor of functional resolvers. An\ninjectable class can be used as a functional guard using the <a href=\"api/core/inject\"><code>inject</code></a>\nfunction: <code>resolve: {'user': () => inject(UserResolver).resolve()}</code>.</p>\n\n</section><section class=\"interface-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/router/Resolve\" class=\"code-anchor\">Resolve</a>&#x3C;T> {<br><a class=\"code-anchor\" href=\"api/router/Resolve#resolve\"><span class=\"member-name\">resolve</span>(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): MaybeAsync&#x3C;T></a>\n}\n</code-example>\n\n\n</section>\n\n<section class=\"see-also\">\n  <h2 id=\"see-also\">See also<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Resolve#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><a href=\"api/router/ResolveFn\"><code>ResolveFn</code></a></li>\n  </ul>\n</section>\n  \n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Resolve#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>The following example implements a <code>resolve()</code> method that retrieves the data\nneeded to activate the requested route.</p>\n<code-example>\n@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a>({ providedIn: 'root' })\nexport class HeroResolver implements <a href=\"api/router/Resolve\" class=\"code-anchor\">Resolve</a>&#x3C;Hero> {\n  constructor(private service: HeroService) {}\n\n  resolve(\n    route: <a href=\"api/router/ActivatedRouteSnapshot\" class=\"code-anchor\">ActivatedRouteSnapshot</a>,\n    state: <a href=\"api/router/RouterStateSnapshot\" class=\"code-anchor\">RouterStateSnapshot</a>\n  ): Observable&#x3C;Hero>|Promise&#x3C;Hero>|Hero {\n    return this.service.getHero(route.paramMap.get('id'));\n  }\n}\n</code-example>\n<p>Here, the defined <code>resolve()</code> function is provided as part of the <code><a href=\"api/router/Route\" class=\"code-anchor\">Route</a></code> object\nin the router configuration:</p>\n<code-example>\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [\n    RouterModule.forRoot([\n      {\n        path: 'detail/:id',\n        component: HeroDetailComponent,\n        resolve: {\n          hero: HeroResolver\n        }\n      }\n    ])\n  ],\n  exports: [<a href=\"api/router/RouterModule\" class=\"code-anchor\">RouterModule</a>]\n})\nexport class AppRoutingModule {}\n</code-example>\n<p>And you can access to your resolved data from <code>HeroComponent</code>:</p>\n<code-example>\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n selector: \"app-hero\",\n templateUrl: \"hero.component.html\",\n})\nexport class HeroComponent {\n\n constructor(private activatedRoute: <a href=\"api/router/ActivatedRoute\" class=\"code-anchor\">ActivatedRoute</a>) {}\n\n ngOnInit() {\n   this.activatedRoute.data.subscribe(({ hero }) => {\n     // do something with your resolved data ...\n   })\n }\n\n}\n</code-example>\n  <p>Further information is available in the <a href=\"api/router/Resolve#usage-notes\">Usage Notes...</a></p>\n</section>\n  \n  \n<section class=\"instance-methods\">\n  <h2 id=\"methods\">Methods<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Resolve#methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"resolve\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"resolve-1\">resolve()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Resolve#resolve-1\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/router/src/models.ts#L1135-L1135\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">resolve</span>(route: <a href=\"api/router/ActivatedRouteSnapshot\" class=\"code-anchor\">ActivatedRouteSnapshot</a>, state: <a href=\"api/router/RouterStateSnapshot\" class=\"code-anchor\">RouterStateSnapshot</a>): <a href=\"api/router/MaybeAsync\" class=\"code-anchor\">MaybeAsync</a>&#x3C;T></code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>route</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/router/ActivatedRouteSnapshot\" class=\"code-anchor\">ActivatedRouteSnapshot</a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>state</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/router/RouterStateSnapshot\" class=\"code-anchor\">RouterStateSnapshot</a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">Returns</h6>\n  <p><code><a href=\"api/router/MaybeAsync\" class=\"code-anchor\">MaybeAsync</a>&#x3C;T></code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">Usage notes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/Resolve#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p>When both guard and resolvers are specified, the resolvers are not executed until\nall guards have run and succeeded.\nFor example, consider the following route configuration:</p>\n<code-example>\n{\n path: 'base'\n canActivate: [BaseGuard],\n resolve: {data: BaseDataResolver}\n children: [\n  {\n    path: 'child',\n    guards: [ChildGuard],\n    component: ChildComponent,\n    resolve: {childData: ChildDataResolver}\n   }\n ]\n}\n</code-example>\n<p>The order of execution is: BaseGuard, ChildGuard, BaseDataResolver, ChildDataResolver.</p>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/common/AsyncPipe\n - api/router\n - api/router/Route\n - guide/glossary\n - guide/lazy-loading-ngmodules\n-->\n<!-- links from this doc:\n - /api\n - api/core/Component\n - api/core/Injectable\n - api/core/NgModule\n - api/core/inject\n - api/router\n - api/router/ActivatedRoute\n - api/router/ActivatedRouteSnapshot\n - api/router/MaybeAsync\n - api/router/Resolve#description\n - api/router/Resolve#methods\n - api/router/Resolve#resolve\n - api/router/Resolve#resolve-1\n - api/router/Resolve#see-also\n - api/router/Resolve#usage-notes\n - api/router/ResolveFn\n - api/router/ResolveStart\n - api/router/Route\n - api/router/RouterModule\n - api/router/RouterStateSnapshot\n - https://github.com/angular/angular/tree/17.3.12/packages/router/src/models.ts#L1036-L1136\n - https://github.com/angular/angular/tree/17.3.12/packages/router/src/models.ts#L1135-L1135\n-->"
}