{
  "id": "api/core",
  "title": "@angular/core",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/PACKAGE.md\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n<header class=\"api-header\">\n  <h1 id=\"angularcore\">@angular/core<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#angularcore\"><i class=\"material-icons\">link</i></a></h1>\n  <label class=\"api-type-label package\">package</label>\n  \n  \n  \n</header>\n\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\"><p>Implements Angular's core functionality, low-level services, and utilities.</p>\n\n  <ul>\n<li>\n<p>Defines the class infrastructure for components, view hierarchies, change detection, rendering, and event handling.</p>\n</li>\n<li>\n<p>Defines the decorators that supply metadata and context for Angular constructs. </p>\n</li>\n<li>\n<p>Defines infrastructure for dependency injection (DI), internationalization (i18n), and various testing and debugging facilities.</p>\n</li>\n</ul>\n\n\n  \n\n  \n  <h2 id=\"entry-points\">Entry points<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#entry-points\"><i class=\"material-icons\">link</i></a></h2>\n  \n  \n  \n  <section class=\"export-list\">\n    <h3 id=\"primary\">Primary<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#primary\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core#primary-entry-point-exports\">@angular/core</a></code></td>\n        <td>\n          \n          <p>Implements Angular's core functionality, low-level services, and utilities.</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n  \n  \n  \n  <section class=\"export-list\">\n    <h3 id=\"secondary\">Secondary<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#secondary\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/rxjs-interop\">@angular/core/rxjs-interop</a></code></td>\n        <td>\n          \n          <p>Includes utilities related to using the RxJS library in conjunction with Angular's signal-based reactivity system.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/testing\">@angular/core/testing</a></code></td>\n        <td>\n          \n          <p>Provides infrastructure for testing Angular core functionality.</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n  \n\n  <h2 id=\"primary-entry-point-exports\">Primary entry point exports<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#primary-entry-point-exports\"><i class=\"material-icons\">link</i></a></h2>\n  \n  \n  \n  \n  \n  <section class=\"export-list\">\n    <h3 id=\"ngmodules\">NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#ngmodules\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ApplicationModule\">ApplicationModule</a></code></td>\n        <td>\n          \n          <p>Re-exported by <code><a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a></code>, which is included automatically in the root\n<code>AppModule</code> when you create a new app with the CLI <code>new</code> command. Eagerly injects\n<code><a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a></code> to instantiate it.</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n  \n  \n  \n  <section class=\"export-list\">\n    <h3 id=\"classes\">Classes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#classes\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ApplicationInitStatus\">ApplicationInitStatus</a></code></td>\n        <td>\n          \n          <p>A class that reflects the state of running <a href=\"api/core/APP_INITIALIZER\"><code>APP_INITIALIZER</code></a> functions.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ApplicationRef\">ApplicationRef</a></code></td>\n        <td>\n          \n          <p>A reference to an Angular application running on a page.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ChangeDetectorRef\">ChangeDetectorRef</a></code></td>\n        <td>\n          \n          <p>Base class that provides change detection functionality.\nA change-detection tree collects all views that are to be checked for changes.\nUse the methods to add and remove views from the tree, initiate change-detection,\nand explicitly mark views as <em>dirty</em>, meaning that they have changed and need to be re-rendered.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/Compiler\" class=\"deprecated-api-item\">Compiler</a></code></td>\n        <td>\n          <p><strong>Deprecated:</strong> Ivy JIT mode doesn't require accessing this symbol.\nSee <a href=\"guide/deprecations#jit-api-changes\">JIT API changes due to ViewEngine deprecation</a> for\nadditional context.</p>\n\n          <p>Low-level service for running the angular compiler during runtime\nto create <a href=\"api/core/ComponentFactory\"><code>ComponentFactory</code></a>s, which\ncan later be used to create and render a Component instance.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/CompilerFactory\" class=\"deprecated-api-item\">CompilerFactory</a></code></td>\n        <td>\n          <p><strong>Deprecated:</strong> Ivy JIT mode doesn't require accessing this symbol.\nSee <a href=\"guide/deprecations#jit-api-changes\">JIT API changes due to ViewEngine deprecation</a> for\nadditional context.</p>\n\n          <p>A factory for creating a Compiler</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/ComponentFactory\" class=\"deprecated-api-item\">ComponentFactory</a></code></td>\n        <td>\n          <p><strong>Deprecated:</strong> Angular no longer requires Component factories. Please use other APIs where\nComponent class can be used directly.</p>\n\n          <p>Base class for a factory that can create a component dynamically.\nInstantiate a factory for a given type of component with <code>resolveComponentFactory()</code>.\nUse the resulting <code>ComponentFactory.create()</code> method to create a component of that type.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/ComponentFactoryResolver\" class=\"deprecated-api-item\">ComponentFactoryResolver</a></code></td>\n        <td>\n          <p><strong>Deprecated:</strong> Angular no longer requires Component factories. Please use other APIs where\nComponent class can be used directly.</p>\n\n          <p>A simple registry that maps <code>Components</code> to generated <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code> classes\nthat can be used to create instances of components.\nUse to obtain the factory for a given component type,\nthen use the factory's <code>create()</code> method to create a component of that type.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ComponentRef\">ComponentRef</a></code></td>\n        <td>\n          \n          <p>Represents a component created by a <code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a></code>.\nProvides access to the component instance and related objects,\nand provides the means of destroying the instance.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/DebugElement\">DebugElement</a></code></td>\n        <td>\n          \n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/DebugEventListener\">DebugEventListener</a></code></td>\n        <td>\n          \n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/DebugNode\">DebugNode</a></code></td>\n        <td>\n          \n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/DefaultIterableDiffer\" class=\"deprecated-api-item\">DefaultIterableDiffer</a></code></td>\n        <td>\n          <p><strong>Deprecated:</strong> v4.0.0 - Should not be part of public API.</p>\n\n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/DestroyRef\">DestroyRef</a></code></td>\n        <td>\n          \n          <p><code><a href=\"api/core/DestroyRef\" class=\"code-anchor\">DestroyRef</a></code> lets you set callbacks to run for any cleanup or destruction behavior.\nThe scope of this destruction depends on where <code><a href=\"api/core/DestroyRef\" class=\"code-anchor\">DestroyRef</a></code> is injected. If <code><a href=\"api/core/DestroyRef\" class=\"code-anchor\">DestroyRef</a></code>\nis injected in a component or directive, the callbacks run when that component or\ndirective is destroyed. Otherwise the callbacks run when a corresponding injector is destroyed.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ElementRef\">ElementRef</a></code></td>\n        <td>\n          \n          <p>A wrapper around a native element inside of a View.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/EmbeddedViewRef\">EmbeddedViewRef</a></code></td>\n        <td>\n          \n          <p>Represents an Angular <a href=\"guide/glossary#view\">view</a> in a view container.\nAn <a href=\"guide/glossary#view-hierarchy\">embedded view</a> can be referenced from a component\nother than the hosting component whose template defines it, or it can be defined\nindependently by a <code><a href=\"api/core/TemplateRef\" class=\"code-anchor\">TemplateRef</a></code>.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/EnvironmentInjector\">EnvironmentInjector</a></code></td>\n        <td>\n          \n          <p>An <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> that's part of the environment injector hierarchy, which exists outside of the\ncomponent tree.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ErrorHandler\">ErrorHandler</a></code></td>\n        <td>\n          \n          <p>Provides a hook for centralized exception handling.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/EventEmitter\">EventEmitter</a></code></td>\n        <td>\n          \n          <p>Use in components with the <code>@<a href=\"api/core/Output\" class=\"code-anchor\">Output</a></code> directive to emit custom events\nsynchronously or asynchronously, and register handlers for those events\nby subscribing to an instance.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/HostAttributeToken\">HostAttributeToken</a></code></td>\n        <td>\n          \n          <p>Creates a token that can be used to inject static attributes of the host node.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InjectionToken\">InjectionToken</a></code></td>\n        <td>\n          \n          <p>Creates a token that can be used in a DI Provider.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Injector\">Injector</a></code></td>\n        <td>\n          \n          <p>Concrete injectors implement this interface. Injectors are configured\nwith <a href=\"guide/dependency-injection-providers\">providers</a> that associate\ndependencies of various types with <a href=\"guide/dependency-injection-providers\">injection tokens</a>.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/IterableDiffers\">IterableDiffers</a></code></td>\n        <td>\n          \n          <p>A repository of different iterable diffing strategies used by NgFor, NgClass, and others.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/KeyValueDiffers\">KeyValueDiffers</a></code></td>\n        <td>\n          \n          <p>A repository of different Map diffing strategies used by NgClass, NgStyle, and others.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/ModuleWithComponentFactories\" class=\"deprecated-api-item\">ModuleWithComponentFactories</a></code></td>\n        <td>\n          <p><strong>Deprecated:</strong> Ivy JIT mode doesn't require accessing this symbol.\nSee <a href=\"guide/deprecations#jit-api-changes\">JIT API changes due to ViewEngine deprecation</a> for\nadditional context.</p>\n\n          <p>Combination of NgModuleFactory and ComponentFactories.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/NgModuleFactory\" class=\"deprecated-api-item\">NgModuleFactory</a></code></td>\n        <td>\n          <p><strong>Deprecated:</strong> This class was mostly used as a part of ViewEngine-based JIT API and is no longer needed in Ivy\nJIT mode. See <a href=\"guide/deprecations#jit-api-changes\">JIT API changes due to ViewEngine deprecation</a>\nfor additional context. Angular provides APIs that accept NgModule classes directly (such as\n<a href=\"api/core/PlatformRef#bootstrapModule\">PlatformRef.bootstrapModule</a> and\n<a href=\"api/core/createNgModule\">createNgModule</a>), consider switching to those APIs instead of\nusing factory-based ones.</p>\n\n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/NgModuleRef\">NgModuleRef</a></code></td>\n        <td>\n          \n          <p>Represents an instance of an <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> created by an <code><a href=\"api/core/NgModuleFactory\" class=\"code-anchor\">NgModuleFactory</a></code>.\nProvides access to the <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> instance and related objects.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/NgProbeToken\" class=\"deprecated-api-item\">NgProbeToken</a></code></td>\n        <td>\n          <p><strong>Deprecated:</strong> </p>\n\n          <p>A token for third-party components that can register themselves with NgProbe.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/NgZone\">NgZone</a></code></td>\n        <td>\n          \n          <p>An injectable service for executing work inside or outside of the Angular zone.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/OutputEmitterRef\">OutputEmitterRef</a></code></td>\n        <td>\n          \n          <p>An <code><a href=\"api/core/OutputEmitterRef\" class=\"code-anchor\">OutputEmitterRef</a></code> is created by the <code><a href=\"api/core/output\" class=\"code-anchor\">output</a>()</code> function and can be\nused to emit values to consumers of your directive or component.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/PlatformRef\">PlatformRef</a></code></td>\n        <td>\n          \n          <p>The Angular platform is the entry point for Angular on a web page.\nEach page has exactly one platform. Services (such as reflection) which are common\nto every Angular application running on the page are bound in its scope.\nA page's platform is initialized implicitly when a platform is created using a platform\nfactory such as <code>PlatformBrowser</code>, or explicitly by calling the <code><a href=\"api/core/createPlatform\" class=\"code-anchor\">createPlatform</a>()</code> function.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Query\">Query</a></code></td>\n        <td>\n          \n          <p>Base class for query metadata.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/QueryList\">QueryList</a></code></td>\n        <td>\n          \n          <p>An unmodifiable list of items that Angular keeps up to date when the state\nof the application changes.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Renderer2\">Renderer2</a></code></td>\n        <td>\n          \n          <p>Extend this base class to implement custom rendering. By default, Angular\nrenders a template into DOM. You can use custom rendering to intercept\nrendering calls, or to render to something other than DOM.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/RendererFactory2\">RendererFactory2</a></code></td>\n        <td>\n          \n          <p>Creates and initializes a custom renderer that implements the <code><a href=\"api/core/Renderer2\" class=\"code-anchor\">Renderer2</a></code> base class.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Sanitizer\">Sanitizer</a></code></td>\n        <td>\n          \n          <p>Sanitizer is used by the views to sanitize potentially dangerous values.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/SimpleChange\">SimpleChange</a></code></td>\n        <td>\n          \n          <p>Represents a basic change from a previous to a new value for a single\nproperty on a directive instance. Passed as a value in a\n<a href=\"api/core/SimpleChanges\"><code>SimpleChanges</code></a> object to the <code>ngOnChanges</code> hook.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/TemplateRef\">TemplateRef</a></code></td>\n        <td>\n          \n          <p>Represents an embedded template that can be used to instantiate embedded views.\nTo instantiate embedded views based on a template, use the <code><a href=\"api/core/ViewContainerRef\" class=\"code-anchor\">ViewContainerRef</a></code>\nmethod <code>createEmbeddedView()</code>.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Testability\">Testability</a></code></td>\n        <td>\n          \n          <p>The Testability service provides testing hooks that can be accessed from\nthe browser.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/TestabilityRegistry\">TestabilityRegistry</a></code></td>\n        <td>\n          \n          <p>A global registry of <a href=\"api/core/Testability\"><code>Testability</code></a> instances for specific elements.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/TransferState\">TransferState</a></code></td>\n        <td>\n          \n          <p>A key value store that is transferred from the application on the server side to the application\non the client side.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Type\">Type</a></code></td>\n        <td>\n          \n          <p>Represents a type that a Component or other object is instances of.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Version\">Version</a></code></td>\n        <td>\n          \n          <p>Represents the version of Angular</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ViewContainerRef\">ViewContainerRef</a></code></td>\n        <td>\n          \n          <p>Represents a container where one or more views can be attached to a component.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ViewRef\">ViewRef</a></code></td>\n        <td>\n          \n          <p>Represents an Angular <a href=\"guide/glossary#view\" title=\"Definition\">view</a>.</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n  \n  \n  \n  <section class=\"export-list\">\n    <h3 id=\"decorators\">Decorators<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#decorators\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Attribute\">Attribute</a></code></td>\n        <td>\n          \n          <p>Parameter decorator for a directive constructor that designates\na host-element attribute whose value is injected as a constant string literal.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Component\">Component</a></code></td>\n        <td>\n          \n          <p>Decorator that marks a class as an Angular component and provides configuration\nmetadata that determines how the component should be processed,\ninstantiated, and used at runtime.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ContentChild\">ContentChild</a></code></td>\n        <td>\n          \n          <p>Property decorator that configures a content query.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ContentChildren\">ContentChildren</a></code></td>\n        <td>\n          \n          <p>Property decorator that configures a content query.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Directive\">Directive</a></code></td>\n        <td>\n          \n          <p>Decorator that marks a class as an Angular directive.\nYou can define your own directives to attach custom behavior to elements in the DOM.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Host\">Host</a></code></td>\n        <td>\n          \n          <p>Parameter decorator on a view-provider parameter of a class constructor\nthat tells the DI framework to resolve the view by checking injectors of child\nelements, and stop when reaching the host element of the current component.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/HostBinding\">HostBinding</a></code></td>\n        <td>\n          \n          <p>Decorator that marks a DOM property or an element class, style or attribute as a host-binding\nproperty and supplies configuration metadata. Angular automatically checks host bindings during\nchange detection, and if a binding changes it updates the host element of the directive.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/HostListener\">HostListener</a></code></td>\n        <td>\n          \n          <p>Decorator that declares a DOM event to listen for,\nand provides a handler method to run when that event occurs.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Inject\">Inject</a></code></td>\n        <td>\n          \n          <p>Parameter decorator on a dependency parameter of a class constructor\nthat specifies a custom provider of the dependency.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Injectable\">Injectable</a></code></td>\n        <td>\n          \n          <p>Decorator that marks a class as available to be\nprovided and injected as a dependency.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Input\">Input</a></code></td>\n        <td>\n          \n          <p>Decorator that marks a class field as an input property and supplies configuration metadata.\nThe input property is bound to a DOM property in the template. During change detection,\nAngular automatically updates the data property with the DOM property's value.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/NgModule\">NgModule</a></code></td>\n        <td>\n          \n          <p>Decorator that marks a class as an NgModule and supplies configuration metadata.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Optional\">Optional</a></code></td>\n        <td>\n          \n          <p>Parameter decorator to be used on constructor parameters,\nwhich marks the parameter as being an optional dependency.\nThe DI framework provides <code>null</code> if the dependency is not found.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Output\">Output</a></code></td>\n        <td>\n          \n          <p>Decorator that marks a class field as an output property and supplies configuration metadata.\nThe DOM property bound to the output property is automatically updated during change detection.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Pipe\">Pipe</a></code></td>\n        <td>\n          \n          <p>Decorator that marks a class as pipe and supplies configuration metadata.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Self\">Self</a></code></td>\n        <td>\n          \n          <p>Parameter decorator to be used on constructor parameters,\nwhich tells the DI framework to start dependency resolution from the local injector.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/SkipSelf\">SkipSelf</a></code></td>\n        <td>\n          \n          <p>Parameter decorator to be used on constructor parameters,\nwhich tells the DI framework to start dependency resolution from the parent injector.\nResolution works upward through the injector hierarchy, so the local injector\nis not checked for a provider.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ViewChild\">ViewChild</a></code></td>\n        <td>\n          \n          <p>Property decorator that configures a view query.\nThe change detector looks for the first element or the directive matching the selector\nin the view DOM. If the view DOM changes, and a new child matches the selector,\nthe property is updated.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ViewChildren\">ViewChildren</a></code></td>\n        <td>\n          \n          <p>Property decorator that configures a view query.</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n  \n  \n  \n  <section class=\"export-list\">\n    <h3 id=\"functions\">Functions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#functions\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/afterNextRender\">afterNextRender</a></code></td>\n        <td>\n          \n          <p>Register a callback to be invoked the next time the application\nfinishes rendering.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/afterRender\">afterRender</a></code></td>\n        <td>\n          \n          <p>Register a callback to be invoked each time the application\nfinishes rendering.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/asNativeElements\">asNativeElements</a></code></td>\n        <td>\n          \n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/assertInInjectionContext\">assertInInjectionContext</a></code></td>\n        <td>\n          \n          <p>Asserts that the current stack frame is within an <a href=\"guide/dependency-injection-context\">injection\ncontext</a> and has access to <code>inject</code>.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/assertNotInReactiveContext\">assertNotInReactiveContext</a></code></td>\n        <td>\n          \n          <p>Asserts that the current stack frame is not within a reactive context. Useful\nto disallow certain code from running inside a reactive context (see <a href=\"api/core/rxjs-interop/toSignal\"><code>toSignal</code></a>).</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/assertPlatform\">assertPlatform</a></code></td>\n        <td>\n          \n          <p>Checks that there is currently a platform that contains the given token as a provider.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/booleanAttribute\">booleanAttribute</a></code></td>\n        <td>\n          \n          <p>Transforms a value (typically a string) to a boolean.\nIntended to be used as a transform function of an input.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/computed\">computed</a></code></td>\n        <td>\n          \n          <p>Create a computed <code><a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a></code> which derives a reactive value from an expression.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/contentChildren\">contentChildren</a></code></td>\n        <td>\n          \n          <p>Initializes a content children query.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/createComponent\">createComponent</a></code></td>\n        <td>\n          \n          <p>Creates a <code><a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a></code> instance based on provided component type and a set of options.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/createEnvironmentInjector\">createEnvironmentInjector</a></code></td>\n        <td>\n          \n          <p>Create a new environment injector.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/createNgModule\">createNgModule</a></code></td>\n        <td>\n          \n          <p>Returns a new NgModuleRef instance based on the NgModule class and parent injector provided.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/createPlatform\">createPlatform</a></code></td>\n        <td>\n          \n          <p>Creates a platform.\nPlatforms must be created on launch using this function.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/createPlatformFactory\">createPlatformFactory</a></code></td>\n        <td>\n          \n          <p>Creates a factory for a platform. Can be used to provide or override <code>Providers</code> specific to\nyour application's runtime needs, such as <code><a href=\"api/core/PLATFORM_INITIALIZER\" class=\"code-anchor\">PLATFORM_INITIALIZER</a></code> and <code><a href=\"api/core/PLATFORM_ID\" class=\"code-anchor\">PLATFORM_ID</a></code>.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/destroyPlatform\">destroyPlatform</a></code></td>\n        <td>\n          \n          <p>Destroys the current Angular platform and all Angular applications on the page.\nDestroys all modules and listeners registered with the platform.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/effect\">effect</a></code></td>\n        <td>\n          \n          <p>Create a global <code>Effect</code> for the given reactive function.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/enableProdMode\">enableProdMode</a></code></td>\n        <td>\n          \n          <p>Disable Angular's development mode, which turns off assertions and other\nchecks within the framework.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/forwardRef\">forwardRef</a></code></td>\n        <td>\n          \n          <p>Allows to refer to references which are not yet defined.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/getDebugNode\">getDebugNode</a></code></td>\n        <td>\n          \n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/getModuleFactory\" class=\"deprecated-api-item\">getModuleFactory</a></code></td>\n        <td>\n          <p><strong>Deprecated:</strong> Use <code><a href=\"api/core/getNgModuleById\" class=\"code-anchor\">getNgModuleById</a></code> instead.</p>\n\n          <p>Returns the NgModuleFactory with the given id (specified using <a href=\"api/core/NgModule#id\">@NgModule.id\nfield</a>), if it exists and has been loaded. Factories for NgModules that do\nnot specify an <code>id</code> cannot be retrieved. Throws if an NgModule cannot be found.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/getNgModuleById\">getNgModuleById</a></code></td>\n        <td>\n          \n          <p>Returns the NgModule class with the given id (specified using <a href=\"api/core/NgModule#id\">@NgModule.id\nfield</a>), if it exists and has been loaded. Classes for NgModules that do\nnot specify an <code>id</code> cannot be retrieved. Throws if an NgModule cannot be found.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/getPlatform\">getPlatform</a></code></td>\n        <td>\n          \n          <p>Returns the current platform.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/importProvidersFrom\">importProvidersFrom</a></code></td>\n        <td>\n          \n          <p>Collects providers from all NgModules and standalone components, including transitively imported\nones.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/inject\">inject</a></code></td>\n        <td>\n          \n          <p>Injects a token from the currently active injector.\n<code>inject</code> is only supported in an <a href=\"/guide/dependency-injection-context\">injection context</a>. It can\nbe used during:</p>\n<ul>\n<li>Construction (via the <code>constructor</code>) of a class being instantiated by the DI system, such\nas an <code>@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a></code> or <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code>.</li>\n<li>In the initializer for fields of such classes.</li>\n<li>In the factory function specified for <code>useFactory</code> of a <code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a></code> or an <code>@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a></code>.</li>\n<li>In the <code>factory</code> function specified for an <code><a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a></code>.</li>\n<li>In a stackframe of a function call in a DI context</li>\n</ul>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/isDevMode\">isDevMode</a></code></td>\n        <td>\n          \n          <p>Returns whether Angular is in development mode.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/isSignal\">isSignal</a></code></td>\n        <td>\n          \n          <p>Checks if the given <code>value</code> is a reactive <code><a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a></code>.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/isStandalone\">isStandalone</a></code></td>\n        <td>\n          \n          <p>Checks whether a given Component, Directive or Pipe is marked as standalone.\nThis will return false if passed anything other than a Component, Directive, or Pipe class\nSee <a href=\"/guide/standalone-components\">this guide</a> for additional information:</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/makeEnvironmentProviders\">makeEnvironmentProviders</a></code></td>\n        <td>\n          \n          <p>Wrap an array of <code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a></code>s into <code><a href=\"api/core/EnvironmentProviders\" class=\"code-anchor\">EnvironmentProviders</a></code>, preventing them from being accidentally\nreferenced in <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code> in a component injector.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/makeStateKey\">makeStateKey</a></code></td>\n        <td>\n          \n          <p>Create a <code><a href=\"api/core/StateKey\" class=\"code-anchor\">StateKey</a>&#x3C;T></code> that can be used to store value of type T with <code><a href=\"api/core/TransferState\" class=\"code-anchor\">TransferState</a></code>.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/mergeApplicationConfig\">mergeApplicationConfig</a></code></td>\n        <td>\n          \n          <p>Merge multiple application configurations from left to right.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/numberAttribute\">numberAttribute</a></code></td>\n        <td>\n          \n          <p>Transforms a value (typically a string) to a number.\nIntended to be used as a transform function of an input.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/output\">output</a></code></td>\n        <td>\n          \n          <p>The <code><a href=\"api/core/output\" class=\"code-anchor\">output</a></code> function allows declaration of Angular outputs in\ndirectives and components.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/provideZoneChangeDetection\">provideZoneChangeDetection</a></code></td>\n        <td>\n          \n          <p>Provides <code><a href=\"api/core/NgZone\" class=\"code-anchor\">NgZone</a></code>-based change detection for the application bootstrapped using\n<code><a href=\"api/platform-browser/bootstrapApplication\" class=\"code-anchor\">bootstrapApplication</a></code>.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/reflectComponentType\">reflectComponentType</a></code></td>\n        <td>\n          \n          <p>Creates an object that allows to retrieve component metadata.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/resolveForwardRef\">resolveForwardRef</a></code></td>\n        <td>\n          \n          <p>Lazily retrieves the reference value from a forwardRef.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/runInInjectionContext\">runInInjectionContext</a></code></td>\n        <td>\n          \n          <p>Runs the given function in the <a href=\"guide/dependency-injection-context\">context</a> of the given\n<code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/setTestabilityGetter\">setTestabilityGetter</a></code></td>\n        <td>\n          \n          <p>Set the <a href=\"api/core/GetTestability\"><code>GetTestability</code></a> implementation used by the Angular testing framework.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/signal\">signal</a></code></td>\n        <td>\n          \n          <p>Create a <code><a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a></code> that can be set or updated directly.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/untracked\">untracked</a></code></td>\n        <td>\n          \n          <p>Execute an arbitrary function in a non-reactive (non-tracking) context. The executed function\ncan, optionally, return a value.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/viewChildren\">viewChildren</a></code></td>\n        <td>\n          \n          <p>Initializes a view children query.</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n  \n  \n  \n  <section class=\"export-list\">\n    <h3 id=\"structures\">Structures<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#structures\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/AbstractType\">AbstractType</a></code></td>\n        <td>\n          \n          <p>Represents an abstract class <code>T</code>, if applied to a concrete class it would stop being\ninstantiable.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/AfterContentChecked\">AfterContentChecked</a></code></td>\n        <td>\n          \n          <p>A lifecycle hook that is called after the default change detector has\ncompleted checking all content of a directive. It will run after the content\nhas been checked and most of the time it's during a change detection cycle.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/AfterContentInit\">AfterContentInit</a></code></td>\n        <td>\n          \n          <p>A lifecycle hook that is called after Angular has fully initialized\nall content of a directive. It will run only once when the projected content is initialized.\nDefine an <code>ngAfterContentInit()</code> method to handle any additional initialization tasks.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/AfterRenderOptions\">AfterRenderOptions</a></code></td>\n        <td>\n          \n          <p>Options passed to <code><a href=\"api/core/afterRender\" class=\"code-anchor\">afterRender</a></code> and <code><a href=\"api/core/afterNextRender\" class=\"code-anchor\">afterNextRender</a></code>.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/AfterRenderPhase\">AfterRenderPhase</a></code></td>\n        <td>\n          \n          <p>The phase to run an <code><a href=\"api/core/afterRender\" class=\"code-anchor\">afterRender</a></code> or <code><a href=\"api/core/afterNextRender\" class=\"code-anchor\">afterNextRender</a></code> callback in.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/AfterRenderRef\">AfterRenderRef</a></code></td>\n        <td>\n          \n          <p>A callback that runs after render.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/AfterViewChecked\">AfterViewChecked</a></code></td>\n        <td>\n          \n          <p>A lifecycle hook that is called after the default change detector has\ncompleted checking a component's view for changes.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/AfterViewInit\">AfterViewInit</a></code></td>\n        <td>\n          \n          <p>A lifecycle hook that is called after Angular has fully initialized\na component's view.\nDefine an <code>ngAfterViewInit()</code> method to handle any additional initialization tasks.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ApplicationConfig\">ApplicationConfig</a></code></td>\n        <td>\n          \n          <p>Set of config options available during the application bootstrap operation.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/BootstrapOptions\">BootstrapOptions</a></code></td>\n        <td>\n          \n          <p>Provides additional options to the bootstrapping process.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ChangeDetectionStrategy\">ChangeDetectionStrategy</a></code></td>\n        <td>\n          \n          <p>The strategy that the default change detector uses to detect changes.\nWhen set, takes effect the next time change detection is triggered.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ClassProvider\">ClassProvider</a></code></td>\n        <td>\n          \n          <p>Configures the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> to return an instance of <code>useClass</code> for a token.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ClassSansProvider\">ClassSansProvider</a></code></td>\n        <td>\n          \n          <p>Configures the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> to return a value by invoking a <code>useClass</code> function.\nBase for <code><a href=\"api/core/ClassProvider\" class=\"code-anchor\">ClassProvider</a></code> decorator.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ComponentMirror\">ComponentMirror</a></code></td>\n        <td>\n          \n          <p>An interface that describes the subset of component metadata\nthat can be retrieved using the <code><a href=\"api/core/reflectComponentType\" class=\"code-anchor\">reflectComponentType</a></code> function.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ConstructorProvider\">ConstructorProvider</a></code></td>\n        <td>\n          \n          <p>Configures the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> to return an instance of a token.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ConstructorSansProvider\">ConstructorSansProvider</a></code></td>\n        <td>\n          \n          <p>Configures the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> to return an instance of a token.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ContentChildFunction\">ContentChildFunction</a></code></td>\n        <td>\n          \n          <p>Type of the <code><a href=\"api/core/contentChild\" class=\"code-anchor\">contentChild</a></code> function.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/CreateComputedOptions\">CreateComputedOptions</a></code></td>\n        <td>\n          \n          <p>Options passed to the <code><a href=\"api/core/computed\" class=\"code-anchor\">computed</a></code> creation function.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/CreateEffectOptions\">CreateEffectOptions</a></code></td>\n        <td>\n          \n          <p>Options passed to the <code><a href=\"api/core/effect\" class=\"code-anchor\">effect</a></code> function.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/CreateSignalOptions\">CreateSignalOptions</a></code></td>\n        <td>\n          \n          <p>Options passed to the <code><a href=\"api/core/signal\" class=\"code-anchor\">signal</a></code> creation function.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/DoBootstrap\">DoBootstrap</a></code></td>\n        <td>\n          \n          <p>Hook for manual bootstrapping of the application instead of using <code>bootstrap</code> array in @NgModule\nannotation. This hook is invoked only when the <code>bootstrap</code> array is empty or not provided.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/DoCheck\">DoCheck</a></code></td>\n        <td>\n          \n          <p>A lifecycle hook that invokes a custom change-detection function for a directive,\nin addition to the check performed by the default change-detector.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/EffectRef\">EffectRef</a></code></td>\n        <td>\n          \n          <p>A global reactive effect, which can be manually destroyed.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ExistingProvider\">ExistingProvider</a></code></td>\n        <td>\n          \n          <p>Configures the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> to return a value of another <code>useExisting</code> token.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ExistingSansProvider\">ExistingSansProvider</a></code></td>\n        <td>\n          \n          <p>Configures the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> to return a value of another <code>useExisting</code> token.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/FactoryProvider\">FactoryProvider</a></code></td>\n        <td>\n          \n          <p>Configures the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> to return a value by invoking a <code>useFactory</code> function.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/FactorySansProvider\">FactorySansProvider</a></code></td>\n        <td>\n          \n          <p>Configures the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> to return a value by invoking a <code>useFactory</code> function.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ForwardRefFn\">ForwardRefFn</a></code></td>\n        <td>\n          \n          <p>An interface that a function passed into <code><a href=\"api/core/forwardRef\" class=\"code-anchor\">forwardRef</a></code> has to implement.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/GetTestability\">GetTestability</a></code></td>\n        <td>\n          \n          <p>Adapter interface for retrieving the <code><a href=\"api/core/Testability\" class=\"code-anchor\">Testability</a></code> service associated for a\nparticular context.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/InjectFlags\" class=\"deprecated-api-item\">InjectFlags</a></code></td>\n        <td>\n          <p><strong>Deprecated:</strong> use an options object for <a href=\"api/core/inject\"><code>inject</code></a> instead.</p>\n\n          <p>Injection flags for DI.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InjectOptions\">InjectOptions</a></code></td>\n        <td>\n          \n          <p>Type of the options argument to <a href=\"api/core/inject\"><code>inject</code></a>.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InjectableType\">InjectableType</a></code></td>\n        <td>\n          \n          <p>A <code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a></code> which has a <code>ɵprov: ɵɵInjectableDeclaration</code> static field.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InjectorType\">InjectorType</a></code></td>\n        <td>\n          \n          <p>A type which has an <code>InjectorDef</code> static field.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InputFunction\">InputFunction</a></code></td>\n        <td>\n          \n          <p>The <code>input</code> function allows declaration of inputs in directives and\ncomponents.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InputOptions\">InputOptions</a></code></td>\n        <td>\n          \n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InputSignal\">InputSignal</a></code></td>\n        <td>\n          \n          <p><code><a href=\"api/core/InputSignal\" class=\"code-anchor\">InputSignal</a></code> represents a special <code><a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a></code> for a directive/component input.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InputSignalWithTransform\">InputSignalWithTransform</a></code></td>\n        <td>\n          \n          <p><code><a href=\"api/core/InputSignalWithTransform\" class=\"code-anchor\">InputSignalWithTransform</a></code> represents a special <code><a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a></code> for a\ndirective/component input with a <code>transform</code> function.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/IterableChangeRecord\">IterableChangeRecord</a></code></td>\n        <td>\n          \n          <p>Record representing the item change information.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/IterableChanges\">IterableChanges</a></code></td>\n        <td>\n          \n          <p>An object describing the changes in the <code>Iterable</code> collection since last time\n<code><a href=\"api/core/IterableDiffer\" class=\"code-anchor\">IterableDiffer</a>#diff()</code> was invoked.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/IterableDiffer\">IterableDiffer</a></code></td>\n        <td>\n          \n          <p>A strategy for tracking changes over time to an iterable. Used by <a href=\"api/common/NgForOf\"><code>NgForOf</code></a> to\nrespond to changes in an iterable by effecting equivalent changes in the DOM.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/IterableDifferFactory\">IterableDifferFactory</a></code></td>\n        <td>\n          \n          <p>Provides a factory for <a href=\"api/core/IterableDiffer\"><code>IterableDiffer</code></a>.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/KeyValueChangeRecord\">KeyValueChangeRecord</a></code></td>\n        <td>\n          \n          <p>Record representing the item change information.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/KeyValueChanges\">KeyValueChanges</a></code></td>\n        <td>\n          \n          <p>An object describing the changes in the <code>Map</code> or <code>{[k:string]: string}</code> since last time\n<code><a href=\"api/core/KeyValueDiffer\" class=\"code-anchor\">KeyValueDiffer</a>#diff()</code> was invoked.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/KeyValueDiffer\">KeyValueDiffer</a></code></td>\n        <td>\n          \n          <p>A differ that tracks changes made to an object over time.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/KeyValueDifferFactory\">KeyValueDifferFactory</a></code></td>\n        <td>\n          \n          <p>Provides a factory for <a href=\"api/core/KeyValueDiffer\"><code>KeyValueDiffer</code></a>.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/MissingTranslationStrategy\">MissingTranslationStrategy</a></code></td>\n        <td>\n          \n          <p>Use this enum at bootstrap as an option of <code>bootstrapModule</code> to define the strategy\nthat the compiler should use in case of missing translations:</p>\n<ul>\n<li>Error: throw if you have missing translations.</li>\n<li>Warning (default): show a warning in the console and/or shell.</li>\n<li>Ignore: do nothing.</li>\n</ul>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ModelFunction\">ModelFunction</a></code></td>\n        <td>\n          \n          <p><code><a href=\"api/core/model\" class=\"code-anchor\">model</a></code> declares a writeable signal that is exposed as an input/output pair on the containing\ndirective. The input name is taken either from the class member or from the <code>alias</code> option.\nThe output name is generated by taking the input name and appending <code>Change</code>.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ModelOptions\">ModelOptions</a></code></td>\n        <td>\n          \n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ModelSignal\">ModelSignal</a></code></td>\n        <td>\n          \n          <p><code><a href=\"api/core/ModelSignal\" class=\"code-anchor\">ModelSignal</a></code> represents a special <code><a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a></code> for a directive/component model field.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ModuleWithProviders\">ModuleWithProviders</a></code></td>\n        <td>\n          \n          <p>A wrapper around an NgModule that associates it with <a href=\"guide/glossary#provider\" title=\"Definition\">providers</a>. Usage without a generic type is deprecated.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/NgZoneOptions\">NgZoneOptions</a></code></td>\n        <td>\n          \n          <p>Used to configure event and run coalescing with <code><a href=\"api/core/provideZoneChangeDetection\" class=\"code-anchor\">provideZoneChangeDetection</a></code>.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/OnChanges\">OnChanges</a></code></td>\n        <td>\n          \n          <p>A lifecycle hook that is called when any data-bound property of a directive changes.\nDefine an <code>ngOnChanges()</code> method to handle the changes.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/OnDestroy\">OnDestroy</a></code></td>\n        <td>\n          \n          <p>A lifecycle hook that is called when a directive, pipe, or service is destroyed.\nUse for any custom cleanup that needs to occur when the\ninstance is destroyed.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/OnInit\">OnInit</a></code></td>\n        <td>\n          \n          <p>A lifecycle hook that is called after Angular has initialized\nall data-bound properties of a directive.\nDefine an <code>ngOnInit()</code> method to handle any additional initialization tasks.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/OutputOptions\">OutputOptions</a></code></td>\n        <td>\n          \n          <p>Options for declaring an output.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/OutputRef\">OutputRef</a></code></td>\n        <td>\n          \n          <p>A reference to an Angular output.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/OutputRefSubscription\">OutputRefSubscription</a></code></td>\n        <td>\n          \n          <p>Function that can be used to manually clean up a\nprogrammatic <a href=\"api/core/OutputRef#subscribe\"><code>OutputRef#subscribe</code></a> subscription.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/PipeTransform\">PipeTransform</a></code></td>\n        <td>\n          \n          <p>An interface that is implemented by pipes in order to perform a transformation.\nAngular invokes the <code>transform</code> method with the value of a binding\nas the first argument, and any parameters as the second argument in list form.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Predicate\">Predicate</a></code></td>\n        <td>\n          \n          <p>A boolean-valued function over a value, possibly including context information\nregarding that value's position in an array.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/RendererStyleFlags2\">RendererStyleFlags2</a></code></td>\n        <td>\n          \n          <p>Flags for renderer-specific style modifiers.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/RendererType2\">RendererType2</a></code></td>\n        <td>\n          \n          <p>Used by <code><a href=\"api/core/RendererFactory2\" class=\"code-anchor\">RendererFactory2</a></code> to associate custom rendering data and styles\nwith a rendering implementation.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/SchemaMetadata\">SchemaMetadata</a></code></td>\n        <td>\n          \n          <p>A schema definition associated with an NgModule.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/SecurityContext\">SecurityContext</a></code></td>\n        <td>\n          \n          <p>A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\nlike <code>innerHTML</code> that could cause Cross Site Scripting (XSS) security bugs when improperly\nhandled.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/SimpleChanges\">SimpleChanges</a></code></td>\n        <td>\n          \n          <p>A hashtable of changes represented by <a href=\"api/core/SimpleChange\"><code>SimpleChange</code></a> objects stored\nat the declared property name they belong to on a Directive or Component. This is\nthe type passed to the <code>ngOnChanges</code> hook.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/StaticClassProvider\">StaticClassProvider</a></code></td>\n        <td>\n          \n          <p>Configures the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> to return an instance of <code>useClass</code> for a token.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/StaticClassSansProvider\">StaticClassSansProvider</a></code></td>\n        <td>\n          \n          <p>Configures the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> to return an instance of <code>useClass</code> for a token.\nBase for <code><a href=\"api/core/StaticClassProvider\" class=\"code-anchor\">StaticClassProvider</a></code> decorator.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/TrackByFunction\">TrackByFunction</a></code></td>\n        <td>\n          \n          <p>A function optionally passed into the <code><a href=\"api/common/NgForOf\" class=\"code-anchor\">NgForOf</a></code> directive to customize how <code><a href=\"api/common/NgForOf\" class=\"code-anchor\">NgForOf</a></code> uniquely\nidentifies items in an iterable.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/TypeDecorator\">TypeDecorator</a></code></td>\n        <td>\n          \n          <p>An interface implemented by all Angular type decorators, which allows them to be used as\ndecorators as well as Angular syntax.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/TypeProvider\">TypeProvider</a></code></td>\n        <td>\n          \n          <p>Configures the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> to return an instance of <code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a></code> when `Type' is used as the token.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ValueProvider\">ValueProvider</a></code></td>\n        <td>\n          \n          <p>Configures the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> to return a value for a token.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ValueSansProvider\">ValueSansProvider</a></code></td>\n        <td>\n          \n          <p>Configures the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> to return a value for a token.\nBase for <code><a href=\"api/core/ValueProvider\" class=\"code-anchor\">ValueProvider</a></code> decorator.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ViewChildFunction\">ViewChildFunction</a></code></td>\n        <td>\n          \n          <p>Type of the <code><a href=\"api/core/viewChild\" class=\"code-anchor\">viewChild</a></code> function. The viewChild function creates a singular view query.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ViewEncapsulation\">ViewEncapsulation</a></code></td>\n        <td>\n          \n          <p>Defines the CSS styles encapsulation policies for the <a href=\"api/core/Component\"><code>Component</code></a> decorator's\n<code>encapsulation</code> option.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/WritableSignal\">WritableSignal</a></code></td>\n        <td>\n          \n          <p>A <code><a href=\"api/core/Signal\" class=\"code-anchor\">Signal</a></code> with a value that can be mutated via a setter interface.</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n  \n  \n  \n\n  \n  \n  \n  <section class=\"export-list\">\n    <h3 id=\"elements\">Elements<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#elements\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ng-container\">&#x3C;ng-container></a></code></td>\n        <td>\n          \n          <p>A special element that can hold structural directives without adding new elements to the DOM.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ng-content\">&#x3C;ng-content></a></code></td>\n        <td>\n          \n          <p>The <code><a href=\"api/core/ng-content\" class=\"code-anchor\">&#x3C;ng-content></a></code> element specifies where to project content inside a component template.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ng-template\">&#x3C;ng-template></a></code></td>\n        <td>\n          \n          <p>Angular's <code><a href=\"api/core/ng-template\" class=\"code-anchor\">&#x3C;ng-template></a></code> element defines a template that is not rendered by default.</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n\n  \n  \n  \n\n  \n  \n  \n  <section class=\"export-list\">\n    <h3 id=\"types\">Types<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core#types\"><i class=\"material-icons\">link</i></a></h3>\n    <table class=\"is-full-width list-table\">\n      \n      <tbody><tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ANIMATION_MODULE_TYPE\">ANIMATION_MODULE_TYPE</a></code></td>\n        <td>\n          \n          <p>A <a href=\"api/core/InjectionToken\">DI token</a> that indicates which animations\nmodule has been loaded.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/APP_BOOTSTRAP_LISTENER\">APP_BOOTSTRAP_LISTENER</a></code></td>\n        <td>\n          \n          <p>A <a href=\"guide/glossary#di-token\" title=\"DI token definition\">DI token</a> that provides a set of callbacks to\nbe called for every component that is bootstrapped.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/APP_ID\">APP_ID</a></code></td>\n        <td>\n          \n          <p>A <a href=\"guide/glossary#di-token\" title=\"DI token definition\">DI token</a> representing a string ID, used\nprimarily for prefixing application attributes and CSS styles when\n<a href=\"api/core/ViewEncapsulation#Emulated\"><code>ViewEncapsulation#Emulated</code></a> is being used.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/APP_INITIALIZER\">APP_INITIALIZER</a></code></td>\n        <td>\n          \n          <p>A <a href=\"guide/glossary#di-token\" title=\"DI token definition\">DI token</a> that you can use to provide\none or more initialization functions.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/COMPILER_OPTIONS\">COMPILER_OPTIONS</a></code></td>\n        <td>\n          \n          <p>Token to provide CompilerOptions in the platform injector.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/CSP_NONCE\">CSP_NONCE</a></code></td>\n        <td>\n          \n          <p>Token used to configure the <a href=\"https://web.dev/strict-csp/\">Content Security Policy</a> nonce that\nAngular will apply when inserting inline styles. If not provided, Angular will look up its value\nfrom the <code>ngCspNonce</code> attribute of the application root node.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/CUSTOM_ELEMENTS_SCHEMA\">CUSTOM_ELEMENTS_SCHEMA</a></code></td>\n        <td>\n          \n          <p>Defines a schema that allows an NgModule to contain the following:</p>\n<ul>\n<li>Non-Angular elements named with dash case (<code>-</code>).</li>\n<li>Element properties named with dash case (<code>-</code>).\nDash case is the naming convention for custom elements.</li>\n</ul>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/CompilerOptions\">CompilerOptions</a></code></td>\n        <td>\n          \n          <p>Options for creating a compiler.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/DEFAULT_CURRENCY_CODE\">DEFAULT_CURRENCY_CODE</a></code></td>\n        <td>\n          \n          <p>Provide this token to set the default currency code your application uses for\nCurrencyPipe when there is no currency code passed into it. This is only used by\nCurrencyPipe and has no relation to locale currency. Defaults to USD if not configured.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ENVIRONMENT_INITIALIZER\">ENVIRONMENT_INITIALIZER</a></code></td>\n        <td>\n          \n          <p>A multi-provider token for initialization functions that will run upon construction of an\nenvironment injector.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/EffectCleanupFn\">EffectCleanupFn</a></code></td>\n        <td>\n          \n          <p>An effect can, optionally, register a cleanup function. If registered, the cleanup is executed\nbefore the next effect run. The cleanup function makes it possible to \"cancel\" any work that the\nprevious effect run might have started.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/EffectCleanupRegisterFn\">EffectCleanupRegisterFn</a></code></td>\n        <td>\n          \n          <p>A callback passed to the effect function that makes it possible to register cleanup logic.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/EnvironmentProviders\">EnvironmentProviders</a></code></td>\n        <td>\n          \n          <p>Encapsulated <code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a></code>s that are only accepted during creation of an <code><a href=\"api/core/EnvironmentInjector\" class=\"code-anchor\">EnvironmentInjector</a></code> (e.g.\nin an <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>).</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/INJECTOR\">INJECTOR</a></code></td>\n        <td>\n          \n          <p>An InjectionToken that gets the current <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> for <code>createInjector()</code>-style injectors.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ImportProvidersSource\">ImportProvidersSource</a></code></td>\n        <td>\n          \n          <p>A source of providers for the <code><a href=\"api/core/importProvidersFrom\" class=\"code-anchor\">importProvidersFrom</a></code> function.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/ImportedNgModuleProviders\" class=\"deprecated-api-item\">ImportedNgModuleProviders</a></code></td>\n        <td>\n          <p><strong>Deprecated:</strong> replaced by <code><a href=\"api/core/EnvironmentProviders\" class=\"code-anchor\">EnvironmentProviders</a></code></p>\n\n          <p>Providers that were imported from NgModules via the <code><a href=\"api/core/importProvidersFrom\" class=\"code-anchor\">importProvidersFrom</a></code> function.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InjectableProvider\">InjectableProvider</a></code></td>\n        <td>\n          \n          <p>Injectable providers used in <code>@<a href=\"api/core/Injectable\" class=\"code-anchor\">Injectable</a></code> decorator.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InputOptionsWithTransform\">InputOptionsWithTransform</a></code></td>\n        <td>\n          \n          <p>Signal input options with the transform option required.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/InputOptionsWithoutTransform\">InputOptionsWithoutTransform</a></code></td>\n        <td>\n          \n          <p>Signal input options without the transform option.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/LOCALE_ID\">LOCALE_ID</a></code></td>\n        <td>\n          \n          <p>Provide this token to set the locale of your application.\nIt is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\nDecimalPipe and PercentPipe) and by ICU expressions.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/NO_ERRORS_SCHEMA\">NO_ERRORS_SCHEMA</a></code></td>\n        <td>\n          \n          <p>Defines a schema that allows any property on any element.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/NgIterable\">NgIterable</a></code></td>\n        <td>\n          \n          <p>A type describing supported iterable types.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/PACKAGE_ROOT_URL\" class=\"deprecated-api-item\">PACKAGE_ROOT_URL</a></code></td>\n        <td>\n          <p><strong>Deprecated:</strong> </p>\n\n          <p>A <a href=\"guide/glossary#di-token\" title=\"DI token definition\">DI token</a> that indicates the root directory of\nthe application</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/PLATFORM_ID\">PLATFORM_ID</a></code></td>\n        <td>\n          \n          <p>A token that indicates an opaque platform ID.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/PLATFORM_INITIALIZER\">PLATFORM_INITIALIZER</a></code></td>\n        <td>\n          \n          <p>A function that is executed when a platform is initialized.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Provider\">Provider</a></code></td>\n        <td>\n          \n          <p>Describes how the <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> should be configured.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ProviderToken\">ProviderToken</a></code></td>\n        <td>\n          \n          <p>Token that can be used to retrieve an instance from an injector or through a query.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/Signal\">Signal</a></code></td>\n        <td>\n          \n          <p>A reactive value which notifies consumers of any changes.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/StateKey\">StateKey</a></code></td>\n        <td>\n          \n          <p>A type-safe key to use with <code><a href=\"api/core/TransferState\" class=\"code-anchor\">TransferState</a></code>.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/StaticProvider\">StaticProvider</a></code></td>\n        <td>\n          \n          <p>Describes how an <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> should be configured as static (that is, without reflection).\nA static provider provides tokens to an injector for various types of dependencies.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/TRANSLATIONS\">TRANSLATIONS</a></code></td>\n        <td>\n          \n          <p>Use this token at bootstrap to provide the content of your translation file (<code>xtb</code>,\n<code>xlf</code> or <code>xlf2</code>) when you want to translate your application in another language.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/TRANSLATIONS_FORMAT\">TRANSLATIONS_FORMAT</a></code></td>\n        <td>\n          \n          <p>Provide this token at bootstrap to set the format of your <a href=\"api/core/TRANSLATIONS\"><code>TRANSLATIONS</code></a>: <code>xtb</code>,\n<code>xlf</code> or <code>xlf2</code>.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/ValueEqualityFn\">ValueEqualityFn</a></code></td>\n        <td>\n          \n          <p>A comparison function which can determine if two values are equal.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/contentChild\">contentChild</a></code></td>\n        <td>\n          \n          <p>Initializes a content child query. Consider using <code>contentChild.required</code> for queries that should\nalways match.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/createNgModuleRef\" class=\"deprecated-api-item\">createNgModuleRef</a></code></td>\n        <td>\n          <p><strong>Deprecated:</strong> Use <code><a href=\"api/core/createNgModule\" class=\"code-anchor\">createNgModule</a></code> instead.</p>\n\n          <p>The <code><a href=\"api/core/createNgModule\" class=\"code-anchor\">createNgModule</a></code> function alias for backwards-compatibility.\nPlease avoid using it directly and use <code><a href=\"api/core/createNgModule\" class=\"code-anchor\">createNgModule</a></code> instead.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor deprecated-api-item\"><a href=\"api/core/defineInjectable\" class=\"deprecated-api-item\">defineInjectable</a></code></td>\n        <td>\n          <p><strong>Deprecated:</strong> in v8, delete after v10. This API should be used only by generated code, and that\ncode should now use ɵɵdefineInjectable instead.</p>\n\n          \n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/input\">input</a></code></td>\n        <td>\n          \n          <p>The <code>input</code> function allows declaration of Angular inputs in directives\nand components.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/model\">model</a></code></td>\n        <td>\n          \n          <p><code><a href=\"api/core/model\" class=\"code-anchor\">model</a></code> declares a writeable signal that is exposed as an input/output\npair on the containing directive.</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/platformCore\">platformCore</a></code></td>\n        <td>\n          \n          <p>This platform has to be included in any other platform</p>\n\n        </td>\n      </tr>\n      \n      <tr>\n        <td><code class=\"code-anchor\"><a href=\"api/core/viewChild\">viewChild</a></code></td>\n        <td>\n          \n          <p>Initializes a view child query.</p>\n\n        </td>\n      </tr>\n      \n    </tbody></table>\n  </section>\n  \n</div>\n</article>\n\n<!-- links to this doc:\n - api/core/ANIMATION_MODULE_TYPE\n - api/core/APP_BOOTSTRAP_LISTENER\n - api/core/APP_ID\n - api/core/APP_INITIALIZER\n - api/core/AbstractType\n - api/core/AfterContentChecked\n - api/core/AfterContentInit\n - api/core/AfterRenderOptions\n - api/core/AfterRenderPhase\n - api/core/AfterRenderRef\n - api/core/AfterViewChecked\n - api/core/AfterViewInit\n - api/core/ApplicationConfig\n - api/core/ApplicationInitStatus\n - api/core/ApplicationModule\n - api/core/ApplicationRef\n - api/core/Attribute\n - api/core/BootstrapOptions\n - api/core/COMPILER_OPTIONS\n - api/core/CSP_NONCE\n - api/core/CUSTOM_ELEMENTS_SCHEMA\n - api/core/ChangeDetectionStrategy\n - api/core/ChangeDetectorRef\n - api/core/ClassProvider\n - api/core/ClassSansProvider\n - api/core/Compiler\n - api/core/CompilerFactory\n - api/core/CompilerOptions\n - api/core/Component\n - api/core/ComponentFactory\n - api/core/ComponentFactoryResolver\n - api/core/ComponentMirror\n - api/core/ComponentRef\n - api/core/ConstructorProvider\n - api/core/ConstructorSansProvider\n - api/core/ContentChild\n - api/core/ContentChildFunction\n - api/core/ContentChildren\n - api/core/CreateComputedOptions\n - api/core/CreateEffectOptions\n - api/core/CreateSignalOptions\n - api/core/DEFAULT_CURRENCY_CODE\n - api/core/DebugElement\n - api/core/DebugEventListener\n - api/core/DebugNode\n - api/core/DefaultIterableDiffer\n - api/core/DestroyRef\n - api/core/Directive\n - api/core/DoBootstrap\n - api/core/DoCheck\n - api/core/ENVIRONMENT_INITIALIZER\n - api/core/EffectCleanupFn\n - api/core/EffectCleanupRegisterFn\n - api/core/EffectRef\n - api/core/ElementRef\n - api/core/EmbeddedViewRef\n - api/core/EnvironmentInjector\n - api/core/EnvironmentProviders\n - api/core/ErrorHandler\n - api/core/EventEmitter\n - api/core/ExistingProvider\n - api/core/ExistingSansProvider\n - api/core/FactoryProvider\n - api/core/FactorySansProvider\n - api/core/ForwardRefFn\n - api/core/GetTestability\n - api/core/Host\n - api/core/HostAttributeToken\n - api/core/HostBinding\n - api/core/HostListener\n - api/core/INJECTOR\n - api/core/ImportProvidersSource\n - api/core/ImportedNgModuleProviders\n - api/core/Inject\n - api/core/InjectFlags\n - api/core/InjectOptions\n - api/core/Injectable\n - api/core/InjectableProvider\n - api/core/InjectableType\n - api/core/InjectionToken\n - api/core/Injector\n - api/core/InjectorType\n - api/core/Input\n - api/core/InputFunction\n - api/core/InputOptions\n - api/core/InputOptionsWithTransform\n - api/core/InputOptionsWithoutTransform\n - api/core/InputSignal\n - api/core/InputSignalWithTransform\n - api/core/IterableChangeRecord\n - api/core/IterableChanges\n - api/core/IterableDiffer\n - api/core/IterableDifferFactory\n - api/core/IterableDiffers\n - api/core/KeyValueChangeRecord\n - api/core/KeyValueChanges\n - api/core/KeyValueDiffer\n - api/core/KeyValueDifferFactory\n - api/core/KeyValueDiffers\n - api/core/LOCALE_ID\n - api/core/MissingTranslationStrategy\n - api/core/ModelFunction\n - api/core/ModelOptions\n - api/core/ModelSignal\n - api/core/ModuleWithComponentFactories\n - api/core/ModuleWithProviders\n - api/core/NO_ERRORS_SCHEMA\n - api/core/NgIterable\n - api/core/NgModule\n - api/core/NgModuleFactory\n - api/core/NgModuleRef\n - api/core/NgProbeToken\n - api/core/NgZone\n - api/core/NgZoneOptions\n - api/core/OnChanges\n - api/core/OnDestroy\n - api/core/OnInit\n - api/core/Optional\n - api/core/Output\n - api/core/OutputEmitterRef\n - api/core/OutputOptions\n - api/core/OutputRef\n - api/core/OutputRefSubscription\n - api/core/PACKAGE_ROOT_URL\n - api/core/PLATFORM_ID\n - api/core/PLATFORM_INITIALIZER\n - api/core/Pipe\n - api/core/PipeTransform\n - api/core/PlatformRef\n - api/core/Predicate\n - api/core/Provider\n - api/core/ProviderToken\n - api/core/Query\n - api/core/QueryList\n - api/core/Renderer2\n - api/core/RendererFactory2\n - api/core/RendererStyleFlags2\n - api/core/RendererType2\n - api/core/Sanitizer\n - api/core/SchemaMetadata\n - api/core/SecurityContext\n - api/core/Self\n - api/core/Signal\n - api/core/SimpleChange\n - api/core/SimpleChanges\n - api/core/SkipSelf\n - api/core/StateKey\n - api/core/StaticClassProvider\n - api/core/StaticClassSansProvider\n - api/core/StaticProvider\n - api/core/TRANSLATIONS\n - api/core/TRANSLATIONS_FORMAT\n - api/core/TemplateRef\n - api/core/Testability\n - api/core/TestabilityRegistry\n - api/core/TrackByFunction\n - api/core/TransferState\n - api/core/Type\n - api/core/TypeDecorator\n - api/core/TypeProvider\n - api/core/ValueEqualityFn\n - api/core/ValueProvider\n - api/core/ValueSansProvider\n - api/core/Version\n - api/core/ViewChild\n - api/core/ViewChildFunction\n - api/core/ViewChildren\n - api/core/ViewContainerRef\n - api/core/ViewEncapsulation\n - api/core/ViewRef\n - api/core/WritableSignal\n - api/core/afterNextRender\n - api/core/afterRender\n - api/core/asNativeElements\n - api/core/assertInInjectionContext\n - api/core/assertNotInReactiveContext\n - api/core/assertPlatform\n - api/core/booleanAttribute\n - api/core/computed\n - api/core/contentChild\n - api/core/contentChildren\n - api/core/createComponent\n - api/core/createEnvironmentInjector\n - api/core/createNgModule\n - api/core/createNgModuleRef\n - api/core/createPlatform\n - api/core/createPlatformFactory\n - api/core/defer\n - api/core/defineInjectable\n - api/core/destroyPlatform\n - api/core/effect\n - api/core/enableProdMode\n - api/core/for\n - api/core/forwardRef\n - api/core/getDebugNode\n - api/core/getModuleFactory\n - api/core/getNgModuleById\n - api/core/getPlatform\n - api/core/if\n - api/core/importProvidersFrom\n - api/core/inject\n - api/core/input\n - api/core/isDevMode\n - api/core/isSignal\n - api/core/isStandalone\n - api/core/makeEnvironmentProviders\n - api/core/makeStateKey\n - api/core/mergeApplicationConfig\n - api/core/model\n - api/core/ng-container\n - api/core/ng-content\n - api/core/ng-template\n - api/core/numberAttribute\n - api/core/output\n - api/core/platformCore\n - api/core/provideZoneChangeDetection\n - api/core/reflectComponentType\n - api/core/resolveForwardRef\n - api/core/runInInjectionContext\n - api/core/rxjs-interop\n - api/core/rxjs-interop/ToObservableOptions\n - api/core/rxjs-interop/ToSignalOptions\n - api/core/rxjs-interop/outputFromObservable\n - api/core/rxjs-interop/outputToObservable\n - api/core/rxjs-interop/takeUntilDestroyed\n - api/core/rxjs-interop/toObservable\n - api/core/rxjs-interop/toSignal\n - api/core/setTestabilityGetter\n - api/core/signal\n - api/core/switch\n - api/core/testing\n - api/core/testing/ComponentFixture\n - api/core/testing/ComponentFixtureAutoDetect\n - api/core/testing/ComponentFixtureNoNgZone\n - api/core/testing/DeferBlockBehavior\n - api/core/testing/DeferBlockFixture\n - api/core/testing/DeferBlockState\n - api/core/testing/InjectSetupWrapper\n - api/core/testing/MetadataOverride\n - api/core/testing/ModuleTeardownOptions\n - api/core/testing/TestBed\n - api/core/testing/TestBedStatic\n - api/core/testing/TestComponentRenderer\n - api/core/testing/TestEnvironmentOptions\n - api/core/testing/TestModuleMetadata\n - api/core/testing/async\n - api/core/testing/discardPeriodicTasks\n - api/core/testing/fakeAsync\n - api/core/testing/flush\n - api/core/testing/flushMicrotasks\n - api/core/testing/getTestBed\n - api/core/testing/inject\n - api/core/testing/resetFakeAsyncZone\n - api/core/testing/tick\n - api/core/testing/waitForAsync\n - api/core/testing/withModule\n - api/core/untracked\n - api/core/viewChild\n - api/core/viewChildren\n - guide/aot-compiler\n - guide/npm-packages\n-->\n<!-- links from this doc:\n - /api\n - /guide/dependency-injection-context\n - /guide/standalone-components\n - api/common/NgForOf\n - api/core#angularcore\n - api/core#classes\n - api/core#decorators\n - api/core#elements\n - api/core#entry-points\n - api/core#functions\n - api/core#ngmodules\n - api/core#primary\n - api/core#primary-entry-point-exports\n - api/core#secondary\n - api/core#structures\n - api/core#types\n - api/core/ANIMATION_MODULE_TYPE\n - api/core/APP_BOOTSTRAP_LISTENER\n - api/core/APP_ID\n - api/core/APP_INITIALIZER\n - api/core/AbstractType\n - api/core/AfterContentChecked\n - api/core/AfterContentInit\n - api/core/AfterRenderOptions\n - api/core/AfterRenderPhase\n - api/core/AfterRenderRef\n - api/core/AfterViewChecked\n - api/core/AfterViewInit\n - api/core/ApplicationConfig\n - api/core/ApplicationInitStatus\n - api/core/ApplicationModule\n - api/core/ApplicationRef\n - api/core/Attribute\n - api/core/BootstrapOptions\n - api/core/COMPILER_OPTIONS\n - api/core/CSP_NONCE\n - api/core/CUSTOM_ELEMENTS_SCHEMA\n - api/core/ChangeDetectionStrategy\n - api/core/ChangeDetectorRef\n - api/core/ClassProvider\n - api/core/ClassSansProvider\n - api/core/Compiler\n - api/core/CompilerFactory\n - api/core/CompilerOptions\n - api/core/Component\n - api/core/ComponentFactory\n - api/core/ComponentFactoryResolver\n - api/core/ComponentMirror\n - api/core/ComponentRef\n - api/core/ConstructorProvider\n - api/core/ConstructorSansProvider\n - api/core/ContentChild\n - api/core/ContentChildFunction\n - api/core/ContentChildren\n - api/core/CreateComputedOptions\n - api/core/CreateEffectOptions\n - api/core/CreateSignalOptions\n - api/core/DEFAULT_CURRENCY_CODE\n - api/core/DebugElement\n - api/core/DebugEventListener\n - api/core/DebugNode\n - api/core/DefaultIterableDiffer\n - api/core/DestroyRef\n - api/core/Directive\n - api/core/DoBootstrap\n - api/core/DoCheck\n - api/core/ENVIRONMENT_INITIALIZER\n - api/core/EffectCleanupFn\n - api/core/EffectCleanupRegisterFn\n - api/core/EffectRef\n - api/core/ElementRef\n - api/core/EmbeddedViewRef\n - api/core/EnvironmentInjector\n - api/core/EnvironmentProviders\n - api/core/ErrorHandler\n - api/core/EventEmitter\n - api/core/ExistingProvider\n - api/core/ExistingSansProvider\n - api/core/FactoryProvider\n - api/core/FactorySansProvider\n - api/core/ForwardRefFn\n - api/core/GetTestability\n - api/core/Host\n - api/core/HostAttributeToken\n - api/core/HostBinding\n - api/core/HostListener\n - api/core/INJECTOR\n - api/core/ImportProvidersSource\n - api/core/ImportedNgModuleProviders\n - api/core/Inject\n - api/core/InjectFlags\n - api/core/InjectOptions\n - api/core/Injectable\n - api/core/InjectableProvider\n - api/core/InjectableType\n - api/core/InjectionToken\n - api/core/Injector\n - api/core/InjectorType\n - api/core/Input\n - api/core/InputFunction\n - api/core/InputOptions\n - api/core/InputOptionsWithTransform\n - api/core/InputOptionsWithoutTransform\n - api/core/InputSignal\n - api/core/InputSignalWithTransform\n - api/core/IterableChangeRecord\n - api/core/IterableChanges\n - api/core/IterableDiffer\n - api/core/IterableDifferFactory\n - api/core/IterableDiffers\n - api/core/KeyValueChangeRecord\n - api/core/KeyValueChanges\n - api/core/KeyValueDiffer\n - api/core/KeyValueDifferFactory\n - api/core/KeyValueDiffers\n - api/core/LOCALE_ID\n - api/core/MissingTranslationStrategy\n - api/core/ModelFunction\n - api/core/ModelOptions\n - api/core/ModelSignal\n - api/core/ModuleWithComponentFactories\n - api/core/ModuleWithProviders\n - api/core/NO_ERRORS_SCHEMA\n - api/core/NgIterable\n - api/core/NgModule\n - api/core/NgModule#id\n - api/core/NgModuleFactory\n - api/core/NgModuleRef\n - api/core/NgProbeToken\n - api/core/NgZone\n - api/core/NgZoneOptions\n - api/core/OnChanges\n - api/core/OnDestroy\n - api/core/OnInit\n - api/core/Optional\n - api/core/Output\n - api/core/OutputEmitterRef\n - api/core/OutputOptions\n - api/core/OutputRef\n - api/core/OutputRef#subscribe\n - api/core/OutputRefSubscription\n - api/core/PACKAGE_ROOT_URL\n - api/core/PLATFORM_ID\n - api/core/PLATFORM_INITIALIZER\n - api/core/Pipe\n - api/core/PipeTransform\n - api/core/PlatformRef\n - api/core/PlatformRef#bootstrapModule\n - api/core/Predicate\n - api/core/Provider\n - api/core/ProviderToken\n - api/core/Query\n - api/core/QueryList\n - api/core/Renderer2\n - api/core/RendererFactory2\n - api/core/RendererStyleFlags2\n - api/core/RendererType2\n - api/core/Sanitizer\n - api/core/SchemaMetadata\n - api/core/SecurityContext\n - api/core/Self\n - api/core/Signal\n - api/core/SimpleChange\n - api/core/SimpleChanges\n - api/core/SkipSelf\n - api/core/StateKey\n - api/core/StaticClassProvider\n - api/core/StaticClassSansProvider\n - api/core/StaticProvider\n - api/core/TRANSLATIONS\n - api/core/TRANSLATIONS_FORMAT\n - api/core/TemplateRef\n - api/core/Testability\n - api/core/TestabilityRegistry\n - api/core/TrackByFunction\n - api/core/TransferState\n - api/core/Type\n - api/core/TypeDecorator\n - api/core/TypeProvider\n - api/core/ValueEqualityFn\n - api/core/ValueProvider\n - api/core/ValueSansProvider\n - api/core/Version\n - api/core/ViewChild\n - api/core/ViewChildFunction\n - api/core/ViewChildren\n - api/core/ViewContainerRef\n - api/core/ViewEncapsulation\n - api/core/ViewEncapsulation#Emulated\n - api/core/ViewRef\n - api/core/WritableSignal\n - api/core/afterNextRender\n - api/core/afterRender\n - api/core/asNativeElements\n - api/core/assertInInjectionContext\n - api/core/assertNotInReactiveContext\n - api/core/assertPlatform\n - api/core/booleanAttribute\n - api/core/computed\n - api/core/contentChild\n - api/core/contentChildren\n - api/core/createComponent\n - api/core/createEnvironmentInjector\n - api/core/createNgModule\n - api/core/createNgModuleRef\n - api/core/createPlatform\n - api/core/createPlatformFactory\n - api/core/defineInjectable\n - api/core/destroyPlatform\n - api/core/effect\n - api/core/enableProdMode\n - api/core/forwardRef\n - api/core/getDebugNode\n - api/core/getModuleFactory\n - api/core/getNgModuleById\n - api/core/getPlatform\n - api/core/importProvidersFrom\n - api/core/inject\n - api/core/input\n - api/core/isDevMode\n - api/core/isSignal\n - api/core/isStandalone\n - api/core/makeEnvironmentProviders\n - api/core/makeStateKey\n - api/core/mergeApplicationConfig\n - api/core/model\n - api/core/ng-container\n - api/core/ng-content\n - api/core/ng-template\n - api/core/numberAttribute\n - api/core/output\n - api/core/platformCore\n - api/core/provideZoneChangeDetection\n - api/core/reflectComponentType\n - api/core/resolveForwardRef\n - api/core/runInInjectionContext\n - api/core/rxjs-interop\n - api/core/rxjs-interop/toSignal\n - api/core/setTestabilityGetter\n - api/core/signal\n - api/core/testing\n - api/core/untracked\n - api/core/viewChild\n - api/core/viewChildren\n - api/platform-browser/BrowserModule\n - api/platform-browser/bootstrapApplication\n - guide/dependency-injection-context\n - guide/dependency-injection-providers\n - guide/deprecations#jit-api-changes\n - guide/glossary#di-token\n - guide/glossary#provider\n - guide/glossary#view\n - guide/glossary#view-hierarchy\n - https://github.com/angular/angular/tree/17.3.12/packages/core/PACKAGE.md\n - https://web.dev/strict-csp/\n-->"
}