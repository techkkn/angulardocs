{
  "id": "api/common/http/HttpInterceptorFn",
  "title": "HttpInterceptorFn",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/common\", \"name\": \"@angular/common\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/common/http\", \"name\": \"@angular/common/http\" } },\n            { \"@type\": \"ListItem\", \"position\": 4, \"item\": { \"@id\": \"https://angular.io/api/common/http/HttpInterceptorFn\", \"name\": \"HttpInterceptorFn\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/common\">@angular/common</a> > <a href=\"api/common/http\">@angular/common/http</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/common/http/src/interceptor.ts#L90-L135\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"httpinterceptorfn\">HttpInterceptorFn<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptorFn#httpinterceptorfn\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label type-alias\">type-alias</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>An interceptor for HTTP requests made via <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code>.</p>\n\n    <p><a href=\"api/common/http/HttpInterceptorFn#description\">See more...</a></p>\n  </section>\n  <section class=\"type-alias-overview\">\n    <code-example language=\"ts\" hidecopy=\"true\">\n    type <a href=\"api/common/http/HttpInterceptorFn\" class=\"code-anchor\">HttpInterceptorFn</a> = (req: <a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a>&#x3C;unknown>, next: <a href=\"api/common/http/HttpHandlerFn\" class=\"code-anchor\">HttpHandlerFn</a>) => Observable&#x3C;<a href=\"api/common/http/HttpEvent\" class=\"code-anchor\">HttpEvent</a>&#x3C;unknown>>;\n    </code-example>\n  </section>\n\n<section class=\"see-also\">\n  <h2 id=\"see-also\">See also<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptorFn#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><p><a href=\"guide/http-intercept-requests-and-responses\">HTTP Guide</a></p></li>\n    <li><a href=\"api/common/http/withInterceptors\"><code>withInterceptors</code></a></li>\n  </ul>\n</section>\n  \n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptorFn#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p><code><a href=\"api/common/http/HttpInterceptorFn\" class=\"code-anchor\">HttpInterceptorFn</a></code>s are middleware functions which <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> calls when a request is made.\nThese functions have the opportunity to modify the outgoing request or any response that comes\nback, as well as block, redirect, or otherwise change the request or response semantics.</p>\n<p>An <code><a href=\"api/common/http/HttpHandlerFn\" class=\"code-anchor\">HttpHandlerFn</a></code> representing the next interceptor (or the backend which will make a real HTTP\nrequest) is provided. Most interceptors will delegate to this function, but that is not required\n(see <code><a href=\"api/common/http/HttpHandlerFn\" class=\"code-anchor\">HttpHandlerFn</a></code> for more details).</p>\n<p><code><a href=\"api/common/http/HttpInterceptorFn\" class=\"code-anchor\">HttpInterceptorFn</a></code>s are executed in an <a href=\"/guide/dependency-injection-context\">injection context</a>.\nThey have access to <code>inject()</code> via the <code><a href=\"api/core/EnvironmentInjector\" class=\"code-anchor\">EnvironmentInjector</a></code> from which they were configured.</p>\n  <p>Further information is available in the <a href=\"api/common/http/HttpInterceptorFn#usage-notes\">Usage Notes...</a></p>\n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">Usage notes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/common/http/HttpInterceptorFn#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p>Here is a noop interceptor that passes the request through without modifying it:</p>\n<code-example language=\"typescript\">\nexport const noopInterceptor: <a href=\"api/common/http/HttpInterceptorFn\" class=\"code-anchor\">HttpInterceptorFn</a> = (req: <a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a>&#x3C;unknown>, next:\n<a href=\"api/common/http/HttpHandlerFn\" class=\"code-anchor\">HttpHandlerFn</a>) => {\n  return next(modifiedReq);\n};\n</code-example>\n<p>If you want to alter a request, clone it first and modify the clone before passing it to the\n<code>next()</code> handler function.</p>\n<p>Here is a basic interceptor that adds a bearer token to the headers</p>\n<code-example language=\"typescript\">\nexport const authenticationInterceptor: <a href=\"api/common/http/HttpInterceptorFn\" class=\"code-anchor\">HttpInterceptorFn</a> = (req: <a href=\"api/common/http/HttpRequest\" class=\"code-anchor\">HttpRequest</a>&#x3C;unknown>, next:\n<a href=\"api/common/http/HttpHandlerFn\" class=\"code-anchor\">HttpHandlerFn</a>) => {\n   const userToken = 'MY_TOKEN'; const modifiedReq = req.clone({\n     headers: req.headers.set('Authorization', `Bearer ${userToken}`),\n   });\n\n   return next(modifiedReq);\n};\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/common/http\n - api/common/http/HttpInterceptor\n - api/common/http/withInterceptors\n - cli/generate\n-->\n<!-- links from this doc:\n - /api\n - /guide/dependency-injection-context\n - api/common\n - api/common/http\n - api/common/http/HttpClient\n - api/common/http/HttpEvent\n - api/common/http/HttpHandlerFn\n - api/common/http/HttpInterceptorFn#description\n - api/common/http/HttpInterceptorFn#httpinterceptorfn\n - api/common/http/HttpInterceptorFn#see-also\n - api/common/http/HttpInterceptorFn#usage-notes\n - api/common/http/HttpRequest\n - api/common/http/withInterceptors\n - api/core/EnvironmentInjector\n - guide/http-intercept-requests-and-responses\n - https://github.com/angular/angular/tree/17.3.12/packages/common/http/src/interceptor.ts#L90-L135\n-->"
}