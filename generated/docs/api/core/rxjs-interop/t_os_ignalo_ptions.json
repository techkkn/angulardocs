{
  "id": "api/core/rxjs-interop/ToSignalOptions",
  "title": "ToSignalOptions",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/core/rxjs-interop\", \"name\": \"@angular/core/rxjs-interop\" } },\n            { \"@type\": \"ListItem\", \"position\": 4, \"item\": { \"@id\": \"https://angular.io/api/core/rxjs-interop/ToSignalOptions\", \"name\": \"ToSignalOptions\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/core\">@angular/core</a> > <a href=\"api/core/rxjs-interop\">@angular/core/rxjs-interop</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/rxjs-interop/src/to_signal.ts#L11-L61\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"tosignaloptions\">ToSignalOptions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/rxjs-interop/ToSignalOptions#tosignaloptions\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label interface\">interface</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>Options for <code><a href=\"api/core/rxjs-interop/toSignal\" class=\"code-anchor\">toSignal</a></code>.</p>\n\n  </section><section class=\"interface-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/core/rxjs-interop/ToSignalOptions\" class=\"code-anchor\">ToSignalOptions</a> {\n  <a class=\"code-anchor\" href=\"api/core/rxjs-interop/ToSignalOptions#initialValue\"><span class=\"member-name\">initialValue</span>?: unknown</a>\n  <a class=\"code-anchor\" href=\"api/core/rxjs-interop/ToSignalOptions#requireSync\"><span class=\"member-name\">requireSync</span>?: boolean</a>\n  <a class=\"code-anchor\" href=\"api/core/rxjs-interop/ToSignalOptions#injector\"><span class=\"member-name\">injector</span>?: Injector</a>\n  <a class=\"code-anchor\" href=\"api/core/rxjs-interop/ToSignalOptions#manualCleanup\"><span class=\"member-name\">manualCleanup</span>?: boolean</a>\n  <a class=\"code-anchor\" href=\"api/core/rxjs-interop/ToSignalOptions#rejectErrors\"><span class=\"member-name\">rejectErrors</span>?: boolean</a>\n}\n</code-example>\n\n\n</section>\n\n  \n  \n<section class=\"instance-properties\">\n  <h2 id=\"properties\">Properties<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/rxjs-interop/ToSignalOptions#properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"initialValue\"></a>\n          <code class=\"\"><span class=\"member-name\">initialValue</span>?: unknown</code>\n        </td>\n        <td>\n          <p>Initial value for the signal produced by <code><a href=\"api/core/rxjs-interop/toSignal\" class=\"code-anchor\">toSignal</a></code>.</p>\n          <p>This will be the value of the signal until the observable emits its first value.</p>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"requireSync\"></a>\n          <code class=\"\"><span class=\"member-name\">requireSync</span>?: boolean</code>\n        </td>\n        <td>\n          <p>Whether to require that the observable emits synchronously when <code><a href=\"api/core/rxjs-interop/toSignal\" class=\"code-anchor\">toSignal</a></code> subscribes.</p>\n          <p>If this is <code>true</code>, <code><a href=\"api/core/rxjs-interop/toSignal\" class=\"code-anchor\">toSignal</a></code> will assert that the observable produces a value immediately upon\nsubscription. Setting this option removes the need to either deal with <code>undefined</code> in the\nsignal type or provide an <code>initialValue</code>, at the cost of a runtime error if this requirement is\nnot met.</p>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"injector\"></a>\n          <code class=\"\"><span class=\"member-name\">injector</span>?: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>\n        </td>\n        <td>\n          <p><code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> which will provide the <code><a href=\"api/core/DestroyRef\" class=\"code-anchor\">DestroyRef</a></code> used to clean up the Observable subscription.</p>\n          <p>If this is not provided, a <code><a href=\"api/core/DestroyRef\" class=\"code-anchor\">DestroyRef</a></code> will be retrieved from the current <a href=\"/guide/dependency-injection-context\">injection\ncontext</a>, unless manual cleanup is requested.</p>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"manualCleanup\"></a>\n          <code class=\"\"><span class=\"member-name\">manualCleanup</span>?: boolean</code>\n        </td>\n        <td>\n          <p>Whether the subscription should be automatically cleaned up (via <code><a href=\"api/core/DestroyRef\" class=\"code-anchor\">DestroyRef</a></code>) when\n<code><a href=\"api/core/rxjs-interop/toSignal\" class=\"code-anchor\">toSignal</a></code>'s creation context is destroyed.</p>\n          <p>If manual cleanup is enabled, then <code><a href=\"api/core/DestroyRef\" class=\"code-anchor\">DestroyRef</a></code> is not used, and the subscription will persist\nuntil the <code>Observable</code> itself completes.</p>\n\n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"rejectErrors\"></a>\n          <code class=\"\"><span class=\"member-name\">rejectErrors</span>?: boolean</code>\n        </td>\n        <td>\n          <p>Whether <code><a href=\"api/core/rxjs-interop/toSignal\" class=\"code-anchor\">toSignal</a></code> should throw errors from the Observable error channel back to RxJS, where\nthey'll be processed as uncaught exceptions.</p>\n          <p>In practice, this means that the signal returned by <code><a href=\"api/core/rxjs-interop/toSignal\" class=\"code-anchor\">toSignal</a></code> will keep returning the last\ngood value forever, as Observables which error produce no further values. This option emulates\nthe behavior of the <code>async</code> pipe.</p>\n\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n  \n</div>\n</article>\n\n<!-- links to this doc:\n - api/core/rxjs-interop\n - api/core/rxjs-interop/toSignal\n-->\n<!-- links from this doc:\n - /api\n - /guide/dependency-injection-context\n - api/core\n - api/core/DestroyRef\n - api/core/Injector\n - api/core/rxjs-interop\n - api/core/rxjs-interop/ToSignalOptions#initialValue\n - api/core/rxjs-interop/ToSignalOptions#injector\n - api/core/rxjs-interop/ToSignalOptions#manualCleanup\n - api/core/rxjs-interop/ToSignalOptions#properties\n - api/core/rxjs-interop/ToSignalOptions#rejectErrors\n - api/core/rxjs-interop/ToSignalOptions#requireSync\n - api/core/rxjs-interop/ToSignalOptions#tosignaloptions\n - api/core/rxjs-interop/toSignal\n - https://github.com/angular/angular/tree/17.3.12/packages/core/rxjs-interop/src/to_signal.ts#L11-L61\n-->"
}