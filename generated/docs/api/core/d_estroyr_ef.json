{
  "id": "api/core/DestroyRef",
  "title": "DestroyRef",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/core/DestroyRef\", \"name\": \"DestroyRef\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/linker/destroy_ref.ts#L13-L57\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"destroyref\">DestroyRef<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/DestroyRef#destroyref\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p><code><a href=\"api/core/DestroyRef\" class=\"code-anchor\">DestroyRef</a></code> lets you set callbacks to run for any cleanup or destruction behavior.\nThe scope of this destruction depends on where <code><a href=\"api/core/DestroyRef\" class=\"code-anchor\">DestroyRef</a></code> is injected. If <code><a href=\"api/core/DestroyRef\" class=\"code-anchor\">DestroyRef</a></code>\nis injected in a component or directive, the callbacks run when that component or\ndirective is destroyed. Otherwise the callbacks run when a corresponding injector is destroyed.</p>\n\n  </section><section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nabstract class <a href=\"api/core/DestroyRef\" class=\"code-anchor\">DestroyRef</a> {<br><a class=\"code-anchor\" href=\"api/core/DestroyRef#onDestroy\">abstract <span class=\"member-name\">onDestroy</span>(callback: () => void): () => void</a>\n}\n</code-example>\n\n</section>\n\n  \n  \n<section class=\"instance-methods\">\n  <h2 id=\"methods\">Methods<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/DestroyRef#methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"onDestroy\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"ondestroy\">onDestroy()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/DestroyRef#ondestroy\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/linker/destroy_ref.ts#L23-L44\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Registers a destroy callback in a given lifecycle scope.  Returns a cleanup function that can\nbe invoked to unregister the callback.</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract <span class=\"member-name\">onDestroy</span>(callback: () => void): () => void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>callback</code>\n      </td>\n      <td class=\"param-type\"><code>() => void</code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">Returns</h6>\n  <p><code>() => void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"onDestroy-usage-notes\">Usage Notes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/DestroyRef#onDestroy-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/DestroyRef#example\"><i class=\"material-icons\">link</i></a></h5>\n<code-example language=\"typescript\">\nconst destroyRef = inject(<a href=\"api/core/DestroyRef\" class=\"code-anchor\">DestroyRef</a>);\n\n// register a destroy callback\nconst unregisterFn = destroyRef.onDestroy(() => doSomethingOnDestroy());\n\n// stop the destroy callback from executing if needed\nunregisterFn();\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n</div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/CreateEffectOptions\n - api/core/rxjs-interop/ToSignalOptions\n - api/core/rxjs-interop/takeUntilDestroyed\n - guide/lifecycle-hooks\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/DestroyRef#destroyref\n - api/core/DestroyRef#example\n - api/core/DestroyRef#methods\n - api/core/DestroyRef#onDestroy\n - api/core/DestroyRef#onDestroy-usage-notes\n - api/core/DestroyRef#ondestroy\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/linker/destroy_ref.ts#L13-L57\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/linker/destroy_ref.ts#L23-L44\n-->"
}