{
  "id": "api/core/APP_INITIALIZER",
  "title": "APP_INITIALIZER",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/core/APP_INITIALIZER\", \"name\": \"APP_INITIALIZER\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/application/application_init.ts#L135-L136\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"app_initializer\">APP_INITIALIZER<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/APP_INITIALIZER#app_initializer\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label const\">const</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>A <a href=\"guide/glossary#di-token\" title=\"DI token definition\">DI token</a> that you can use to provide\none or more initialization functions.</p>\n\n    <p><a href=\"api/core/APP_INITIALIZER#description\">See more...</a></p>\n  </section>\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n  const <a href=\"api/core/APP_INITIALIZER\" class=\"code-anchor\">APP_INITIALIZER</a>: <a href=\"api/core/InjectionToken\" class=\"code-anchor\">InjectionToken</a>&#x3C;readonly (() => void | Observable&#x3C;unknown> | Promise&#x3C;unknown>)[]>;\n  </code-example>\n\n<section class=\"see-also\">\n  <h2 id=\"see-also\">See also<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/APP_INITIALIZER#see-also\"><i class=\"material-icons\">link</i></a></h2>\n  <ul>\n    <li><a href=\"api/core/ApplicationInitStatus\"><code>ApplicationInitStatus</code></a></li>\n  </ul>\n</section>\n  \n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/APP_INITIALIZER#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>The provided functions are injected at application startup and executed during\napp initialization. If any of these functions returns a Promise or an Observable, initialization\ndoes not complete until the Promise is resolved or the Observable is completed.</p>\n<p>You can, for example, create a factory function that loads language data\nor an external configuration, and provide that function to the <code><a href=\"api/core/APP_INITIALIZER\" class=\"code-anchor\">APP_INITIALIZER</a></code> token.\nThe function is executed during the application bootstrap process,\nand the needed data is available on startup.</p>\n  <p>Further information is available in the <a href=\"api/core/APP_INITIALIZER#usage-notes\">Usage Notes...</a></p>\n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">Usage notes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/APP_INITIALIZER#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p>The following example illustrates how to configure a multi-provider using <code><a href=\"api/core/APP_INITIALIZER\" class=\"code-anchor\">APP_INITIALIZER</a></code> token\nand a function returning a promise.</p>\n<h3 id=\"example-with-ngmodule-based-application\">Example with NgModule-based application<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/APP_INITIALIZER#example-with-ngmodule-based-application\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\n function initializeApp(): Promise&#x3C;any> {\n   return new Promise((resolve, reject) => {\n     // Do some asynchronous stuff\n     resolve();\n   });\n }\n\n @<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  imports: [<a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent],\n  providers: [{\n    provide: <a href=\"api/core/APP_INITIALIZER\" class=\"code-anchor\">APP_INITIALIZER</a>,\n    useFactory: () => initializeApp,\n    multi: true\n   }]\n  })\n export class AppModule {}\n</code-example>\n<h3 id=\"example-with-standalone-application\">Example with standalone application<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/APP_INITIALIZER#example-with-standalone-application\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\nexport function initializeApp(<a href=\"api/common/http\" class=\"code-anchor\">http</a>: <a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a>) {\n  return (): Promise&#x3C;any> =>\n    firstValueFrom(\n      <a href=\"api/common/http\" class=\"code-anchor\">http</a>\n        .get(\"https://someUrl.com/api/user\")\n        .pipe(tap(user => { ... }))\n    );\n}\n\n<a href=\"api/platform-browser/bootstrapApplication\" class=\"code-anchor\">bootstrapApplication</a>(App, {\n  providers: [\n    <a href=\"api/common/http/provideHttpClient\" class=\"code-anchor\">provideHttpClient</a>(),\n    {\n      provide: <a href=\"api/core/APP_INITIALIZER\" class=\"code-anchor\">APP_INITIALIZER</a>,\n      useFactory: initializeApp,\n      multi: true,\n      deps: [<a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a>],\n    },\n  ],\n});\n\n</code-example>\n<p>It's also possible to configure a multi-provider using <code><a href=\"api/core/APP_INITIALIZER\" class=\"code-anchor\">APP_INITIALIZER</a></code> token and a function\nreturning an observable, see an example below. Note: the <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> in this example is used for\ndemo purposes to illustrate how the factory function can work with other providers available\nthrough DI.</p>\n<h3 id=\"example-with-ngmodule-based-application-1\">Example with NgModule-based application<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/APP_INITIALIZER#example-with-ngmodule-based-application-1\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\n function initializeAppFactory(httpClient: <a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a>): () => Observable&#x3C;any> {\n  return () => httpClient.get(\"https://someUrl.com/api/user\")\n    .pipe(\n       tap(user => { ... })\n    );\n }\n\n @<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n   imports: [<a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>, <a href=\"api/common/http/HttpClientModule\" class=\"code-anchor\">HttpClientModule</a>],\n   declarations: [AppComponent],\n   bootstrap: [AppComponent],\n   providers: [{\n     provide: <a href=\"api/core/APP_INITIALIZER\" class=\"code-anchor\">APP_INITIALIZER</a>,\n     useFactory: initializeAppFactory,\n     deps: [<a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a>],\n     multi: true\n   }]\n })\n export class AppModule {}\n</code-example>\n<h3 id=\"example-with-standalone-application-1\">Example with standalone application<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/APP_INITIALIZER#example-with-standalone-application-1\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\n function initializeAppFactory(httpClient: <a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a>): () => Observable&#x3C;any> {\n  return () => httpClient.get(\"https://someUrl.com/api/user\")\n    .pipe(\n       tap(user => { ... })\n    );\n }\n\n<a href=\"api/platform-browser/bootstrapApplication\" class=\"code-anchor\">bootstrapApplication</a>(App, {\n  providers: [\n    <a href=\"api/common/http/provideHttpClient\" class=\"code-anchor\">provideHttpClient</a>(),\n    {\n      provide: <a href=\"api/core/APP_INITIALIZER\" class=\"code-anchor\">APP_INITIALIZER</a>,\n      useFactory: initializeAppFactory,\n      multi: true,\n      deps: [<a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a>],\n    },\n  ],\n});\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/ApplicationInitStatus\n-->\n<!-- links from this doc:\n - /api\n - api/common/http\n - api/common/http/HttpClient\n - api/common/http/HttpClientModule\n - api/common/http/provideHttpClient\n - api/core\n - api/core/APP_INITIALIZER#app_initializer\n - api/core/APP_INITIALIZER#description\n - api/core/APP_INITIALIZER#example-with-ngmodule-based-application\n - api/core/APP_INITIALIZER#example-with-ngmodule-based-application-1\n - api/core/APP_INITIALIZER#example-with-standalone-application\n - api/core/APP_INITIALIZER#example-with-standalone-application-1\n - api/core/APP_INITIALIZER#see-also\n - api/core/APP_INITIALIZER#usage-notes\n - api/core/ApplicationInitStatus\n - api/core/InjectionToken\n - api/core/NgModule\n - api/platform-browser/BrowserModule\n - api/platform-browser/bootstrapApplication\n - guide/glossary#di-token\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/application/application_init.ts#L135-L136\n-->"
}