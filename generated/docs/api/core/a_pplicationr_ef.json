{
  "id": "api/core/ApplicationRef",
  "title": "ApplicationRef",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/core/ApplicationRef\", \"name\": \"ApplicationRef\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/application/application_ref.ts#L173-L679\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"applicationref\">ApplicationRef<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#applicationref\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    <label class=\"github-links api-status-label final\" title=\"This class should not be extended.\">\n      <a href=\"https://github.com/angular/angular/tree/17.3.12/docs/PUBLIC_API.md#final-classes\">final</a>\n    </label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>A reference to an Angular application running on a page.</p>\n\n  </section><section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a> {\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#destroyed\"><span class=\"member-name\">destroyed</span></a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#componentTypes\"><span class=\"member-name\">componentTypes</span>: Type&#x3C;any>[]</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#components\"><span class=\"member-name\">components</span>: ComponentRef&#x3C;any>[]</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#isStable\"><span class=\"member-name\">isStable</span>: Observable&#x3C;boolean></a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#injector\"><span class=\"member-name\">injector</span>: EnvironmentInjector</a>\n  <a class=\"code-anchor\" href=\"api/core/ApplicationRef#viewCount\"><span class=\"member-name\">viewCount</span></a><br><a class=\"code-anchor\" href=\"api/core/ApplicationRef#bootstrap\"><span class=\"member-name\">bootstrap</span>&#x3C;C>(componentOrFactory: ComponentFactory&#x3C;C> | Type&#x3C;C>, rootSelectorOrNode?: any): ComponentRef&#x3C;C></a><br><a class=\"code-anchor\" href=\"api/core/ApplicationRef#bootstrap\"><span class=\"member-name\">bootstrap</span>&#x3C;C>(component: Type&#x3C;C>, rootSelectorOrNode?: any): ComponentRef&#x3C;C></a><br><a class=\"code-anchor\" href=\"api/core/ApplicationRef#bootstrap\"><span class=\"member-name\">bootstrap</span>&#x3C;C>(componentFactory: ComponentFactory&#x3C;C>, rootSelectorOrNode?: any): ComponentRef&#x3C;C></a><br><a class=\"code-anchor\" href=\"api/core/ApplicationRef#tick\"><span class=\"member-name\">tick</span>(): void</a><br><a class=\"code-anchor\" href=\"api/core/ApplicationRef#attachView\"><span class=\"member-name\">attachView</span>(viewRef: ViewRef): void</a><br><a class=\"code-anchor\" href=\"api/core/ApplicationRef#detachView\"><span class=\"member-name\">detachView</span>(viewRef: ViewRef): void</a><br><a class=\"code-anchor\" href=\"api/core/ApplicationRef#onDestroy\"><span class=\"member-name\">onDestroy</span>(callback: () => void): VoidFunction</a><br><a class=\"code-anchor\" href=\"api/core/ApplicationRef#destroy\"><span class=\"member-name\">destroy</span>(): void</a>\n}\n</code-example>\n\n</section>\n\n<h2 id=\"provided-in\">Provided in<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#provided-in\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n  <li>\n    <code>'root'</code>\n  </li>\n</ul>\n  \n  \n<section class=\"instance-properties\">\n  <h2 id=\"properties\">Properties<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"destroyed\"></a>\n          <code class=\"\"><span class=\"member-name\">destroyed</span></code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">Read-Only</span>\n          <p>Indicates whether this instance was destroyed.</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"componentTypes\"></a>\n          <code class=\"\"><span class=\"member-name\">componentTypes</span>: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&#x3C;any>[]</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">Read-Only</span>\n          <p>Get a list of component types registered to this application.\nThis list is populated even before the component is created.</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"components\"></a>\n          <code class=\"\"><span class=\"member-name\">components</span>: <a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&#x3C;any>[]</code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">Read-Only</span>\n          <p>Get a list of components registered to this application.</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"isStable\"></a>\n          <code class=\"\"><span class=\"member-name\">isStable</span>: Observable&#x3C;boolean></code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">Read-Only</span>\n          <p>Returns an Observable that indicates when the application is stable or unstable.</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"injector\"></a>\n          <code class=\"\"><span class=\"member-name\">injector</span>: <a href=\"api/core/EnvironmentInjector\" class=\"code-anchor\">EnvironmentInjector</a></code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">Read-Only</span>\n          <p>The <code><a href=\"api/core/EnvironmentInjector\" class=\"code-anchor\">EnvironmentInjector</a></code> used to create this application.</p>\n          \n        </td>\n      </tr>\n      <tr class=\"instance-property\">\n        <td>\n          <a id=\"viewCount\"></a>\n          <code class=\"\"><span class=\"member-name\">viewCount</span></code>\n        </td>\n        <td>\n          <span class=\"read-only-property\">Read-Only</span>\n          <p>Returns the number of attached views.</p>\n          \n        </td>\n      </tr>\n    </tbody>\n  </table>\n</section>\n<section class=\"instance-methods\">\n  <h2 id=\"methods\">Methods<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#methods\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"bootstrap\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"bootstrap\">bootstrap()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#bootstrap\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/application/application_ref.ts#L397-L481\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Bootstrap a component onto the element identified by its selector or, optionally, to a\nspecified element.</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">bootstrap</span>&#x3C;C>(component: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&#x3C;C>, rootSelectorOrNode?: any): <a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&#x3C;C></code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>component</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&#x3C;C></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>rootSelectorOrNode</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p>Optional. Default is <code>undefined</code>.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns\">Returns</h6>\n  <p><code><a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef&#x3C;C></a></code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading deprecated-api-item\"><span class=\"member-name\">bootstrap</span>&#x3C;C>(componentFactory: <a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory</a>&#x3C;C>, rootSelectorOrNode?: any): <a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef</a>&#x3C;C></code-example>\n  <div class=\"deprecated\">\n    <p><strong>Deprecated</strong> Passing Component factories as the <code>Application.bootstrap</code> function argument is\ndeprecated. Pass Component Types instead.</p>\n\n  </div>\n\n  <h6 class=\"no-anchor\" id=\"parameters-1\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>componentFactory</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/ComponentFactory\" class=\"code-anchor\">ComponentFactory&#x3C;C></a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>rootSelectorOrNode</code>\n      </td>\n      <td class=\"param-type\"><code>any</code></td>\n      <td class=\"param-description\">\n        <p>Optional. Default is <code>undefined</code>.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns-1\">Returns</h6>\n  <p><code><a href=\"api/core/ComponentRef\" class=\"code-anchor\">ComponentRef&#x3C;C></a></code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"usage-notes\">\n        <h4 id=\"bootstrap-usage-notes\">Usage Notes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#bootstrap-usage-notes\"><i class=\"material-icons\">link</i></a></h4>\n        <h5 id=\"bootstrap-process\">Bootstrap process<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#bootstrap-process\"><i class=\"material-icons\">link</i></a></h5>\n<p>When bootstrapping a component, Angular mounts it onto a target DOM element\nand kicks off automatic change detection. The target DOM element can be\nprovided using the <code>rootSelectorOrNode</code> argument.</p>\n<p>If the target DOM element is not provided, Angular tries to find one on a page\nusing the <code>selector</code> of the component that is being bootstrapped\n(first matched element is used).</p>\n<h5 id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#example\"><i class=\"material-icons\">link</i></a></h5>\n<p>Generally, we define the component to bootstrap in the <code>bootstrap</code> array of <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>,\nbut it requires us to know the component while writing the application code.</p>\n<p>Imagine a situation where we have to wait for an API call to decide about the component to\nbootstrap. We can use the <code>ngDoBootstrap</code> hook of the <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> and call this method to\ndynamically bootstrap a component.</p>\n<code-example path=\"core/ts/platform/platform.ts\" region=\"componentSelector\">\nngDoBootstrap(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  this.fetchDataFromApi().then((componentName: string) => {\n    if (componentName === 'ComponentOne') {\n      appRef.bootstrap(ComponentOne);\n    } else {\n      appRef.bootstrap(ComponentTwo);\n    }\n  });\n}\n\n</code-example>\n<p>Optionally, a component can be mounted onto a DOM element that does not match the\nselector of the bootstrapped component.</p>\n<p>In the following example, we are providing a CSS selector to match the target element.</p>\n<code-example path=\"core/ts/platform/platform.ts\" region=\"cssSelector\">\nngDoBootstrap(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  appRef.bootstrap(ComponentThree, '#root-element');\n}\n\n</code-example>\n<p>While in this example, we are providing reference to a DOM node.</p>\n<code-example path=\"core/ts/platform/platform.ts\" region=\"domNode\">\nngDoBootstrap(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  const element = document.querySelector('#root-element');\n  appRef.bootstrap(ComponentFour, element);\n}\n\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"tick\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"tick\">tick()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#tick\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/application/application_ref.ts#L482-L495\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Invoke this method to explicitly process change detection and its side-effects.</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\"><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a></span>(): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-2\">Parameters</h6>\n  <p>There are no parameters.</p>\n  <h6 class=\"no-anchor\" id=\"returns-2\">Returns</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n    <tr>\n      <td class=\"description\">\n        <p>In development mode, <code><a href=\"api/core/testing/tick\" class=\"code-anchor\">tick</a>()</code> also performs a second change detection cycle to ensure that no\nfurther changes are detected. If additional changes are picked up during this second cycle,\nbindings in the app have side-effects that cannot be resolved in a single change detection\npass.\nIn this case, Angular throws an error, since an Angular application can only have one change\ndetection pass during which all change detection must complete.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"attachView\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"attachview\">attachView()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#attachview\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/application/application_ref.ts#L565-L577\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Attaches a view so that it will be dirty checked.\nThe view will be automatically detached when it is destroyed.\nThis will throw if the view is already attached to a ViewContainer.</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">attachView</span>(viewRef: <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-3\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>viewRef</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns-3\">Returns</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"detachView\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"detachview\">detachView()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#detachview\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/application/application_ref.ts#L578-L587\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Detaches a view from dirty checking again.</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">detachView</span>(viewRef: <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-4\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>viewRef</code>\n      </td>\n      <td class=\"param-type\"><code><a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a></code></td>\n      <td class=\"param-description\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns-4\">Returns</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"onDestroy\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"ondestroy\">onDestroy()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#ondestroy\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/application/application_ref.ts#L626-L637\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Registers a listener to be called when an instance is destroyed.</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">onDestroy</span>(callback: () => void): VoidFunction</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-5\">Parameters</h6>\n  <table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\">\n        <a id=\"\"></a>\n        <code>callback</code>\n      </td>\n      <td class=\"param-type\"><code>() => void</code></td>\n      <td class=\"param-description\">\n        <p>A callback function to add as a listener.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <h6 class=\"no-anchor\" id=\"returns-5\">Returns</h6>\n  <p><code>VoidFunction</code>: A function which unregisters a listener.</p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <a id=\"destroy\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th>\n    <div class=\"with-github-links\">\n      <h3 id=\"destroy\">destroy()<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#destroy\"><i class=\"material-icons\">link</i></a></h3>\n      <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/application/application_ref.ts#L638-L663\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n    </div>\n  </th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Destroys an Angular application represented by this <code><a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a></code>. Calling this function\nwill destroy the associated environment injectors as well as all the bootstrapped components\nwith their views.</p>\n</td>\n    </tr>\n    <tr>\n      <td>\n        <div class=\"overload-info\">\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"><span class=\"member-name\">destroy</span>(): void</code-example>\n\n  <h6 class=\"no-anchor\" id=\"parameters-6\">Parameters</h6>\n  <p>There are no parameters.</p>\n  <h6 class=\"no-anchor\" id=\"returns-6\">Returns</h6>\n  <p><code>void</code></p>\n\n</div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">Usage notes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"is-stable-examples\"></a>\n<h3 id=\"isstable-examples-and-caveats\">isStable examples and caveats<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ApplicationRef#isstable-examples-and-caveats\"><i class=\"material-icons\">link</i></a></h3>\n<p>Note two important points about <code>isStable</code>, demonstrated in the examples below:</p>\n<ul>\n<li>the application will never be stable if you start any kind\nof recurrent asynchronous task when the application starts\n(for example for a polling process, started with a <code>setInterval</code>, a <code>setTimeout</code>\nor using RxJS operators like <code>interval</code>);</li>\n<li>the <code>isStable</code> Observable runs outside of the Angular zone.</li>\n</ul>\n<p>Let's imagine that you start a recurrent task\n(here incrementing a counter, using RxJS <code>interval</code>),\nand at the same time subscribe to <code>isStable</code>.</p>\n<code-example>\nconstructor(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  appRef.isStable.pipe(\n     filter(stable => stable)\n  ).subscribe(() => console.log('App is stable now');\n  interval(1000).subscribe(counter => console.log(counter));\n}\n</code-example>\n<p>In this example, <code>isStable</code> will never emit <code>true</code>,\nand the trace \"App is stable now\" will never get logged.</p>\n<p>If you want to execute something when the app is stable,\nyou have to wait for the application to be stable\nbefore starting your polling process.</p>\n<code-example>\nconstructor(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  appRef.isStable.pipe(\n    first(stable => stable),\n    tap(stable => console.log('App is stable now')),\n    switchMap(() => interval(1000))\n  ).subscribe(counter => console.log(counter));\n}\n</code-example>\n<p>In this example, the trace \"App is stable now\" will be logged\nand then the counter starts incrementing every second.</p>\n<p>Note also that this Observable runs outside of the Angular zone,\nwhich means that the code in the subscription\nto this Observable will not trigger the change detection.</p>\n<p>Let's imagine that instead of logging the counter value,\nyou update a field of your component\nand display it in its template.</p>\n<code-example>\nconstructor(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>) {\n  appRef.isStable.pipe(\n    first(stable => stable),\n    switchMap(() => interval(1000))\n  ).subscribe(counter => this.value = counter);\n}\n</code-example>\n<p>As the <code>isStable</code> Observable runs outside the zone,\nthe <code>value</code> field will be updated properly,\nbut the template will not be refreshed!</p>\n<p>You'll have to manually trigger the change detection to update the template.</p>\n<code-example>\nconstructor(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>, cd: <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a>) {\n  appRef.isStable.pipe(\n    first(stable => stable),\n    switchMap(() => interval(1000))\n  ).subscribe(counter => {\n    this.value = counter;\n    cd.detectChanges();\n  });\n}\n</code-example>\n<p>Or make the subscription callback run inside the zone.</p>\n<code-example>\nconstructor(appRef: <a href=\"api/core/ApplicationRef\" class=\"code-anchor\">ApplicationRef</a>, zone: <a href=\"api/core/NgZone\" class=\"code-anchor\">NgZone</a>) {\n  appRef.isStable.pipe(\n    first(stable => stable),\n    switchMap(() => interval(1000))\n  ).subscribe(counter => zone.run(() => this.value = counter));\n}\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/ApplicationModule\n - api/core/ChangeDetectorRef\n - api/core/DoBootstrap\n - api/core/createComponent\n - api/platform-browser\n - api/platform-browser/bootstrapApplication\n - api/platform-browser/createApplication\n - api/platform-server/renderApplication\n - errors/NG0506\n - guide/bootstrapping\n - guide/component-interaction\n - guide/deprecations\n - guide/elements\n - guide/service-worker-communications\n - guide/ssr\n - guide/zone\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/ApplicationRef#applicationref\n - api/core/ApplicationRef#attachView\n - api/core/ApplicationRef#attachview\n - api/core/ApplicationRef#bootstrap\n - api/core/ApplicationRef#bootstrap-process\n - api/core/ApplicationRef#bootstrap-usage-notes\n - api/core/ApplicationRef#componentTypes\n - api/core/ApplicationRef#components\n - api/core/ApplicationRef#destroy\n - api/core/ApplicationRef#destroyed\n - api/core/ApplicationRef#detachView\n - api/core/ApplicationRef#detachview\n - api/core/ApplicationRef#example\n - api/core/ApplicationRef#injector\n - api/core/ApplicationRef#isStable\n - api/core/ApplicationRef#isstable-examples-and-caveats\n - api/core/ApplicationRef#methods\n - api/core/ApplicationRef#onDestroy\n - api/core/ApplicationRef#ondestroy\n - api/core/ApplicationRef#properties\n - api/core/ApplicationRef#provided-in\n - api/core/ApplicationRef#tick\n - api/core/ApplicationRef#usage-notes\n - api/core/ApplicationRef#viewCount\n - api/core/ChangeDetectorRef\n - api/core/ComponentFactory\n - api/core/ComponentRef\n - api/core/EnvironmentInjector\n - api/core/NgModule\n - api/core/NgZone\n - api/core/Type\n - api/core/ViewRef\n - api/core/testing/tick\n - https://github.com/angular/angular/tree/17.3.12/docs/PUBLIC_API.md#final-classes\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/application/application_ref.ts#L173-L679\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/application/application_ref.ts#L397-L481\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/application/application_ref.ts#L482-L495\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/application/application_ref.ts#L565-L577\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/application/application_ref.ts#L578-L587\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/application/application_ref.ts#L626-L637\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/application/application_ref.ts#L638-L663\n-->"
}