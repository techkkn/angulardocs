{
  "id": "api/core/Directive",
  "title": "Directive",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/core/Directive\", \"name\": \"Directive\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L375-L376\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"directive\">Directive<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#directive\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label decorator\">decorator</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>Decorator that marks a class as an Angular directive.\nYou can define your own directives to attach custom behavior to elements in the DOM.</p>\n\n    <p><a href=\"api/core/Directive#description\">See more...</a></p>\n  </section>\n<section class=\"decorator-overview\">\n  <table class=\"is-full-width list-table option-overview\">\n  <thead>\n    <tr><th>Option</th><th>Description</th></tr>\n  </thead>\n  <tbody>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#selector\">\n          <code>selector?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>The CSS selector that identifies this directive in a template\nand triggers instantiation of the directive.</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#inputs\">\n          <code>inputs?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>Enumerates the set of data-bound input properties for a directive</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#outputs\">\n          <code>outputs?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>Enumerates the set of event-bound output properties.</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#providers\">\n          <code>providers?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>Configures the <a href=\"guide/glossary#injector\">injector</a> of this\ndirective or component with a <a href=\"guide/glossary#di-token\">token</a>\nthat maps to a <a href=\"guide/glossary#provider\">provider</a> of a dependency.</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#exportAs\">\n          <code>exportAs?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>Defines the name that can be used in the template to assign this directive to a variable.</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#queries\">\n          <code>queries?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>Configures the queries that will be injected into the directive.</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#host\">\n          <code>host?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>Maps class properties to host element bindings for properties,\nattributes, and events, using a set of key-value pairs.</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#jit\">\n          <code>jit?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>When present, this directive/component is ignored by the AOT compiler.\nIt remains in distributed code, and the JIT compiler attempts to compile it\nat run time, in the browser.\nTo ensure the correct behavior, the app must import <code>@angular/compiler</code>.</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#standalone\">\n          <code>standalone?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>Angular directives marked as <code>standalone</code> do not need to be declared in an NgModule. Such\ndirectives don't depend on any \"intermediate context\" of an NgModule (ex. configured\nproviders).</p>\n\n      </td>\n    </tr>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Directive#hostDirectives\">\n          <code>hostDirectives?</code>\n        </a>\n      </td>\n      <td>\n\n        <p>Standalone directives that should be applied to the host whenever the directive is matched.\nBy default, none of the inputs or outputs of the host directives will be available on the host,\nunless they are specified in the <code>inputs</code> or <code>outputs</code> properties.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  \n  <div class=\"descendants decorator\">\n    <h2 id=\"subclasses\">Subclasses<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#subclasses\"><i class=\"material-icons\">link</i></a></h2>\n    \n<ul>\n  <li>\n    <code><a href=\"api/core/Component\" class=\"code-anchor\">Component</a></code>\n    \n  </li>\n</ul>\n  </div>\n</section>\n\n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p>The options provide configuration metadata that determines\nhow the directive should be processed, instantiated and used at\nruntime.</p>\n<p>Directive classes, like component classes, can implement\n<a href=\"guide/lifecycle-hooks\">life-cycle hooks</a> to influence their configuration and behavior.</p>\n  <p>Further information is available in the <a href=\"api/core/Directive#usage-notes\">Usage Notes...</a></p>\n</section>\n\n<section class=\"decorator-options\">\n  <h2 id=\"options\">Options<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#options\"><i class=\"material-icons\">link</i></a></h2>\n  \n  \n  <a id=\"selector\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"selector\">selector<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#selector\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L118-L145\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>The CSS selector that identifies this directive in a template\nand triggers instantiation of the directive.</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            selector?: string\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p>Declare as one of the following:</p>\n<ul>\n<li><code>element-name</code>: Select by element name.</li>\n<li><code>.class</code>: Select by class name.</li>\n<li><code>[attribute]</code>: Select by attribute name.</li>\n<li><code>[attribute=value]</code>: Select by attribute name and value.</li>\n<li><code>:not(sub_selector)</code>: Select only if the element does not match the <code>sub_selector</code>.</li>\n<li><code>selector1, selector2</code>: Select if either <code>selector1</code> or <code>selector2</code> matches.</li>\n</ul>\n<p>Angular only allows directives to apply on CSS selectors that do not cross\nelement boundaries.</p>\n<p>For the following template HTML, a directive with an <code>input[type=text]</code> selector,\nwould be instantiated only on the <code>&#x3C;input type=\"text\"></code> element.</p>\n<code-example language=\"html\">\n&#x3C;form>\n  &#x3C;input type=\"text\">\n  &#x3C;input type=\"radio\">\n&#x3C;form>\n</code-example>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"inputs\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"inputs\">inputs<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#inputs\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L146-L190\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>Enumerates the set of data-bound input properties for a directive</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            inputs?: ({\n    name: string;\n    alias?: string;\n    required?: boolean;\n    transform?: (value: any) => any;\n} | string)[]\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p>Angular automatically updates input properties during change detection.\nThe <code>inputs</code> property accepts either strings or object literals that configure the directive\nproperties that should be exposed as inputs.</p>\n<p>When an object literal is passed in, the <code>name</code> property indicates which property on the\nclass the input should write to, while the <code>alias</code> determines the name under\nwhich the input will be available in template bindings. The <code>required</code> property indicates that\nthe input is required which will trigger a compile-time error if it isn't passed in when the\ndirective is used.</p>\n<p>When a string is passed into the <code>inputs</code> array, it can have a format of <code>'name'</code> or\n<code>'name: alias'</code> where <code>name</code> is the property on the class that the directive should write\nto, while the <code>alias</code> determines the name under which the input will be available in\ntemplate bindings. String-based input definitions are assumed to be optional.</p>\n\n          \n          <p>The following example creates a component with two data-bound properties.</p>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'bank-account',\n  inputs: ['bankName', {name: 'id', alias: 'account-id'}],\n  template: `\n    Bank Name: {{bankName}}\n    Account Id: {{id}}\n  `\n})\nclass BankAccount {\n  bankName: string;\n  id: string;\n}\n</code-example>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"outputs\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"outputs\">outputs<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#outputs\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L191-L232\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>Enumerates the set of event-bound output properties.</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            outputs?: string[]\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p>When an output property emits an event, an event handler attached to that event\nin the template is invoked.</p>\n<p>The <code>outputs</code> property defines a set of <code>directiveProperty</code> to <code>alias</code>\nconfiguration:</p>\n<ul>\n<li><code>directiveProperty</code> specifies the component property that emits events.</li>\n<li><code>alias</code> specifies the DOM property the event handler is attached to.</li>\n</ul>\n\n          \n          <code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'child-dir',\n  outputs: [ 'bankNameChange' ],\n  template: `&#x3C;input (input)=\"bankNameChange.emit($event.target.value)\" />`\n})\nclass ChildDir {\n bankNameChange: <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&#x3C;string> = new <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&#x3C;string>();\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'main',\n  template: `\n    {{ bankName }} &#x3C;child-dir (bankNameChange)=\"onBankNameChange($event)\">&#x3C;/child-dir>\n  `\n})\nclass MainComponent {\n bankName: string;\n\n  onBankNameChange(bankName: string) {\n    this.bankName = bankName;\n  }\n}\n</code-example>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"providers\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"providers\">providers<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#providers\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L233-L239\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>Configures the <a href=\"guide/glossary#injector\">injector</a> of this\ndirective or component with a <a href=\"guide/glossary#di-token\">token</a>\nthat maps to a <a href=\"guide/glossary#provider\">provider</a> of a dependency.</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            providers?: <a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a>[]\n          </code-example>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"exportAs\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"exportas\">exportAs<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#exportas\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L240-L263\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>Defines the name that can be used in the template to assign this directive to a variable.</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            exportAs?: string\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: 'child-dir',\n  exportAs: 'child'\n})\nclass ChildDir {\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'main',\n  template: `&#x3C;child-dir #c=\"child\">&#x3C;/child-dir>`\n})\nclass MainComponent {\n}\n</code-example>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"queries\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"queries\">queries<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#queries\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L264-L301\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>Configures the queries that will be injected into the directive.</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            queries?: {\n    [key: string]: any;\n}\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p>Content queries are set before the <code>ngAfterContentInit</code> callback is called.\nView queries are set before the <code>ngAfterViewInit</code> callback is called.</p>\n\n          \n          <p>The following example shows how queries are defined\nand when their results are available in lifecycle hooks:</p>\n<code-example language=\"ts\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'someDir',\n  queries: {\n    <a href=\"api/core/contentChildren\" class=\"code-anchor\">contentChildren</a>: new <a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>(ChildDirective),\n    <a href=\"api/core/viewChildren\" class=\"code-anchor\">viewChildren</a>: new <a href=\"api/core/ViewChildren\" class=\"code-anchor\">ViewChildren</a>(ChildDirective)\n  },\n  template: '&#x3C;child-directive>&#x3C;/child-directive>'\n})\nclass SomeDir {\n  <a href=\"api/core/contentChildren\" class=\"code-anchor\">contentChildren</a>: <a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a>&#x3C;ChildDirective>,\n  <a href=\"api/core/viewChildren\" class=\"code-anchor\">viewChildren</a>: <a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a>&#x3C;ChildDirective>\n\n  ngAfterContentInit() {\n    // <a href=\"api/core/contentChildren\" class=\"code-anchor\">contentChildren</a> is set\n  }\n\n  ngAfterViewInit() {\n    // <a href=\"api/core/viewChildren\" class=\"code-anchor\">viewChildren</a> is set\n  }\n}\n</code-example>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"host\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"host\">host<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#host\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L302-L325\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>Maps class properties to host element bindings for properties,\nattributes, and events, using a set of key-value pairs.</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            host?: {\n    [key: string]: string;\n}\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p>Angular automatically checks host property bindings during change detection.\nIf a binding changes, Angular updates the directive's host element.</p>\n<p>When the key is a property of the host element, the property value is\npropagated to the specified DOM property.</p>\n<p>When the key is a static attribute in the DOM, the attribute value\nis propagated to the specified property in the host element.</p>\n<p>For event handling:</p>\n<ul>\n<li>The key is the DOM event that the directive listens to.\nTo listen to global events, add the target to the event name.\nThe target can be <code>window</code>, <code>document</code> or <code>body</code>.</li>\n<li>The value is the statement to execute when the event occurs. If the\nstatement evaluates to <code>false</code>, then <code>preventDefault</code> is applied on the DOM\nevent. A handler method can refer to the <code>$event</code> local variable.</li>\n</ul>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"jit\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"jit\">jit<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#jit\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L326-L333\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>When present, this directive/component is ignored by the AOT compiler.\nIt remains in distributed code, and the JIT compiler attempts to compile it\nat run time, in the browser.\nTo ensure the correct behavior, the app must import <code>@angular/compiler</code>.</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            jit?: true\n          </code-example>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  \n  \n  <a id=\"standalone\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"standalone\">standalone<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#standalone\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L334-L343\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>Angular directives marked as <code>standalone</code> do not need to be declared in an NgModule. Such\ndirectives don't depend on any \"intermediate context\" of an NgModule (ex. configured\nproviders).</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            standalone?: boolean\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p>More information about standalone components, directives, and pipes can be found in <a href=\"guide/standalone-components\">this\nguide</a>.</p>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n  \n  \n  \n  <a id=\"hostDirectives\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"hostdirectives\">hostDirectives<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#hostdirectives\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L351-L366\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>Standalone directives that should be applied to the host whenever the directive is matched.\nBy default, none of the inputs or outputs of the host directives will be available on the host,\nunless they are specified in the <code>inputs</code> or <code>outputs</code> properties.</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            hostDirectives?: (<a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&#x3C;unknown> | {\n    directive: <a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&#x3C;unknown>;\n    inputs?: string[];\n    outputs?: string[];\n})[]\n          </code-example>\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <p>You can additionally alias inputs and outputs by putting a colon and the alias after the\noriginal input or output name. For example, if a directive applied via <code>hostDirectives</code>\ndefines an input named <code>menuDisabled</code>, you can alias this to <code>disabled</code> by adding\n<code>'menuDisabled: disabled'</code> as an entry to <code>inputs</code>.</p>\n\n          \n        </td>\n      </tr>\n      \n    </tbody>\n  </table>\n  \n  \n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">Usage notes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p>To define a directive, mark the class with the decorator and provide metadata.</p>\n<code-example language=\"ts\">\nimport {<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>} from '@angular/core';\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: 'my-directive',\n})\nexport class MyDirective {\n...\n}\n</code-example>\n<h3 id=\"declaring-directives\">Declaring directives<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#declaring-directives\"><i class=\"material-icons\">link</i></a></h3>\n<p>In order to make a directive available to other components in your application, you should do\none of the following:</p>\n<ul>\n<li>either mark the directive as <a href=\"guide/standalone-components\">standalone</a>,</li>\n<li>or declare it in an NgModule by adding it to the <code>declarations</code> and <code>exports</code> fields.</li>\n</ul>\n<p><strong> Marking a directive as standalone </strong></p>\n<p>You can add the <code>standalone: true</code> flag to the Directive decorator metadata to declare it as\n<a href=\"guide/standalone-components\">standalone</a>:</p>\n<code-example language=\"ts\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  standalone: true,\n  selector: 'my-directive',\n})\nclass MyDirective {}\n</code-example>\n<p>When marking a directive as standalone, please make sure that the directive is not already\ndeclared in an NgModule.</p>\n<p><strong> Declaring a directive in an NgModule </strong></p>\n<p>Another approach is to declare a directive in an NgModule:</p>\n<code-example language=\"ts\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: 'my-directive',\n})\nclass MyDirective {}\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [MyDirective, SomeComponent],\n  exports: [MyDirective], // making it available outside of this module\n})\nclass SomeNgModule {}\n</code-example>\n<p>When declaring a directive in an NgModule, please make sure that:</p>\n<ul>\n<li>the directive is declared in exactly one NgModule.</li>\n<li>the directive is not standalone.</li>\n<li>you do not re-declare a directive imported from another module.</li>\n<li>the directive is included into the <code>exports</code> field as well if you want this directive to be\naccessible for components outside of the NgModule.</li>\n</ul>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/Attribute\n - api/core/Component\n - api/core/ContentChild\n - api/core/ContentChildren\n - api/core/Host\n - api/core/HostAttributeToken\n - api/core/HostBinding\n - api/core/HostListener\n - api/core/Injectable\n - api/core/ViewChild\n - api/core/ViewChildren\n - api/core/ViewContainerRef\n - api/core/model\n - api/core/output\n - api/core/rxjs-interop/outputFromObservable\n - api/core/testing/TestBed\n - api/forms/AsyncValidator\n - api/forms/NG_ASYNC_VALIDATORS\n - api/forms/NG_VALIDATORS\n - api/forms/Validator\n - api/upgrade/static/UpgradeComponent\n - api/upgrade/static/testing/createAngularJSTestingModule\n - api/upgrade/static/testing/createAngularTestingModule\n - errors/NG0504\n - errors/NG0910\n - errors/NG1001\n - errors/NG8003\n - guide/architecture-components\n - guide/attribute-directives\n - guide/bootstrapping\n - guide/cheatsheet\n - guide/content-projection\n - guide/dependency-injection-in-action\n - guide/directive-composition-api\n - guide/elements\n - guide/form-validation\n - guide/forms\n - guide/glossary\n - guide/hierarchical-dependency-injection\n - guide/lifecycle-hooks\n - guide/model-inputs\n - guide/npm-packages\n - guide/standalone-components\n - guide/structural-directives\n - guide/styleguide\n - guide/testing-attribute-directives\n - guide/testing-utility-apis\n - guide/update-to-version-15\n - guide/upgrade\n - guide/what-is-angular\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/Component\n - api/core/ContentChildren\n - api/core/Directive#declaring-directives\n - api/core/Directive#description\n - api/core/Directive#directive\n - api/core/Directive#exportAs\n - api/core/Directive#exportas\n - api/core/Directive#host\n - api/core/Directive#hostDirectives\n - api/core/Directive#hostdirectives\n - api/core/Directive#inputs\n - api/core/Directive#jit\n - api/core/Directive#options\n - api/core/Directive#outputs\n - api/core/Directive#providers\n - api/core/Directive#queries\n - api/core/Directive#selector\n - api/core/Directive#standalone\n - api/core/Directive#subclasses\n - api/core/Directive#usage-notes\n - api/core/EventEmitter\n - api/core/NgModule\n - api/core/Provider\n - api/core/QueryList\n - api/core/Type\n - api/core/ViewChildren\n - api/core/contentChildren\n - api/core/viewChildren\n - guide/glossary#di-token\n - guide/glossary#injector\n - guide/glossary#provider\n - guide/lifecycle-hooks\n - guide/standalone-components\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L118-L145\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L146-L190\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L191-L232\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L233-L239\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L240-L263\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L264-L301\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L302-L325\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L326-L333\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L334-L343\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L351-L366\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/metadata/directives.ts#L375-L376\n-->"
}