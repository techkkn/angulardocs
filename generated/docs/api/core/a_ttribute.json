{
  "id": "api/core/Attribute",
  "title": "Attribute",
  "contents": "<article>\n  <div class=\"breadcrumb-container\">\n    <div class=\"breadcrumb\">\n      <script type=\"application/ld+json\">\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          \"itemListElement\": [\n            { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io/api\", \"name\": \"API\" } },\n            { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } },\n            { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/core/Attribute\", \"name\": \"Attribute\" } }\n          ]\n        }\n      </script>\n        <a href=\"/api\">API</a> > <a href=\"api/core\">@angular/core</a>\n    </div>\n    <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/di/metadata_attr.ts#L63-L65\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"attribute\">Attribute<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Attribute#attribute\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label decorator\">decorator</label>\n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n  <section class=\"short-description\">\n    <p>Parameter decorator for a directive constructor that designates\na host-element attribute whose value is injected as a constant string literal.</p>\n\n  </section>\n<section class=\"decorator-overview\">\n  <table class=\"is-full-width list-table option-overview\">\n  <thead>\n    <tr><th>Option</th><th>Description</th></tr>\n  </thead>\n  <tbody>\n    <tr class=\"option\">\n      <td>\n        <a class=\"code-anchor\" href=\"api/core/Attribute#attributeName\">\n          <code>attributeName</code>\n        </a>\n      </td>\n      <td>\n\n        <p>The name of the attribute whose value can be injected.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n  \n</section>\n\n\n<section class=\"decorator-options\">\n  <h2 id=\"options\">Options<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Attribute#options\"><i class=\"material-icons\">link</i></a></h2>\n  \n  \n  <a id=\"attributeName\"></a>\n  <table class=\"is-full-width option-table\">\n    <thead>\n      <tr>\n        <th>\n          <div class=\"with-github-links\">\n            <h3 id=\"attributename\">attributeName<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Attribute#attributename\"><i class=\"material-icons\">link</i></a></h3>\n            <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/tree/17.3.12/packages/core/src/di/metadata_attr.ts#L50-L53\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          <p>The name of the attribute whose value can be injected.</p>\n\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n            attributeName: string\n          </code-example>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  \n</section>\n\n<section class=\"usage-notes\">\n  <h2 id=\"usage-notes\">Usage notes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Attribute#usage-notes\"><i class=\"material-icons\">link</i></a></h2>\n  <p>Suppose we have an <code>&#x3C;input></code> element and want to know its <code>type</code>.</p>\n<code-example language=\"html\">\n&#x3C;input type=\"text\">\n</code-example>\n<p>The following example uses the decorator to inject the string literal <code>text</code> in a directive.</p>\n<code-example path=\"core/ts/metadata/metadata.ts\" region=\"attributeMetadata\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({selector: 'input'})\nclass InputAttrDirective {\n  constructor(@<a href=\"api/core/Attribute\" class=\"code-anchor\">Attribute</a>('type') type: string) {\n    // type would be 'text' in this example\n  }\n}\n\n</code-example>\n<p>The following example uses the decorator in a component constructor.</p>\n<code-example path=\"core/ts/metadata/metadata.ts\" region=\"attributeFactory\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({selector: 'page', template: '<a href=\"api/platform-browser/Title\" class=\"code-anchor\">Title</a>: {{title}}'})\nclass Page {\n  title: string;\n  constructor(@<a href=\"api/core/Attribute\" class=\"code-anchor\">Attribute</a>('title') title: string) {\n    this.title = title;\n  }\n}\n\n</code-example>\n\n</section></div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - guide/attribute-directives\n-->\n<!-- links from this doc:\n - /api\n - api/core\n - api/core/Attribute#attribute\n - api/core/Attribute#attributeName\n - api/core/Attribute#attributename\n - api/core/Attribute#options\n - api/core/Attribute#usage-notes\n - api/core/Component\n - api/core/Directive\n - api/platform-browser/Title\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/di/metadata_attr.ts#L50-L53\n - https://github.com/angular/angular/tree/17.3.12/packages/core/src/di/metadata_attr.ts#L63-L65\n-->"
}