{
  "id": "guide/template-syntax",
  "title": "Template syntax",
  "contents": "\n\n\n\n\n<div class=\"content\">\n  <h1 id=\"template-syntax\">Template syntax<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-syntax#template-syntax\"><i class=\"material-icons\">link</i></a></h1>\n<p>In Angular, a <em>template</em> is a chunk of HTML.\nUse special syntax within a template to build on many of Angular's features.</p>\n<h2 id=\"prerequisites\">Prerequisites<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-syntax#prerequisites\"><i class=\"material-icons\">link</i></a></h2>\n<p>Before learning template syntax, you should be familiar with the following:</p>\n<ul>\n<li><a href=\"guide/architecture\">Angular concepts</a></li>\n<li>JavaScript</li>\n<li>HTML</li>\n<li>CSS</li>\n</ul>\n<!--todo: Do we still need the following section? It seems more relevant to those coming from AngularJS, which is now 7 versions ago. -->\n<!-- You may be familiar with the component/template duality from your experience with model-view-controller (MVC) or model-view-viewmodel (MVVM).\nIn Angular, the component plays the part of the controller/viewmodel, and the template represents the view. -->\n<p>Each Angular template in your application is a section of HTML to include as a part of the page that the browser displays.\nAn Angular HTML template renders a view, or user interface, in the browser, just like regular HTML, but with a lot more functionality.</p>\n<p>When you generate an Angular application with the Angular CLI, the <code>app.component.html</code> file is the default template containing placeholder HTML.</p>\n<p>The template syntax guides show you how to control the UX/UI by coordinating data between the class and the template.</p>\n<div class=\"is-helpful alert\">\n<p>Most of the Template Syntax guides have dedicated working example applications that demonstrate the individual topic of each guide.\nTo see all of them working together in one application, see the comprehensive <live-example title=\"Template Syntax Live Code\"></live-example>.</p>\n</div>\n<h2 id=\"empower-your-html\">Empower your HTML<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-syntax#empower-your-html\"><i class=\"material-icons\">link</i></a></h2>\n<p>Extend the HTML vocabulary of your applications with special Angular syntax in your templates.\nFor example, Angular helps you get and set DOM (Document Object Model) values dynamically with features such as built-in template functions, variables, event listening, and data binding.</p>\n<p>Almost all HTML syntax is valid template syntax.\nHowever, because an Angular template is part of an overall webpage, and not the entire page, you don't need to include elements such as <code>&#x3C;html></code>, <code>&#x3C;body></code>, or <code>&#x3C;base></code>, and can focus exclusively on the part of the page you are developing.</p>\n<div class=\"alert is-important\">\n<p>To eliminate the risk of script injection attacks, Angular does not support the <code>&#x3C;script></code> element in templates.\nAngular ignores the <code>&#x3C;script></code> tag and outputs a warning to the browser console.\nFor more information, see the <a href=\"guide/security\">Security</a> page.</p>\n</div>\n<h2 id=\"more-on-template-syntax\">More on template syntax<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/template-syntax#more-on-template-syntax\"><i class=\"material-icons\">link</i></a></h2>\n<p>You might also be interested in the following:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Topics</th>\n<th align=\"left\">Details</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><a href=\"guide/interpolation\">Interpolation</a></td>\n<td align=\"left\">Learn how to use interpolation and expressions in HTML.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"guide/template-statements\">Template statements</a></td>\n<td align=\"left\">Respond to events in your templates.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"guide/binding-syntax\">Binding syntax</a></td>\n<td align=\"left\">Use binding to coordinate values in your application.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"guide/property-binding\">Property binding</a></td>\n<td align=\"left\">Set properties of target elements or directive <code>@<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>()</code> decorators.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"guide/attribute-binding\">Attribute, class, and style bindings</a></td>\n<td align=\"left\">Set the value of attributes, classes, and styles.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"guide/event-binding\">Event binding</a></td>\n<td align=\"left\">Listen for events and your HTML.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"guide/two-way-binding\">Two-way binding</a></td>\n<td align=\"left\">Share data between a class and its template.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"guide/built-in-directives\">Built-in directives</a></td>\n<td align=\"left\">Listen to and modify the behavior and layout of HTML.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"guide/template-reference-variables\">Template reference variables</a></td>\n<td align=\"left\">Use special variables to reference a DOM element within a template.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"guide/inputs-outputs\">Inputs and Outputs</a></td>\n<td align=\"left\">Share data between the parent context and child directives or components</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"guide/template-expression-operators\">Template expression operators</a></td>\n<td align=\"left\">Learn about the pipe operator (<code>|</code>), and protect against <code>null</code> or <code>undefined</code> values in your HTML.</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"guide/svg-in-templates\">SVG in templates</a></td>\n<td align=\"left\">Dynamically generate interactive graphics.</td>\n</tr>\n</tbody>\n</table>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">Last reviewed on Mon Feb 28 2022</div>\n</div>\n\n<!-- links to this doc:\n - guide/architecture-components\n - guide/architecture-next-steps\n - guide/component-overview\n - guide/example-apps-list\n - guide/forms\n - guide/glossary\n - guide/understanding-angular-overview\n - start/start-deployment\n - tutorial/first-app/first-app-lesson-07\n-->\n<!-- links from this doc:\n - api/core/Input\n - guide/architecture\n - guide/attribute-binding\n - guide/binding-syntax\n - guide/built-in-directives\n - guide/event-binding\n - guide/inputs-outputs\n - guide/interpolation\n - guide/property-binding\n - guide/security\n - guide/svg-in-templates\n - guide/template-expression-operators\n - guide/template-reference-variables\n - guide/template-statements\n - guide/template-syntax#empower-your-html\n - guide/template-syntax#more-on-template-syntax\n - guide/template-syntax#prerequisites\n - guide/template-syntax#template-syntax\n - guide/two-way-binding\n-->"
}