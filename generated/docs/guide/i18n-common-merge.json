{
  "id": "guide/i18n-common-merge",
  "title": "Merge translations into the application",
  "contents": "\n\n\n\n\n<div class=\"content\">\n  <h1 id=\"merge-translations-into-the-application\">Merge translations into the application<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#merge-translations-into-the-application\"><i class=\"material-icons\">link</i></a></h1>\n<p>To merge the completed translations into your project, complete the following actions</p>\n<ol>\n<li>Use the <a href=\"cli\" title=\"CLI Overview and Command Reference | Angular\">Angular CLI</a> to build a copy of the distributable files of your project</li>\n<li>Use the <code>\"localize\"</code> option to replace all of the i18n messages with the valid translations and build a localized variant application.\nA variant application is a complete copy of the distributable files of your application translated for a single locale.</li>\n</ol>\n<p>After you merge the translations, serve each distributable copy of the application using server-side language detection or different subdirectories.</p>\n<div class=\"alert is-helpful\">\n<p>For more information about how to serve each distributable copy of the application, see <a href=\"guide/i18n-common-deploy\" title=\"Deploy multiple locales | Angular\">deploying multiple locales</a>.</p>\n</div>\n<p>For a compile-time translation of the application, the build process uses <a href=\"guide/glossary#ahead-of-time-aot-compilation\" title=\"ahead-of-time (AOT) compilation - Glossary | Angular\">ahead-of-time (AOT) compilation</a> to produce a small, fast, ready-to-run application.</p>\n<div class=\"alert is-helpful\">\n<p>For a detailed explanation of the build process, see <a href=\"guide/build\" title=\"Building and serving Angular apps | Angular\">Building and serving Angular apps</a>.\nThe build process works for translation files in the <code>.xlf</code> format or in another format that Angular understands, such as <code>.xtb</code>.\nFor more information about translation file formats used by Angular, see <a href=\"guide/i18n-common-translation-files#change-the-source-language-file-format\" title=\"Change the source language file format - Work with translation files | Angular\">Change the source language file format</a></p>\n</div>\n<p>To build a separate distributable copy of the application for each locale, <a href=\"guide/i18n-common-merge#define-locales-in-the-build-configuration\" title=\"Define locales in the build configuration - Merge translations into the application | Angular\">define the locales in the build configuration</a> in the <a href=\"guide/workspace-config\" title=\"Angular workspace configuration | Angular\"><code>angular.json</code></a> workspace build configuration file of your project.</p>\n<p>This method shortens the build process by removing the requirement to perform a full application build for each locale.</p>\n<p>To <a href=\"guide/i18n-common-merge#generate-application-variants-for-each-locale\" title=\"Generate application variants for each locale - Merge translations into the application | Angular\">generate application variants for each locale</a>, use the <code>\"localize\"</code> option in the <a href=\"guide/workspace-config\" title=\"Angular workspace configuration | Angular\"><code>angular.json</code></a> workspace build configuration file.\nAlso, to <a href=\"guide/i18n-common-merge#build-from-the-command-line\" title=\"Build from the command line - Merge translations into the application | Angular\">build from the command line</a>, use the <a href=\"cli/build\" title=\"ng build | CLI | Angular\"><code>build</code></a> <a href=\"cli\" title=\"CLI Overview and Command Reference | Angular\">Angular CLI</a> command with the <code>--localize</code> option.</p>\n<div class=\"alert is-helpful\">\n<p>Optionally, <a href=\"guide/i18n-common-merge#apply-specific-build-options-for-just-one-locale\" title=\"Apply specific build options for just one locale - Merge translations into the application | Angular\">apply specific build options for just one locale</a> for a custom locale configuration.</p>\n</div>\n<h2 id=\"define-locales-in-the-build-configuration\">Define locales in the build configuration<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#define-locales-in-the-build-configuration\"><i class=\"material-icons\">link</i></a></h2>\n<p>Use the <code>i18n</code> project option in the <a href=\"guide/workspace-config\" title=\"Angular workspace configuration | Angular\"><code>angular.json</code></a> workspace build configuration file of your project to define locales for a project.</p>\n<p>The following sub-options identify the source language and tell the compiler where to find supported translations for the project.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Suboption</th>\n<th align=\"left\">Details</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>sourceLocale</code></td>\n<td align=\"left\">The locale you use within the application source code (<code>en-US</code> by default)</td>\n</tr>\n<tr>\n<td align=\"left\"><code>locales</code></td>\n<td align=\"left\">A map of locale identifiers to translation files</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"angularjson-for-en-us-and-fr-example\"><code>angular.json</code> for <code>en-US</code> and <code>fr</code> example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#angularjson-for-en-us-and-fr-example\"><i class=\"material-icons\">link</i></a></h3>\n<p>For example, the following excerpt of an <a href=\"guide/workspace-config\" title=\"Angular workspace configuration | Angular\"><code>angular.json</code></a> workspace build configuration file sets the source locale to <code>en-US</code> and provides the path to the French (<code>fr</code>) locale translation file.</p>\n<code-example header=\"angular.json\" path=\"i18n/angular.json\" region=\"locale-config\">\n  \"projects\": {\n    \"angular.io-example\": {\n      // ...\n      \"i18n\": {\n        \"sourceLocale\": \"en-US\",\n        \"locales\": {\n          \"fr\": {\n            \"translation\": \"src/locale/messages.fr.xlf\",\n            // ...\n          }\n        }\n      },\n      \"architect\": {\n        // ...\n      }\n    }\n  }\n}\n\n</code-example>\n<h2 id=\"generate-application-variants-for-each-locale\">Generate application variants for each locale<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#generate-application-variants-for-each-locale\"><i class=\"material-icons\">link</i></a></h2>\n<p>To use your locale definition in the build configuration, use the <code>\"localize\"</code> option in the <a href=\"guide/workspace-config\" title=\"Angular workspace configuration | Angular\"><code>angular.json</code></a> workspace build configuration file to tell the CLI which locales to generate for the build configuration.</p>\n<ul>\n<li>Set <code>\"localize\"</code> to <code>true</code> for all the locales previously defined in the build configuration.</li>\n<li>Set <code>\"localize\"</code> to an array of a subset of the previously defined locale identifiers to build only those locale versions.</li>\n<li>Set <code>\"localize\"</code> to <code>false</code> to disable localization and not generate any locale-specific versions.</li>\n</ul>\n<div class=\"alert is-helpful\">\n<p><strong>NOTE</strong>: <br>\n<a href=\"guide/glossary#ahead-of-time-aot-compilation\" title=\"ahead-of-time (AOT) compilation - Glossary | Angular\">Ahead-of-time (AOT) compilation</a> is required to localize component templates.</p>\n<p>If you changed this setting, set <code>\"aot\"</code> to <code>true</code> in order to use AOT.</p>\n</div>\n<div class=\"alert is-helpful\">\n<p>Due to the deployment complexities of i18n and the need to minimize rebuild time, the development server only supports localizing a single locale at a time.\nIf you set the <code>\"localize\"</code> option to <code>true</code>, define more than one locale, and use <code>ng serve</code>; then an error occurs.\nIf you want to develop against a specific locale, set the <code>\"localize\"</code> option to a specific locale.\nFor example, for French (<code>fr</code>), specify <code>\"localize\": [\"fr\"]</code>.</p>\n</div>\n<p>The CLI loads and registers the locale data, places each generated version in a locale-specific directory to keep it separate from other locale versions, and puts the directories within the configured <code>outputPath</code> for the project.\nFor each application variant the <code>lang</code> attribute of the <code>html</code> element is set to the locale.\nThe CLI also adjusts the HTML base HREF for each version of the application by adding the locale to the configured <code>baseHref</code>.</p>\n<p>Set the <code>\"localize\"</code> property as a shared configuration to effectively inherit for all the configurations.\nAlso, set the property to override other configurations.</p>\n<h3 id=\"angularjson-include-all-locales-from-build-example\"><code>angular.json</code> include all locales from build example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#angularjson-include-all-locales-from-build-example\"><i class=\"material-icons\">link</i></a></h3>\n<p>The following example displays the <code>\"localize\"</code> option set to <code>true</code> in the <a href=\"guide/workspace-config\" title=\"Angular workspace configuration | Angular\"><code>angular.json</code></a> workspace build configuration file, so that all locales defined in the build configuration are built.</p>\n<code-example header=\"angular.json\" path=\"i18n/angular.json\" region=\"build-localize-true\">\n\"build\": {\n  \"builder\": \"@angular-devkit/build-angular:application\",\n  \"options\": {\n    \"localize\": true,\n    // ...\n  },\n\n</code-example>\n<h2 id=\"build-from-the-command-line\">Build from the command line<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#build-from-the-command-line\"><i class=\"material-icons\">link</i></a></h2>\n<p>Also, use the <code>--localize</code> option with the <a href=\"cli/build\" title=\"ng build | CLI | Angular\"><code>ng build</code></a> command and your existing <code>production</code> configuration.\nThe CLI builds all locales defined in the build configuration.\nIf you set the locales in build configuration, it is similar to when you set the <code>\"localize\"</code> option to <code>true</code>.</p>\n<div class=\"alert is-helpful\">\n<p>For more information about how to set the locales, see <a href=\"guide/i18n-common-merge#generate-application-variants-for-each-locale\" title=\"Generate application variants for each locale - Merge translations into the application | Angular\">Generate application variants for each locale</a>.</p>\n</div>\n<code-example path=\"i18n/doc-files/commands.sh\" region=\"build-localize\">\nng build --localize\n\n</code-example>\n<h2 id=\"apply-specific-build-options-for-just-one-locale\">Apply specific build options for just one locale<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#apply-specific-build-options-for-just-one-locale\"><i class=\"material-icons\">link</i></a></h2>\n<p>To apply specific build options to only one locale, specify a single locale to create a custom locale-specific configuration.</p>\n<div class=\"alert is-important\">\n<p>Use the <a href=\"cli\" title=\"CLI Overview and Command Reference | Angular\">Angular CLI</a> development server (<code>ng serve</code>) with only a single locale.</p>\n</div>\n<h3 id=\"build-for-french-example\">build for French example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#build-for-french-example\"><i class=\"material-icons\">link</i></a></h3>\n<p>The following example displays a custom locale-specific configuration using a single locale.</p>\n<code-example header=\"angular.json\" path=\"i18n/angular.json\" region=\"build-single-locale\">\n  \"build\": {\n    // ...\n    \"configurations\": {\n      // ...\n      \"fr\": {\n        \"localize\": [\"fr\"]\n      }\n    },\n    // ...\n  },\n  \"serve\": {\n    \"builder\": \"@angular-devkit/build-angular:dev-server\",\n    \"configurations\": {\n      // ...\n      \"fr\": {\n        \"buildTarget\": \"angular.io-example:build:development,fr\"\n      }\n    },\n    // ...\n  },\n  // ...\n}\n\n</code-example>\n<p>Pass this configuration to the <code>ng serve</code> or <code>ng build</code> commands.\nThe following code example displays how to serve the French language file.</p>\n<code-example path=\"i18n/doc-files/commands.sh\" region=\"serve-french\">\nng serve --configuration=fr\n\n</code-example>\n<p>For production builds, use configuration composition to run both configurations.</p>\n<code-example path=\"i18n/doc-files/commands.sh\" region=\"build-production-french\">\nng build --configuration=production,fr\n\n</code-example>\n<code-example header=\"angular.json\" path=\"i18n/angular.json\" region=\"build-production-french\">\n\"architect\": {\n  \"build\": {\n    \"builder\": \"@angular-devkit/build-angular:application\",\n    \"options\": {\n      // ...\n    },\n    \"configurations\": {\n      // ...\n      \"fr\": {\n        \"localize\": [\"fr\"]\n      }\n    },\n    // ...\n  },\n  \"serve\": {\n    \"builder\": \"@angular-devkit/build-angular:dev-server\",\n    \"configurations\": {\n      \"production\": {\n        \"buildTarget\": \"angular.io-example:build:production\"\n      },\n      // ...\n      \"fr\": {\n        \"buildTarget\": \"angular.io-example:build:development,fr\"\n      }\n    },\n    // ...\n  },\n  // ...\n}\n\n</code-example>\n<h2 id=\"report-missing-translations\">Report missing translations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#report-missing-translations\"><i class=\"material-icons\">link</i></a></h2>\n<p>When a translation is missing, the build succeeds but generates a warning such as <code>Missing translation for message \"{translation_text}\"</code>.\nTo configure the level of warning that is generated by the Angular compiler, specify one of the following levels.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Warning level</th>\n<th align=\"left\">Details</th>\n<th align=\"left\">Output</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>error</code></td>\n<td align=\"left\">Throw an error and the build fails</td>\n<td align=\"left\">n/a</td>\n</tr>\n<tr>\n<td align=\"left\"><code>ignore</code></td>\n<td align=\"left\">Do nothing</td>\n<td align=\"left\">n/a</td>\n</tr>\n<tr>\n<td align=\"left\"><code>warning</code></td>\n<td align=\"left\">Displays the default warning in the console or shell</td>\n<td align=\"left\"><code>Missing translation for message \"{translation_text}\"</code></td>\n</tr>\n</tbody>\n</table>\n<p>Specify the warning level in the <code>options</code> section for the <code>build</code> target of your <a href=\"guide/workspace-config\" title=\"Angular workspace configuration | Angular\"><code>angular.json</code></a> workspace build configuration file.</p>\n<h3 id=\"angularjson-error-warning-example\"><code>angular.json</code> <code>error</code> warning example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#angularjson-error-warning-example\"><i class=\"material-icons\">link</i></a></h3>\n<p>The following example displays how to set the warning level to <code>error</code>.</p>\n<code-example header=\"angular.json\" path=\"i18n/angular.json\" region=\"missing-translation-error\">\n\"build\": {\n  \"builder\": \"@angular-devkit/build-angular:application\",\n  \"options\": {\n    // ...\n    \"i18nMissingTranslation\": \"error\"\n  },\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p>When you compile your Angular project into an Angular application, the instances of the <code>i18n</code> attribute are replaced with instances of the <a href=\"api/localize/init/$localize\" title=\"$localize | init - localize - API | Angular\"><code>$localize</code></a> tagged message string.\nThis means that your Angular application is translated after compilation.\nThis also means that you can create localized versions of your Angular application without re-compiling your entire Angular project for each locale.</p>\n<p>When you translate your Angular application, the <em>translation transformation</em> replaces and reorders the parts (static strings and expressions) of the template literal string with strings from a collection of translations.\nFor more information, see <a href=\"api/localize/init/$localize\" title=\"$localize | init - localize - API | Angular\"><code>$localize</code></a>.</p>\n<div class=\"alert is-helpful\">\n<p><strong>tldr;</strong></p>\n<p>Compile once, then translate for each locale.</p>\n</div>\n</div>\n<h2 id=\"whats-next\">What's next<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/i18n-common-merge#whats-next\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li><a href=\"guide/i18n-common-deploy\" title=\"Deploy multiple locales | Angular\">Deploy multiple locales</a></li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">Last reviewed on Mon Feb 28 2022</div>\n</div>\n\n<!-- links to this doc:\n - api/core/MissingTranslationStrategy\n - api/core/TRANSLATIONS\n - api/core/TRANSLATIONS_FORMAT\n - guide/i18n-common-overview\n - guide/i18n-common-translation-files\n - guide/workspace-config\n-->\n<!-- links from this doc:\n - api/localize/init/$localize\n - cli\n - cli/build\n - guide/build\n - guide/glossary#ahead-of-time-aot-compilation\n - guide/i18n-common-deploy\n - guide/i18n-common-merge#angularjson-error-warning-example\n - guide/i18n-common-merge#angularjson-for-en-us-and-fr-example\n - guide/i18n-common-merge#angularjson-include-all-locales-from-build-example\n - guide/i18n-common-merge#apply-specific-build-options-for-just-one-locale\n - guide/i18n-common-merge#build-for-french-example\n - guide/i18n-common-merge#build-from-the-command-line\n - guide/i18n-common-merge#define-locales-in-the-build-configuration\n - guide/i18n-common-merge#generate-application-variants-for-each-locale\n - guide/i18n-common-merge#merge-translations-into-the-application\n - guide/i18n-common-merge#report-missing-translations\n - guide/i18n-common-merge#whats-next\n - guide/i18n-common-translation-files#change-the-source-language-file-format\n - guide/workspace-config\n-->"
}