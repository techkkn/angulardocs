{
  "id": "guide/animation-transition-timing",
  "title": "Animation transition and timing",
  "contents": "\n\n\n\n\n<div class=\"content\">\n  <h1 id=\"animation-transition-and-timing\">Animation transition and timing<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animation-transition-timing#animation-transition-and-timing\"><i class=\"material-icons\">link</i></a></h1>\n<p>An animation <em>transition</em> specifies changes that occur between one state and another. Set the transition to make the change less abrupt. An animation <em>transition</em> specifies the changes that occur between one state and another.</p>\n<h2 id=\"animation-transition-function-defined\">Animation <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> function defined<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animation-transition-timing#animation-transition-function-defined\"><i class=\"material-icons\">link</i></a></h2>\n<p>The <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> function accepts two arguments:</p>\n<p>An expression that defines the direction between two transition states\nAn expression that accepts one or a series of <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> steps</p>\n<p>Use the <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> function of a transition to define:</p>\n<ul>\n<li>Length</li>\n<li>Delay</li>\n<li>Easing</li>\n<li>Style function for defining styles while transitions are taking place</li>\n</ul>\n<p>Use the <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> function to define the <code><a href=\"api/animations/keyframes\" class=\"code-anchor\">keyframes</a>()</code> function for multi-step animations.\nThese definitions are placed in the second argument of the <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> function.</p>\n<h2 id=\"animation-metadata-duration-delay-and-easing\">Animation metadata: duration, delay, and easing<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animation-transition-timing#animation-metadata-duration-delay-and-easing\"><i class=\"material-icons\">link</i></a></h2>\n<p>The <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> function accepts the <code>timings</code> and <code>styles</code> input parameters.</p>\n<p>The <code>timings</code> parameter takes either a number or a string defined in three parts.</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\n<a href=\"api/animations/animate\" class=\"code-anchor\">animate</a> (duration)\n\n</code-example>\n<p>or</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\n<a href=\"api/animations/animate\" class=\"code-anchor\">animate</a> ('duration delay easing')\n\n</code-example>\n<p>The first part, <code>duration</code>, is required.\nThe duration can be expressed in milliseconds as a number without quotes, or in seconds with quotes and a time specifier.\nFor example, a duration of a tenth of a second can be expressed as follows:</p>\n<ul>\n<li>\n<p>As a plain number, in milliseconds:\n<code>100</code></p>\n</li>\n<li>\n<p>In a string, as milliseconds:\n<code>'100ms'</code></p>\n</li>\n<li>\n<p>In a string, as seconds:\n<code>'0.1s'</code></p>\n</li>\n</ul>\n<p>The second argument, <code>delay</code>, has the same syntax as <code>duration</code>.\nFor example:</p>\n<ul>\n<li>Wait for 100 ms and then run for 200 ms: <code>'0.2s 100ms'</code></li>\n</ul>\n<p>The third argument, <code>easing</code>, controls how the animation <a href=\"https://easings.net\">accelerates and decelerates</a> during its runtime.\nFor example, <code>ease-in</code> causes the animation to begin slowly, and to pick up speed as it progresses.</p>\n<ul>\n<li>\n<p>Wait for 100 ms, run for 200 ms.\nUse a deceleration curve to start out fast and slowly decelerate to a resting point:</p>\n<code-example format=\"output\" language=\"shell\">\n\n0.2s 100ms ease-out\n\n</code-example>\n</li>\n<li>\n<p>Run for 200 ms, with no delay.\nUse a standard curve to start slow, speed up in the middle, and then decelerate slowly at the end:</p>\n<code-example format=\"output\" language=\"shell\">\n\n0.2s ease-in-out\n\n</code-example>\n</li>\n<li>\n<p>Start immediately, run for 200 ms.\nUse an acceleration curve to start slow and end at full velocity:\n<code-example format=\"output\" language=\"shell\"></code-example></p>\n<p>0.2s ease-in</p>\n\n</li>\n</ul>\n<div class=\"alert is-helpful\">\n<p><strong>NOTE</strong>: <br>\nSee the Material Design website's topic on <a href=\"https://material.io/design/motion/speed.html#easing\">Natural easing curves</a> for general information on easing curves.</p>\n</div>\n<p>This example provides a state transition from <code>open</code> to <code>closed</code> with a 1-second transition between states.</p>\n<code-example header=\"src/app/open-close.component.ts\" path=\"animations/src/app/open-close.component.ts\" region=\"transition1\">\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('open => closed', [\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('1s')\n]),\n\n</code-example>\n<p>In the preceding code snippet, the <code>=></code> operator indicates unidirectional transitions, and <code>&#x3C;=></code> is bidirectional.\nWithin the transition, <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> specifies how long the transition takes.\nIn this case, the state change from <code>open</code> to <code>closed</code> takes 1 second, expressed here as <code>1s</code>.</p>\n<p>This example adds a state transition from the <code>closed</code> state to the <code>open</code> state with a 0.5-second transition animation arc.</p>\n<code-example header=\"src/app/open-close.component.ts\" path=\"animations/src/app/open-close.component.ts\" region=\"transition2\">\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('closed => open', [\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.5s')\n]),\n\n</code-example>\n<div class=\"alert is-helpful\">\n<p><strong>NOTE</strong>: <br>\nUsing styles within <a href=\"api/animations/state\"><code>state</code></a> and <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a></code> functions:</p>\n<ul>\n<li>\n<p>Use <a href=\"api/animations/state\"><code>state()</code></a> to define styles that are applied at the end of each transition, they persist after the animation completes</p>\n</li>\n<li>\n<p>Use <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> to define intermediate styles, which create the illusion of motion during the animation</p>\n</li>\n<li>\n<p>When animations are turned off, <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> styles can be skipped, but <a href=\"api/animations/state\"><code>state()</code></a> styles can't</p>\n</li>\n<li>\n<p>Include multiple state pairs within the same <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>()</code> argument:</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>( 'on => off, off => void' )\n\n</code-example>\n</li>\n</ul>\n</div>\n\n  <div class=\"reviewed\">Last reviewed on Tue Oct 04 2022</div>\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/animations/animate\n - api/animations/keyframes\n - api/animations/state\n - api/animations/transition\n - guide/animation-transition-timing#animation-metadata-duration-delay-and-easing\n - guide/animation-transition-timing#animation-transition-and-timing\n - guide/animation-transition-timing#animation-transition-function-defined\n - https://easings.net\n - https://material.io/design/motion/speed.html#easing\n-->"
}