{
  "id": "guide/architecture-next-steps",
  "title": "Next steps: tools and techniques",
  "contents": "\n\n\n\n\n<div class=\"content\">\n  <h1 id=\"next-steps-tools-and-techniques\">Next steps: tools and techniques<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#next-steps-tools-and-techniques\"><i class=\"material-icons\">link</i></a></h1>\n<p>After you understand the basic Angular building blocks, you can learn more\nabout the features and tools that can help you develop and deliver Angular applications.</p>\n<ul>\n<li>Work through the <a href=\"tutorial\">Tour of Heroes</a> tutorial to get a feel for how to fit the basic building blocks together to create a well-designed application.</li>\n<li>Check out the <a href=\"guide/glossary\">Glossary</a> to understand Angular-specific terms and usage.</li>\n<li>Use the documentation to learn about key features in more depth, according to your stage of development and areas of interest.</li>\n</ul>\n<h2 id=\"application-architecture\">Application architecture<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#application-architecture\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li>The <strong>Main Concepts</strong> section located in the table of contents contains several topics that explain how to connect the application data in your <a href=\"guide/glossary#component\">components</a> to your page-display <a href=\"guide/glossary#template\">templates</a>, to create a complete interactive application.</li>\n<li>The <a href=\"guide/router\">Routing and navigation</a> guide provides in-depth information on how to construct applications that allow a user to navigate to different <a href=\"guide/glossary#view\">views</a> within your single-page application.</li>\n<li>The <a href=\"guide/dependency-injection\">Dependency injection</a> guide provides in-depth information on how to construct an application such that each component class can acquire the services and objects it needs to perform its function.</li>\n</ul>\n<h2 id=\"responsive-programming\">Responsive programming<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#responsive-programming\"><i class=\"material-icons\">link</i></a></h2>\n<p>The <a href=\"guide/template-syntax\">template syntax</a> and related topics contain details about how to display your component data when and where you want it within a view, and how to collect input from users that you can respond to.</p>\n<p>Additional pages and sections describe some basic programming techniques for Angular applications.</p>\n<ul>\n<li><a href=\"guide/lifecycle-hooks\">Lifecycle hooks</a>: Tap into key moments in the lifetime of a component, from its creation to its destruction, by implementing the lifecycle hook interfaces.</li>\n<li><a href=\"guide/observables\">Observables and event processing</a>: How to use observables with components and services to publish and subscribe to messages of any type, such as user-interaction events and asynchronous operation results.</li>\n<li><a href=\"guide/elements\">Angular elements</a>: How to package components as <em>custom elements</em> using Web Components, a web standard for defining new HTML elements in a framework-agnostic way.</li>\n<li><a href=\"guide/forms-overview\">Forms</a>: Support complex data entry scenarios with HTML-based input validation.</li>\n<li><a href=\"guide/animations\">Animations</a>: Use Angular's animation library to animate component behavior\nwithout deep knowledge of animation techniques or CSS.</li>\n</ul>\n<h2 id=\"client-server-interaction\">Client-server interaction<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#client-server-interaction\"><i class=\"material-icons\">link</i></a></h2>\n<p>Angular provides a framework for single-page applications, where most of the logic and data resides on the client.\nMost applications still need to access a server using the <code><a href=\"api/common/http/HttpClient\" class=\"code-anchor\">HttpClient</a></code> to access and save data.\nFor some platforms and applications, you might also want to use the PWA (Progressive Web App) model to improve the user experience.</p>\n<ul>\n<li><a href=\"guide/understanding-communicating-with-http\">HTTP</a>: Communicate with a server to get data, save data, and invoke server-side actions with an HTTP client.</li>\n<li><a href=\"guide/ssr\">Server-side rendering</a>: Angular Universal generates static application pages on the server through server-side rendering (SSR). This allows you to run your Angular application on the server in order to improve performance and show the first page quickly on mobile and low-powered devices, and also facilitate web crawlers.</li>\n<li><a href=\"guide/service-worker-intro\">Service workers and PWA</a>: Use a service worker to reduce dependency on the network and significantly improve the user experience.</li>\n<li><a href=\"guide/web-worker\">Web workers</a>: Learn how to run CPU-intensive computations in a background thread.</li>\n</ul>\n<h2 id=\"support-for-the-development-cycle\">Support for the development cycle<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#support-for-the-development-cycle\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li><a href=\"cli\">CLI Command Reference</a>: The Angular CLI is a command-line tool that you use to create projects, generate application and library code, and perform a variety of ongoing development tasks such as testing, bundling, and deployment.</li>\n<li><a href=\"guide/aot-compiler\">Compilation</a>: Angular provides just-in-time (JIT) compilation for the development environment, and ahead-of-time (AOT) compilation for the production environment.</li>\n<li><a href=\"guide/testing\">Testing platform</a>: Run unit tests on your application parts as they interact with the Angular framework.</li>\n<li><a href=\"guide/deployment\">Deployment</a>: Learn techniques for deploying your Angular application to a remote server.</li>\n<li><a href=\"guide/security\">Security guidelines</a>: Learn about Angular's built-in protections against common web-application vulnerabilities and attacks such as cross-site scripting attacks.</li>\n<li><a href=\"guide/i18n-overview\" title=\"Angular Internationalization | Angular\">Internationalization</a>: Make your application available in multiple languages with Angular's internationalization (i18n) tools.</li>\n<li><a href=\"guide/accessibility\">Accessibility</a>: Make your application accessible to all users.</li>\n</ul>\n<h2 id=\"file-structure-configuration-and-dependencies\">File structure, configuration, and dependencies<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#file-structure-configuration-and-dependencies\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li><a href=\"guide/file-structure\">Workspace and file structure</a>: Understand the structure of Angular workspace and project folders.</li>\n<li><a href=\"guide/build\">Building and serving</a>: Learn to define different build and proxy server configurations for your project, such as development, staging, and production.</li>\n<li><a href=\"guide/npm-packages\">npm packages</a>: The Angular Framework, Angular CLI, and components used by Angular applications are packaged as <a href=\"https://docs.npmjs.com\">npm</a> packages and distributed using the npm registry. The Angular CLI creates a default <code>package.json</code> file, which specifies a starter set of packages that work well together and jointly support many common application scenarios.</li>\n<li><a href=\"guide/typescript-configuration\">TypeScript configuration</a>: TypeScript is the primary language for Angular application development.</li>\n<li><a href=\"guide/browser-support\">Browser support</a>: Make your applications compatible across a wide range of browsers.</li>\n</ul>\n<h2 id=\"extending-angular\">Extending Angular<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/architecture-next-steps#extending-angular\"><i class=\"material-icons\">link</i></a></h2>\n<ul>\n<li><a href=\"guide/libraries\">Angular libraries</a>: Learn about using and creating re-usable libraries.</li>\n<li><a href=\"guide/schematics\">Schematics</a>: Learn about customizing and extending the CLI's generation capabilities.</li>\n<li><a href=\"guide/cli-builder\">CLI builders</a>: Learn about customizing and extending the CLI's ability to apply tools to perform complex tasks, such as building and testing applications.</li>\n</ul>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  <div class=\"reviewed\">Last reviewed on Mon Sep 25 2023</div>\n</div>\n\n<!-- links to this doc:\n - guide/architecture\n-->\n<!-- links from this doc:\n - api/common/http/HttpClient\n - cli\n - guide/accessibility\n - guide/animations\n - guide/aot-compiler\n - guide/architecture-next-steps#application-architecture\n - guide/architecture-next-steps#client-server-interaction\n - guide/architecture-next-steps#extending-angular\n - guide/architecture-next-steps#file-structure-configuration-and-dependencies\n - guide/architecture-next-steps#next-steps-tools-and-techniques\n - guide/architecture-next-steps#responsive-programming\n - guide/architecture-next-steps#support-for-the-development-cycle\n - guide/browser-support\n - guide/build\n - guide/cli-builder\n - guide/dependency-injection\n - guide/deployment\n - guide/elements\n - guide/file-structure\n - guide/forms-overview\n - guide/glossary\n - guide/glossary#component\n - guide/glossary#template\n - guide/glossary#view\n - guide/i18n-overview\n - guide/libraries\n - guide/lifecycle-hooks\n - guide/npm-packages\n - guide/observables\n - guide/router\n - guide/schematics\n - guide/security\n - guide/service-worker-intro\n - guide/ssr\n - guide/template-syntax\n - guide/testing\n - guide/typescript-configuration\n - guide/understanding-communicating-with-http\n - guide/web-worker\n - tutorial\n - https://docs.npmjs.com\n-->"
}