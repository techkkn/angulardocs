{
  "id": "guide/animations-attach-to-html-template",
  "title": "Define animations and attach to an HTML template",
  "contents": "\n\n\n\n\n<div class=\"content\">\n  <h1 id=\"define-animations-and-attach-to-an-html-template\">Define animations and attach to an HTML template<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animations-attach-to-html-template#define-animations-and-attach-to-an-html-template\"><i class=\"material-icons\">link</i></a></h1>\n<p>Animations are defined in the metadata of the component that controls the HTML element to be animated.</p>\n<h2 id=\"define-the-animation\">Define the animation<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animations-attach-to-html-template#define-the-animation\"><i class=\"material-icons\">link</i></a></h2>\n<p>Put the code that defines your animations under the <code>animations:</code> property within the <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>()</code> decorator.</p>\n<code-example header=\"src/app/open-close.component.ts\" path=\"animations/src/app/open-close.component.ts\" region=\"component\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  standalone: true,\n  selector: 'app-open-close',\n  animations: [\n    <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>('openClose', [\n      // ...\n      state('open', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({\n        height: '200px',\n        opacity: 1,\n        backgroundColor: 'yellow'\n      })),\n      state('closed', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({\n        height: '100px',\n        opacity: 0.8,\n        backgroundColor: 'blue'\n      })),\n      <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('open => closed', [\n        <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('1s')\n      ]),\n      <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('closed => open', [\n        <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.5s')\n      ]),\n    ]),\n  ],\n  templateUrl: 'open-close.component.html',\n  styleUrls: ['open-close.component.css']\n})\nexport class OpenCloseComponent {\n  isOpen = true;\n\n  toggle() {\n    this.isOpen = !this.isOpen;\n  }\n\n}\n\n</code-example>\n<p>When an animation trigger for a component is defined, attach it to an element in the template. Wrap the trigger name in brackets and precede it with an <code>@</code> symbol.\nBind the trigger to a template expression using standard Angular property binding syntax. The <code>triggerName</code> is the name of the trigger, and <code>expression</code> evaluates to a defined animation state.</p>\n<code-example format=\"typescript\" language=\"typescript\">\n\n&#x3C;div [@triggerName]=\"expression\">â€¦&#x3C;/div>;\n\n</code-example>\n<p>The animation is executed or triggered when the expression value changes to a new state.</p>\n<p>The following code snippet binds the trigger to the value of the <code>isOpen</code> property.</p>\n<code-example header=\"src/app/open-close.component.html\" path=\"animations/src/app/open-close.component.1.html\" region=\"trigger\">\n&#x3C;nav>\n  &#x3C;button type=\"button\" (click)=\"toggle()\">Toggle Open/Close&#x3C;/button>\n&#x3C;/nav>\n\n&#x3C;div [@openClose]=\"isOpen ? 'open' : 'closed'\" class=\"open-close-container\">\n  &#x3C;p>The box is now {{ isOpen ? 'Open' : 'Closed' }}!&#x3C;/p>\n&#x3C;/div>\n\n</code-example>\n<p>In this example, when the <code>isOpen</code> expression evaluates to a defined state of <code>open</code> or <code>closed</code>, it notifies the trigger <code>openClose</code> of a state change.\nThen it's up to the <code>openClose</code> code to handle the state change and kick off a state change animation.</p>\n<p>For elements entering or leaving a page (inserted or removed from the DOM), you can make the animations conditional.\nFor example, use <code>*<a href=\"api/common/NgIf\" class=\"code-anchor\">ngIf</a></code> with the animation trigger in the HTML template.</p>\n<div class=\"alert is-helpful\">\n<p><strong>NOTE</strong>: <br>\nIn the component file, set the trigger that defines the animations as the value of the <code>animations:</code> property in the <code>@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>()</code> decorator.</p>\n<h2 id=\"attach-an-animation-to-an-html-template\">Attach an animation to an HTML template<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animations-attach-to-html-template#attach-an-animation-to-an-html-template\"><i class=\"material-icons\">link</i></a></h2>\n<p>In the HTML template file, use the trigger name to attach the defined animations to the HTML element to be animated.</p>\n</div>\n\n  <div class=\"reviewed\">Last reviewed on Fri Oct 28 2022</div>\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/animations/animate\n - api/animations/style\n - api/animations/transition\n - api/animations/trigger\n - api/common/NgIf\n - api/core/Component\n - guide/animations-attach-to-html-template#attach-an-animation-to-an-html-template\n - guide/animations-attach-to-html-template#define-animations-and-attach-to-an-html-template\n - guide/animations-attach-to-html-template#define-the-animation\n-->"
}