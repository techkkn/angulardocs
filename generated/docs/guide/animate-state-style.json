{
  "id": "guide/animate-state-style",
  "title": "Animate state and style",
  "contents": "\n\n\n\n\n<div class=\"content\">\n  <h1 id=\"animate-state-and-style\">Animate state and style<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animate-state-style#animate-state-and-style\"><i class=\"material-icons\">link</i></a></h1>\n<p>You can define a set of styles together to make up a specific state for animating elements and transitions. These states represent style at certain points in your animations that you can animate to and from. For example, you can animate a state as the starting point to a different state and the end of an animation.</p>\n<h2 id=\"what-is-a-state\">What is a state?<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animate-state-style#what-is-a-state\"><i class=\"material-icons\">link</i></a></h2>\n<p>A state is the condition of an animation. The Angular state() function takes two parameters: a unique name and a style. There is also an optional parameter.</p>\n<h2 id=\"why-would-you-want-to-use-state\">Why would you want to use state?<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/animate-state-style#why-would-you-want-to-use-state\"><i class=\"material-icons\">link</i></a></h2>\n<p>Aliasing a set of styles and allows you to reference that alias for animations in general. This can make animations more readable or more understandable at a glance. You can give animations a useful and descriptive state name, which allows you to quickly understand the purpose of that animation state.</p>\n<p>Use Angular's <a href=\"api/animations/state\"><code>state()</code></a> function to define different states to call at the end of each transition.\nThis function takes two arguments:\nA unique name like <code>open</code> or <code>closed</code> and a <code><a href=\"api/animations/style\" class=\"code-anchor\">style</a>()</code> function.</p>\n<p>Use the <code><a href=\"api/animations/style\" class=\"code-anchor\">style</a>()</code> function to define a set of styles to associate with a given state name.\nYou must use <a href=\"guide/glossary#case-conventions\"><em>camelCase</em></a> for style attributes that contain dashes, such as <code>backgroundColor</code> or wrap them in quotes, such as <code>'background-color'</code>.</p>\n<p>Angular's <a href=\"api/animations/state\"><code>state()</code></a> function works with the <code><a href=\"api/animations/style\" class=\"code-anchor\">style</a>⁣­(⁠)</code> function to set CSS style attributes.\nIn this code snippet, multiple style attributes are set at the same time for the state.\nIn the <code>open</code> state, the button has a height of 200 pixels, an opacity of 1, and a yellow background color.</p>\n<code-example header=\"src/app/open-close.component.ts\" path=\"animations/src/app/open-close.component.ts\" region=\"state1\">\n// ...\nstate('open', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({\n  height: '200px',\n  opacity: 1,\n  backgroundColor: 'yellow'\n})),\n\n</code-example>\n<p>In the following <code>closed</code> state, the button has a height of 100 pixels, an opacity of 0.8, and a background color of blue.</p>\n<code-example header=\"src/app/open-close.component.ts\" path=\"animations/src/app/open-close.component.ts\" region=\"state2\">\nstate('closed', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({\n  height: '100px',\n  opacity: 0.8,\n  backgroundColor: 'blue'\n})),\n\n</code-example>\n\n  <div class=\"reviewed\">Last reviewed on Fri Oct 28 2022</div>\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - api/animations/state\n - api/animations/style\n - guide/animate-state-style#animate-state-and-style\n - guide/animate-state-style#what-is-a-state\n - guide/animate-state-style#why-would-you-want-to-use-state\n - guide/glossary#case-conventions\n-->"
}